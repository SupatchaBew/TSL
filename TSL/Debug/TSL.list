
TSL.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00003bc4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002a4  08003c84  08003c84  00013c84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08003f28  08003f28  00013f28  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08003f2c  08003f2c  00013f2c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         00000018  20000000  08003f30  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000850  20000018  08003f48  00020018  2**2
                  ALLOC
  7 ._user_heap_stack 00000600  20000868  08003f48  00020868  2**0
                  ALLOC
  8 .ARM.attributes 00000028  00000000  00000000  00020018  2**0
                  CONTENTS, READONLY
  9 .debug_info   0001b6f1  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00003909  00000000  00000000  0003b731  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000a919  00000000  00000000  0003f03a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000fe8  00000000  00000000  00049958  2**3
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000ef8  00000000  00000000  0004a940  2**3
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  0000fca3  00000000  00000000  0004b838  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_line   00010004  00000000  00000000  0005b4db  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_str    00050e60  00000000  00000000  0006b4df  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .comment      0000007b  00000000  00000000  000bc33f  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00002814  00000000  00000000  000bc3bc  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000018 	.word	0x20000018
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08003c6c 	.word	0x08003c6c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	2000001c 	.word	0x2000001c
 8000104:	08003c6c 	.word	0x08003c6c

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <HAL_InitTick>:
 8000220:	b510      	push	{r4, lr}
 8000222:	0004      	movs	r4, r0
 8000224:	4b0f      	ldr	r3, [pc, #60]	; (8000264 <HAL_InitTick+0x44>)
 8000226:	7819      	ldrb	r1, [r3, #0]
 8000228:	20fa      	movs	r0, #250	; 0xfa
 800022a:	0080      	lsls	r0, r0, #2
 800022c:	f7ff ff6c 	bl	8000108 <__udivsi3>
 8000230:	0001      	movs	r1, r0
 8000232:	4b0d      	ldr	r3, [pc, #52]	; (8000268 <HAL_InitTick+0x48>)
 8000234:	6818      	ldr	r0, [r3, #0]
 8000236:	f7ff ff67 	bl	8000108 <__udivsi3>
 800023a:	f000 f889 	bl	8000350 <HAL_SYSTICK_Config>
 800023e:	2800      	cmp	r0, #0
 8000240:	d10d      	bne.n	800025e <HAL_InitTick+0x3e>
 8000242:	2c03      	cmp	r4, #3
 8000244:	d901      	bls.n	800024a <HAL_InitTick+0x2a>
 8000246:	2001      	movs	r0, #1
 8000248:	e00a      	b.n	8000260 <HAL_InitTick+0x40>
 800024a:	3001      	adds	r0, #1
 800024c:	2200      	movs	r2, #0
 800024e:	0021      	movs	r1, r4
 8000250:	4240      	negs	r0, r0
 8000252:	f000 f83f 	bl	80002d4 <HAL_NVIC_SetPriority>
 8000256:	4b03      	ldr	r3, [pc, #12]	; (8000264 <HAL_InitTick+0x44>)
 8000258:	605c      	str	r4, [r3, #4]
 800025a:	2000      	movs	r0, #0
 800025c:	e000      	b.n	8000260 <HAL_InitTick+0x40>
 800025e:	2001      	movs	r0, #1
 8000260:	bd10      	pop	{r4, pc}
 8000262:	46c0      	nop			; (mov r8, r8)
 8000264:	20000000 	.word	0x20000000
 8000268:	20000014 	.word	0x20000014

0800026c <HAL_Init>:
 800026c:	b510      	push	{r4, lr}
 800026e:	4a06      	ldr	r2, [pc, #24]	; (8000288 <HAL_Init+0x1c>)
 8000270:	6813      	ldr	r3, [r2, #0]
 8000272:	2110      	movs	r1, #16
 8000274:	430b      	orrs	r3, r1
 8000276:	6013      	str	r3, [r2, #0]
 8000278:	2000      	movs	r0, #0
 800027a:	f7ff ffd1 	bl	8000220 <HAL_InitTick>
 800027e:	f003 f839 	bl	80032f4 <HAL_MspInit>
 8000282:	2000      	movs	r0, #0
 8000284:	bd10      	pop	{r4, pc}
 8000286:	46c0      	nop			; (mov r8, r8)
 8000288:	40022000 	.word	0x40022000

0800028c <HAL_IncTick>:
 800028c:	4a03      	ldr	r2, [pc, #12]	; (800029c <HAL_IncTick+0x10>)
 800028e:	6811      	ldr	r1, [r2, #0]
 8000290:	4b03      	ldr	r3, [pc, #12]	; (80002a0 <HAL_IncTick+0x14>)
 8000292:	781b      	ldrb	r3, [r3, #0]
 8000294:	185b      	adds	r3, r3, r1
 8000296:	6013      	str	r3, [r2, #0]
 8000298:	4770      	bx	lr
 800029a:	46c0      	nop			; (mov r8, r8)
 800029c:	2000003c 	.word	0x2000003c
 80002a0:	20000000 	.word	0x20000000

080002a4 <HAL_GetTick>:
 80002a4:	4b01      	ldr	r3, [pc, #4]	; (80002ac <HAL_GetTick+0x8>)
 80002a6:	6818      	ldr	r0, [r3, #0]
 80002a8:	4770      	bx	lr
 80002aa:	46c0      	nop			; (mov r8, r8)
 80002ac:	2000003c 	.word	0x2000003c

080002b0 <HAL_Delay>:
 80002b0:	b570      	push	{r4, r5, r6, lr}
 80002b2:	0004      	movs	r4, r0
 80002b4:	f7ff fff6 	bl	80002a4 <HAL_GetTick>
 80002b8:	0005      	movs	r5, r0
 80002ba:	1c63      	adds	r3, r4, #1
 80002bc:	d002      	beq.n	80002c4 <HAL_Delay+0x14>
 80002be:	4b04      	ldr	r3, [pc, #16]	; (80002d0 <HAL_Delay+0x20>)
 80002c0:	781b      	ldrb	r3, [r3, #0]
 80002c2:	18e4      	adds	r4, r4, r3
 80002c4:	f7ff ffee 	bl	80002a4 <HAL_GetTick>
 80002c8:	1b40      	subs	r0, r0, r5
 80002ca:	42a0      	cmp	r0, r4
 80002cc:	d3fa      	bcc.n	80002c4 <HAL_Delay+0x14>
 80002ce:	bd70      	pop	{r4, r5, r6, pc}
 80002d0:	20000000 	.word	0x20000000

080002d4 <HAL_NVIC_SetPriority>:
 80002d4:	b570      	push	{r4, r5, r6, lr}
 80002d6:	2800      	cmp	r0, #0
 80002d8:	db11      	blt.n	80002fe <HAL_NVIC_SetPriority+0x2a>
 80002da:	0883      	lsrs	r3, r0, #2
 80002dc:	4d14      	ldr	r5, [pc, #80]	; (8000330 <HAL_NVIC_SetPriority+0x5c>)
 80002de:	33c0      	adds	r3, #192	; 0xc0
 80002e0:	009b      	lsls	r3, r3, #2
 80002e2:	595c      	ldr	r4, [r3, r5]
 80002e4:	2203      	movs	r2, #3
 80002e6:	4010      	ands	r0, r2
 80002e8:	00c0      	lsls	r0, r0, #3
 80002ea:	32fc      	adds	r2, #252	; 0xfc
 80002ec:	0016      	movs	r6, r2
 80002ee:	4086      	lsls	r6, r0
 80002f0:	43b4      	bics	r4, r6
 80002f2:	0189      	lsls	r1, r1, #6
 80002f4:	400a      	ands	r2, r1
 80002f6:	4082      	lsls	r2, r0
 80002f8:	4322      	orrs	r2, r4
 80002fa:	515a      	str	r2, [r3, r5]
 80002fc:	bd70      	pop	{r4, r5, r6, pc}
 80002fe:	b2c0      	uxtb	r0, r0
 8000300:	230f      	movs	r3, #15
 8000302:	4003      	ands	r3, r0
 8000304:	3b08      	subs	r3, #8
 8000306:	089b      	lsrs	r3, r3, #2
 8000308:	3306      	adds	r3, #6
 800030a:	009b      	lsls	r3, r3, #2
 800030c:	4a09      	ldr	r2, [pc, #36]	; (8000334 <HAL_NVIC_SetPriority+0x60>)
 800030e:	4694      	mov	ip, r2
 8000310:	4463      	add	r3, ip
 8000312:	685d      	ldr	r5, [r3, #4]
 8000314:	2403      	movs	r4, #3
 8000316:	4020      	ands	r0, r4
 8000318:	00c0      	lsls	r0, r0, #3
 800031a:	22ff      	movs	r2, #255	; 0xff
 800031c:	0014      	movs	r4, r2
 800031e:	4084      	lsls	r4, r0
 8000320:	43a5      	bics	r5, r4
 8000322:	0189      	lsls	r1, r1, #6
 8000324:	4011      	ands	r1, r2
 8000326:	4081      	lsls	r1, r0
 8000328:	4329      	orrs	r1, r5
 800032a:	6059      	str	r1, [r3, #4]
 800032c:	e7e6      	b.n	80002fc <HAL_NVIC_SetPriority+0x28>
 800032e:	46c0      	nop			; (mov r8, r8)
 8000330:	e000e100 	.word	0xe000e100
 8000334:	e000ed00 	.word	0xe000ed00

08000338 <HAL_NVIC_EnableIRQ>:
 8000338:	2800      	cmp	r0, #0
 800033a:	db05      	blt.n	8000348 <HAL_NVIC_EnableIRQ+0x10>
 800033c:	231f      	movs	r3, #31
 800033e:	4018      	ands	r0, r3
 8000340:	3b1e      	subs	r3, #30
 8000342:	4083      	lsls	r3, r0
 8000344:	4a01      	ldr	r2, [pc, #4]	; (800034c <HAL_NVIC_EnableIRQ+0x14>)
 8000346:	6013      	str	r3, [r2, #0]
 8000348:	4770      	bx	lr
 800034a:	46c0      	nop			; (mov r8, r8)
 800034c:	e000e100 	.word	0xe000e100

08000350 <HAL_SYSTICK_Config>:
 8000350:	3801      	subs	r0, #1
 8000352:	4b0a      	ldr	r3, [pc, #40]	; (800037c <HAL_SYSTICK_Config+0x2c>)
 8000354:	4298      	cmp	r0, r3
 8000356:	d80f      	bhi.n	8000378 <HAL_SYSTICK_Config+0x28>
 8000358:	4a09      	ldr	r2, [pc, #36]	; (8000380 <HAL_SYSTICK_Config+0x30>)
 800035a:	6050      	str	r0, [r2, #4]
 800035c:	4809      	ldr	r0, [pc, #36]	; (8000384 <HAL_SYSTICK_Config+0x34>)
 800035e:	6a03      	ldr	r3, [r0, #32]
 8000360:	021b      	lsls	r3, r3, #8
 8000362:	0a1b      	lsrs	r3, r3, #8
 8000364:	21c0      	movs	r1, #192	; 0xc0
 8000366:	0609      	lsls	r1, r1, #24
 8000368:	430b      	orrs	r3, r1
 800036a:	6203      	str	r3, [r0, #32]
 800036c:	2300      	movs	r3, #0
 800036e:	6093      	str	r3, [r2, #8]
 8000370:	3307      	adds	r3, #7
 8000372:	6013      	str	r3, [r2, #0]
 8000374:	2000      	movs	r0, #0
 8000376:	4770      	bx	lr
 8000378:	2001      	movs	r0, #1
 800037a:	e7fc      	b.n	8000376 <HAL_SYSTICK_Config+0x26>
 800037c:	00ffffff 	.word	0x00ffffff
 8000380:	e000e010 	.word	0xe000e010
 8000384:	e000ed00 	.word	0xe000ed00

08000388 <HAL_GPIO_Init>:
 8000388:	b5f0      	push	{r4, r5, r6, r7, lr}
 800038a:	46c6      	mov	lr, r8
 800038c:	b500      	push	{lr}
 800038e:	b082      	sub	sp, #8
 8000390:	2300      	movs	r3, #0
 8000392:	e038      	b.n	8000406 <HAL_GPIO_Init+0x7e>
 8000394:	2603      	movs	r6, #3
 8000396:	e000      	b.n	800039a <HAL_GPIO_Init+0x12>
 8000398:	2600      	movs	r6, #0
 800039a:	40ae      	lsls	r6, r5
 800039c:	0035      	movs	r5, r6
 800039e:	433d      	orrs	r5, r7
 80003a0:	3402      	adds	r4, #2
 80003a2:	00a4      	lsls	r4, r4, #2
 80003a4:	4e55      	ldr	r6, [pc, #340]	; (80004fc <HAL_GPIO_Init+0x174>)
 80003a6:	51a5      	str	r5, [r4, r6]
 80003a8:	4c55      	ldr	r4, [pc, #340]	; (8000500 <HAL_GPIO_Init+0x178>)
 80003aa:	6825      	ldr	r5, [r4, #0]
 80003ac:	4642      	mov	r2, r8
 80003ae:	43d4      	mvns	r4, r2
 80003b0:	002e      	movs	r6, r5
 80003b2:	4026      	ands	r6, r4
 80003b4:	684a      	ldr	r2, [r1, #4]
 80003b6:	03d2      	lsls	r2, r2, #15
 80003b8:	d502      	bpl.n	80003c0 <HAL_GPIO_Init+0x38>
 80003ba:	4642      	mov	r2, r8
 80003bc:	4315      	orrs	r5, r2
 80003be:	002e      	movs	r6, r5
 80003c0:	4d4f      	ldr	r5, [pc, #316]	; (8000500 <HAL_GPIO_Init+0x178>)
 80003c2:	602e      	str	r6, [r5, #0]
 80003c4:	686d      	ldr	r5, [r5, #4]
 80003c6:	002e      	movs	r6, r5
 80003c8:	4026      	ands	r6, r4
 80003ca:	684a      	ldr	r2, [r1, #4]
 80003cc:	0392      	lsls	r2, r2, #14
 80003ce:	d502      	bpl.n	80003d6 <HAL_GPIO_Init+0x4e>
 80003d0:	4642      	mov	r2, r8
 80003d2:	4315      	orrs	r5, r2
 80003d4:	002e      	movs	r6, r5
 80003d6:	4d4a      	ldr	r5, [pc, #296]	; (8000500 <HAL_GPIO_Init+0x178>)
 80003d8:	606e      	str	r6, [r5, #4]
 80003da:	68ad      	ldr	r5, [r5, #8]
 80003dc:	002e      	movs	r6, r5
 80003de:	4026      	ands	r6, r4
 80003e0:	684a      	ldr	r2, [r1, #4]
 80003e2:	02d2      	lsls	r2, r2, #11
 80003e4:	d502      	bpl.n	80003ec <HAL_GPIO_Init+0x64>
 80003e6:	4642      	mov	r2, r8
 80003e8:	4315      	orrs	r5, r2
 80003ea:	002e      	movs	r6, r5
 80003ec:	4d44      	ldr	r5, [pc, #272]	; (8000500 <HAL_GPIO_Init+0x178>)
 80003ee:	60ae      	str	r6, [r5, #8]
 80003f0:	68ed      	ldr	r5, [r5, #12]
 80003f2:	402c      	ands	r4, r5
 80003f4:	684a      	ldr	r2, [r1, #4]
 80003f6:	0292      	lsls	r2, r2, #10
 80003f8:	d502      	bpl.n	8000400 <HAL_GPIO_Init+0x78>
 80003fa:	4642      	mov	r2, r8
 80003fc:	432a      	orrs	r2, r5
 80003fe:	0014      	movs	r4, r2
 8000400:	4a3f      	ldr	r2, [pc, #252]	; (8000500 <HAL_GPIO_Init+0x178>)
 8000402:	60d4      	str	r4, [r2, #12]
 8000404:	3301      	adds	r3, #1
 8000406:	680a      	ldr	r2, [r1, #0]
 8000408:	0014      	movs	r4, r2
 800040a:	40dc      	lsrs	r4, r3
 800040c:	d071      	beq.n	80004f2 <HAL_GPIO_Init+0x16a>
 800040e:	2501      	movs	r5, #1
 8000410:	409d      	lsls	r5, r3
 8000412:	402a      	ands	r2, r5
 8000414:	4690      	mov	r8, r2
 8000416:	d0f5      	beq.n	8000404 <HAL_GPIO_Init+0x7c>
 8000418:	684c      	ldr	r4, [r1, #4]
 800041a:	2c02      	cmp	r4, #2
 800041c:	d001      	beq.n	8000422 <HAL_GPIO_Init+0x9a>
 800041e:	2c12      	cmp	r4, #18
 8000420:	d10e      	bne.n	8000440 <HAL_GPIO_Init+0xb8>
 8000422:	08dc      	lsrs	r4, r3, #3
 8000424:	3408      	adds	r4, #8
 8000426:	00a4      	lsls	r4, r4, #2
 8000428:	5827      	ldr	r7, [r4, r0]
 800042a:	2607      	movs	r6, #7
 800042c:	401e      	ands	r6, r3
 800042e:	00b6      	lsls	r6, r6, #2
 8000430:	220f      	movs	r2, #15
 8000432:	40b2      	lsls	r2, r6
 8000434:	4397      	bics	r7, r2
 8000436:	690a      	ldr	r2, [r1, #16]
 8000438:	40b2      	lsls	r2, r6
 800043a:	0016      	movs	r6, r2
 800043c:	433e      	orrs	r6, r7
 800043e:	5026      	str	r6, [r4, r0]
 8000440:	6802      	ldr	r2, [r0, #0]
 8000442:	005f      	lsls	r7, r3, #1
 8000444:	2403      	movs	r4, #3
 8000446:	0026      	movs	r6, r4
 8000448:	40be      	lsls	r6, r7
 800044a:	43f6      	mvns	r6, r6
 800044c:	4032      	ands	r2, r6
 800044e:	4694      	mov	ip, r2
 8000450:	684a      	ldr	r2, [r1, #4]
 8000452:	4014      	ands	r4, r2
 8000454:	40bc      	lsls	r4, r7
 8000456:	4662      	mov	r2, ip
 8000458:	4314      	orrs	r4, r2
 800045a:	6004      	str	r4, [r0, #0]
 800045c:	684c      	ldr	r4, [r1, #4]
 800045e:	1e62      	subs	r2, r4, #1
 8000460:	2a01      	cmp	r2, #1
 8000462:	d903      	bls.n	800046c <HAL_GPIO_Init+0xe4>
 8000464:	2c11      	cmp	r4, #17
 8000466:	d001      	beq.n	800046c <HAL_GPIO_Init+0xe4>
 8000468:	2c12      	cmp	r4, #18
 800046a:	d110      	bne.n	800048e <HAL_GPIO_Init+0x106>
 800046c:	6884      	ldr	r4, [r0, #8]
 800046e:	4034      	ands	r4, r6
 8000470:	46a4      	mov	ip, r4
 8000472:	68cc      	ldr	r4, [r1, #12]
 8000474:	40bc      	lsls	r4, r7
 8000476:	4662      	mov	r2, ip
 8000478:	4314      	orrs	r4, r2
 800047a:	6084      	str	r4, [r0, #8]
 800047c:	6844      	ldr	r4, [r0, #4]
 800047e:	43ac      	bics	r4, r5
 8000480:	684a      	ldr	r2, [r1, #4]
 8000482:	0912      	lsrs	r2, r2, #4
 8000484:	2501      	movs	r5, #1
 8000486:	4015      	ands	r5, r2
 8000488:	409d      	lsls	r5, r3
 800048a:	4325      	orrs	r5, r4
 800048c:	6045      	str	r5, [r0, #4]
 800048e:	68c4      	ldr	r4, [r0, #12]
 8000490:	4026      	ands	r6, r4
 8000492:	688c      	ldr	r4, [r1, #8]
 8000494:	40bc      	lsls	r4, r7
 8000496:	4334      	orrs	r4, r6
 8000498:	60c4      	str	r4, [r0, #12]
 800049a:	684a      	ldr	r2, [r1, #4]
 800049c:	00d2      	lsls	r2, r2, #3
 800049e:	d5b1      	bpl.n	8000404 <HAL_GPIO_Init+0x7c>
 80004a0:	4d18      	ldr	r5, [pc, #96]	; (8000504 <HAL_GPIO_Init+0x17c>)
 80004a2:	69ae      	ldr	r6, [r5, #24]
 80004a4:	2401      	movs	r4, #1
 80004a6:	4326      	orrs	r6, r4
 80004a8:	61ae      	str	r6, [r5, #24]
 80004aa:	69ad      	ldr	r5, [r5, #24]
 80004ac:	402c      	ands	r4, r5
 80004ae:	9401      	str	r4, [sp, #4]
 80004b0:	9c01      	ldr	r4, [sp, #4]
 80004b2:	089c      	lsrs	r4, r3, #2
 80004b4:	1ca5      	adds	r5, r4, #2
 80004b6:	00ad      	lsls	r5, r5, #2
 80004b8:	4e10      	ldr	r6, [pc, #64]	; (80004fc <HAL_GPIO_Init+0x174>)
 80004ba:	59af      	ldr	r7, [r5, r6]
 80004bc:	2503      	movs	r5, #3
 80004be:	401d      	ands	r5, r3
 80004c0:	00ad      	lsls	r5, r5, #2
 80004c2:	260f      	movs	r6, #15
 80004c4:	40ae      	lsls	r6, r5
 80004c6:	43b7      	bics	r7, r6
 80004c8:	2690      	movs	r6, #144	; 0x90
 80004ca:	05f6      	lsls	r6, r6, #23
 80004cc:	42b0      	cmp	r0, r6
 80004ce:	d100      	bne.n	80004d2 <HAL_GPIO_Init+0x14a>
 80004d0:	e762      	b.n	8000398 <HAL_GPIO_Init+0x10>
 80004d2:	4e0d      	ldr	r6, [pc, #52]	; (8000508 <HAL_GPIO_Init+0x180>)
 80004d4:	42b0      	cmp	r0, r6
 80004d6:	d008      	beq.n	80004ea <HAL_GPIO_Init+0x162>
 80004d8:	4e0c      	ldr	r6, [pc, #48]	; (800050c <HAL_GPIO_Init+0x184>)
 80004da:	42b0      	cmp	r0, r6
 80004dc:	d007      	beq.n	80004ee <HAL_GPIO_Init+0x166>
 80004de:	4e0c      	ldr	r6, [pc, #48]	; (8000510 <HAL_GPIO_Init+0x188>)
 80004e0:	42b0      	cmp	r0, r6
 80004e2:	d100      	bne.n	80004e6 <HAL_GPIO_Init+0x15e>
 80004e4:	e756      	b.n	8000394 <HAL_GPIO_Init+0xc>
 80004e6:	2605      	movs	r6, #5
 80004e8:	e757      	b.n	800039a <HAL_GPIO_Init+0x12>
 80004ea:	2601      	movs	r6, #1
 80004ec:	e755      	b.n	800039a <HAL_GPIO_Init+0x12>
 80004ee:	2602      	movs	r6, #2
 80004f0:	e753      	b.n	800039a <HAL_GPIO_Init+0x12>
 80004f2:	b002      	add	sp, #8
 80004f4:	bc04      	pop	{r2}
 80004f6:	4690      	mov	r8, r2
 80004f8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80004fa:	46c0      	nop			; (mov r8, r8)
 80004fc:	40010000 	.word	0x40010000
 8000500:	40010400 	.word	0x40010400
 8000504:	40021000 	.word	0x40021000
 8000508:	48000400 	.word	0x48000400
 800050c:	48000800 	.word	0x48000800
 8000510:	48000c00 	.word	0x48000c00

08000514 <HAL_GPIO_ReadPin>:
 8000514:	6903      	ldr	r3, [r0, #16]
 8000516:	420b      	tst	r3, r1
 8000518:	d101      	bne.n	800051e <HAL_GPIO_ReadPin+0xa>
 800051a:	2000      	movs	r0, #0
 800051c:	4770      	bx	lr
 800051e:	2001      	movs	r0, #1
 8000520:	e7fc      	b.n	800051c <HAL_GPIO_ReadPin+0x8>

08000522 <HAL_GPIO_WritePin>:
 8000522:	2a00      	cmp	r2, #0
 8000524:	d101      	bne.n	800052a <HAL_GPIO_WritePin+0x8>
 8000526:	6281      	str	r1, [r0, #40]	; 0x28
 8000528:	4770      	bx	lr
 800052a:	6181      	str	r1, [r0, #24]
 800052c:	e7fc      	b.n	8000528 <HAL_GPIO_WritePin+0x6>
	...

08000530 <HAL_RCC_OscConfig>:
 8000530:	b570      	push	{r4, r5, r6, lr}
 8000532:	b082      	sub	sp, #8
 8000534:	1e04      	subs	r4, r0, #0
 8000536:	d100      	bne.n	800053a <HAL_RCC_OscConfig+0xa>
 8000538:	e232      	b.n	80009a0 <HAL_RCC_OscConfig+0x470>
 800053a:	6803      	ldr	r3, [r0, #0]
 800053c:	07db      	lsls	r3, r3, #31
 800053e:	d526      	bpl.n	800058e <HAL_RCC_OscConfig+0x5e>
 8000540:	4bae      	ldr	r3, [pc, #696]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000542:	685a      	ldr	r2, [r3, #4]
 8000544:	230c      	movs	r3, #12
 8000546:	4013      	ands	r3, r2
 8000548:	2b04      	cmp	r3, #4
 800054a:	d018      	beq.n	800057e <HAL_RCC_OscConfig+0x4e>
 800054c:	4bab      	ldr	r3, [pc, #684]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800054e:	685a      	ldr	r2, [r3, #4]
 8000550:	230c      	movs	r3, #12
 8000552:	4013      	ands	r3, r2
 8000554:	2b08      	cmp	r3, #8
 8000556:	d00e      	beq.n	8000576 <HAL_RCC_OscConfig+0x46>
 8000558:	6863      	ldr	r3, [r4, #4]
 800055a:	2b01      	cmp	r3, #1
 800055c:	d03c      	beq.n	80005d8 <HAL_RCC_OscConfig+0xa8>
 800055e:	2b00      	cmp	r3, #0
 8000560:	d151      	bne.n	8000606 <HAL_RCC_OscConfig+0xd6>
 8000562:	4ba6      	ldr	r3, [pc, #664]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000564:	681a      	ldr	r2, [r3, #0]
 8000566:	49a6      	ldr	r1, [pc, #664]	; (8000800 <HAL_RCC_OscConfig+0x2d0>)
 8000568:	400a      	ands	r2, r1
 800056a:	601a      	str	r2, [r3, #0]
 800056c:	681a      	ldr	r2, [r3, #0]
 800056e:	49a5      	ldr	r1, [pc, #660]	; (8000804 <HAL_RCC_OscConfig+0x2d4>)
 8000570:	400a      	ands	r2, r1
 8000572:	601a      	str	r2, [r3, #0]
 8000574:	e036      	b.n	80005e4 <HAL_RCC_OscConfig+0xb4>
 8000576:	4ba1      	ldr	r3, [pc, #644]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000578:	685b      	ldr	r3, [r3, #4]
 800057a:	03db      	lsls	r3, r3, #15
 800057c:	d5ec      	bpl.n	8000558 <HAL_RCC_OscConfig+0x28>
 800057e:	4b9f      	ldr	r3, [pc, #636]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000580:	681b      	ldr	r3, [r3, #0]
 8000582:	039b      	lsls	r3, r3, #14
 8000584:	d503      	bpl.n	800058e <HAL_RCC_OscConfig+0x5e>
 8000586:	6863      	ldr	r3, [r4, #4]
 8000588:	2b00      	cmp	r3, #0
 800058a:	d100      	bne.n	800058e <HAL_RCC_OscConfig+0x5e>
 800058c:	e20b      	b.n	80009a6 <HAL_RCC_OscConfig+0x476>
 800058e:	6823      	ldr	r3, [r4, #0]
 8000590:	079b      	lsls	r3, r3, #30
 8000592:	d573      	bpl.n	800067c <HAL_RCC_OscConfig+0x14c>
 8000594:	4b99      	ldr	r3, [pc, #612]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000596:	685b      	ldr	r3, [r3, #4]
 8000598:	220c      	movs	r2, #12
 800059a:	421a      	tst	r2, r3
 800059c:	d05d      	beq.n	800065a <HAL_RCC_OscConfig+0x12a>
 800059e:	4b97      	ldr	r3, [pc, #604]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80005a0:	685a      	ldr	r2, [r3, #4]
 80005a2:	230c      	movs	r3, #12
 80005a4:	4013      	ands	r3, r2
 80005a6:	2b08      	cmp	r3, #8
 80005a8:	d053      	beq.n	8000652 <HAL_RCC_OscConfig+0x122>
 80005aa:	68e3      	ldr	r3, [r4, #12]
 80005ac:	2b00      	cmp	r3, #0
 80005ae:	d100      	bne.n	80005b2 <HAL_RCC_OscConfig+0x82>
 80005b0:	e086      	b.n	80006c0 <HAL_RCC_OscConfig+0x190>
 80005b2:	4a92      	ldr	r2, [pc, #584]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80005b4:	6813      	ldr	r3, [r2, #0]
 80005b6:	2101      	movs	r1, #1
 80005b8:	430b      	orrs	r3, r1
 80005ba:	6013      	str	r3, [r2, #0]
 80005bc:	f7ff fe72 	bl	80002a4 <HAL_GetTick>
 80005c0:	0005      	movs	r5, r0
 80005c2:	4b8e      	ldr	r3, [pc, #568]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	079b      	lsls	r3, r3, #30
 80005c8:	d471      	bmi.n	80006ae <HAL_RCC_OscConfig+0x17e>
 80005ca:	f7ff fe6b 	bl	80002a4 <HAL_GetTick>
 80005ce:	1b40      	subs	r0, r0, r5
 80005d0:	2802      	cmp	r0, #2
 80005d2:	d9f6      	bls.n	80005c2 <HAL_RCC_OscConfig+0x92>
 80005d4:	2003      	movs	r0, #3
 80005d6:	e1e4      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80005d8:	4a88      	ldr	r2, [pc, #544]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80005da:	6811      	ldr	r1, [r2, #0]
 80005dc:	2380      	movs	r3, #128	; 0x80
 80005de:	025b      	lsls	r3, r3, #9
 80005e0:	430b      	orrs	r3, r1
 80005e2:	6013      	str	r3, [r2, #0]
 80005e4:	6863      	ldr	r3, [r4, #4]
 80005e6:	2b00      	cmp	r3, #0
 80005e8:	d025      	beq.n	8000636 <HAL_RCC_OscConfig+0x106>
 80005ea:	f7ff fe5b 	bl	80002a4 <HAL_GetTick>
 80005ee:	0005      	movs	r5, r0
 80005f0:	4b82      	ldr	r3, [pc, #520]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	039b      	lsls	r3, r3, #14
 80005f6:	d4ca      	bmi.n	800058e <HAL_RCC_OscConfig+0x5e>
 80005f8:	f7ff fe54 	bl	80002a4 <HAL_GetTick>
 80005fc:	1b40      	subs	r0, r0, r5
 80005fe:	2864      	cmp	r0, #100	; 0x64
 8000600:	d9f6      	bls.n	80005f0 <HAL_RCC_OscConfig+0xc0>
 8000602:	2003      	movs	r0, #3
 8000604:	e1cd      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000606:	2b05      	cmp	r3, #5
 8000608:	d009      	beq.n	800061e <HAL_RCC_OscConfig+0xee>
 800060a:	4b7c      	ldr	r3, [pc, #496]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800060c:	681a      	ldr	r2, [r3, #0]
 800060e:	497c      	ldr	r1, [pc, #496]	; (8000800 <HAL_RCC_OscConfig+0x2d0>)
 8000610:	400a      	ands	r2, r1
 8000612:	601a      	str	r2, [r3, #0]
 8000614:	681a      	ldr	r2, [r3, #0]
 8000616:	497b      	ldr	r1, [pc, #492]	; (8000804 <HAL_RCC_OscConfig+0x2d4>)
 8000618:	400a      	ands	r2, r1
 800061a:	601a      	str	r2, [r3, #0]
 800061c:	e7e2      	b.n	80005e4 <HAL_RCC_OscConfig+0xb4>
 800061e:	4b77      	ldr	r3, [pc, #476]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000620:	6819      	ldr	r1, [r3, #0]
 8000622:	2280      	movs	r2, #128	; 0x80
 8000624:	02d2      	lsls	r2, r2, #11
 8000626:	430a      	orrs	r2, r1
 8000628:	601a      	str	r2, [r3, #0]
 800062a:	6819      	ldr	r1, [r3, #0]
 800062c:	2280      	movs	r2, #128	; 0x80
 800062e:	0252      	lsls	r2, r2, #9
 8000630:	430a      	orrs	r2, r1
 8000632:	601a      	str	r2, [r3, #0]
 8000634:	e7d6      	b.n	80005e4 <HAL_RCC_OscConfig+0xb4>
 8000636:	f7ff fe35 	bl	80002a4 <HAL_GetTick>
 800063a:	0005      	movs	r5, r0
 800063c:	4b6f      	ldr	r3, [pc, #444]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800063e:	681b      	ldr	r3, [r3, #0]
 8000640:	039b      	lsls	r3, r3, #14
 8000642:	d5a4      	bpl.n	800058e <HAL_RCC_OscConfig+0x5e>
 8000644:	f7ff fe2e 	bl	80002a4 <HAL_GetTick>
 8000648:	1b40      	subs	r0, r0, r5
 800064a:	2864      	cmp	r0, #100	; 0x64
 800064c:	d9f6      	bls.n	800063c <HAL_RCC_OscConfig+0x10c>
 800064e:	2003      	movs	r0, #3
 8000650:	e1a7      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000652:	4b6a      	ldr	r3, [pc, #424]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000654:	685b      	ldr	r3, [r3, #4]
 8000656:	03db      	lsls	r3, r3, #15
 8000658:	d4a7      	bmi.n	80005aa <HAL_RCC_OscConfig+0x7a>
 800065a:	4b68      	ldr	r3, [pc, #416]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800065c:	681b      	ldr	r3, [r3, #0]
 800065e:	079b      	lsls	r3, r3, #30
 8000660:	d504      	bpl.n	800066c <HAL_RCC_OscConfig+0x13c>
 8000662:	68e3      	ldr	r3, [r4, #12]
 8000664:	2b01      	cmp	r3, #1
 8000666:	d001      	beq.n	800066c <HAL_RCC_OscConfig+0x13c>
 8000668:	2001      	movs	r0, #1
 800066a:	e19a      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 800066c:	4963      	ldr	r1, [pc, #396]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800066e:	680b      	ldr	r3, [r1, #0]
 8000670:	22f8      	movs	r2, #248	; 0xf8
 8000672:	4393      	bics	r3, r2
 8000674:	6922      	ldr	r2, [r4, #16]
 8000676:	00d2      	lsls	r2, r2, #3
 8000678:	4313      	orrs	r3, r2
 800067a:	600b      	str	r3, [r1, #0]
 800067c:	6823      	ldr	r3, [r4, #0]
 800067e:	071b      	lsls	r3, r3, #28
 8000680:	d544      	bpl.n	800070c <HAL_RCC_OscConfig+0x1dc>
 8000682:	69e3      	ldr	r3, [r4, #28]
 8000684:	2b00      	cmp	r3, #0
 8000686:	d02e      	beq.n	80006e6 <HAL_RCC_OscConfig+0x1b6>
 8000688:	4a5c      	ldr	r2, [pc, #368]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800068a:	6a53      	ldr	r3, [r2, #36]	; 0x24
 800068c:	2101      	movs	r1, #1
 800068e:	430b      	orrs	r3, r1
 8000690:	6253      	str	r3, [r2, #36]	; 0x24
 8000692:	f7ff fe07 	bl	80002a4 <HAL_GetTick>
 8000696:	0005      	movs	r5, r0
 8000698:	4b58      	ldr	r3, [pc, #352]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800069a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800069c:	079b      	lsls	r3, r3, #30
 800069e:	d435      	bmi.n	800070c <HAL_RCC_OscConfig+0x1dc>
 80006a0:	f7ff fe00 	bl	80002a4 <HAL_GetTick>
 80006a4:	1b40      	subs	r0, r0, r5
 80006a6:	2802      	cmp	r0, #2
 80006a8:	d9f6      	bls.n	8000698 <HAL_RCC_OscConfig+0x168>
 80006aa:	2003      	movs	r0, #3
 80006ac:	e179      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80006ae:	4953      	ldr	r1, [pc, #332]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80006b0:	680b      	ldr	r3, [r1, #0]
 80006b2:	22f8      	movs	r2, #248	; 0xf8
 80006b4:	4393      	bics	r3, r2
 80006b6:	6922      	ldr	r2, [r4, #16]
 80006b8:	00d2      	lsls	r2, r2, #3
 80006ba:	4313      	orrs	r3, r2
 80006bc:	600b      	str	r3, [r1, #0]
 80006be:	e7dd      	b.n	800067c <HAL_RCC_OscConfig+0x14c>
 80006c0:	4a4e      	ldr	r2, [pc, #312]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80006c2:	6813      	ldr	r3, [r2, #0]
 80006c4:	2101      	movs	r1, #1
 80006c6:	438b      	bics	r3, r1
 80006c8:	6013      	str	r3, [r2, #0]
 80006ca:	f7ff fdeb 	bl	80002a4 <HAL_GetTick>
 80006ce:	0005      	movs	r5, r0
 80006d0:	4b4a      	ldr	r3, [pc, #296]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80006d2:	681b      	ldr	r3, [r3, #0]
 80006d4:	079b      	lsls	r3, r3, #30
 80006d6:	d5d1      	bpl.n	800067c <HAL_RCC_OscConfig+0x14c>
 80006d8:	f7ff fde4 	bl	80002a4 <HAL_GetTick>
 80006dc:	1b40      	subs	r0, r0, r5
 80006de:	2802      	cmp	r0, #2
 80006e0:	d9f6      	bls.n	80006d0 <HAL_RCC_OscConfig+0x1a0>
 80006e2:	2003      	movs	r0, #3
 80006e4:	e15d      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80006e6:	4a45      	ldr	r2, [pc, #276]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80006e8:	6a53      	ldr	r3, [r2, #36]	; 0x24
 80006ea:	2101      	movs	r1, #1
 80006ec:	438b      	bics	r3, r1
 80006ee:	6253      	str	r3, [r2, #36]	; 0x24
 80006f0:	f7ff fdd8 	bl	80002a4 <HAL_GetTick>
 80006f4:	0005      	movs	r5, r0
 80006f6:	4b41      	ldr	r3, [pc, #260]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80006f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80006fa:	079b      	lsls	r3, r3, #30
 80006fc:	d506      	bpl.n	800070c <HAL_RCC_OscConfig+0x1dc>
 80006fe:	f7ff fdd1 	bl	80002a4 <HAL_GetTick>
 8000702:	1b40      	subs	r0, r0, r5
 8000704:	2802      	cmp	r0, #2
 8000706:	d9f6      	bls.n	80006f6 <HAL_RCC_OscConfig+0x1c6>
 8000708:	2003      	movs	r0, #3
 800070a:	e14a      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 800070c:	6823      	ldr	r3, [r4, #0]
 800070e:	075b      	lsls	r3, r3, #29
 8000710:	d400      	bmi.n	8000714 <HAL_RCC_OscConfig+0x1e4>
 8000712:	e07f      	b.n	8000814 <HAL_RCC_OscConfig+0x2e4>
 8000714:	4b39      	ldr	r3, [pc, #228]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000716:	69db      	ldr	r3, [r3, #28]
 8000718:	00db      	lsls	r3, r3, #3
 800071a:	d41d      	bmi.n	8000758 <HAL_RCC_OscConfig+0x228>
 800071c:	4a37      	ldr	r2, [pc, #220]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800071e:	69d1      	ldr	r1, [r2, #28]
 8000720:	2080      	movs	r0, #128	; 0x80
 8000722:	0540      	lsls	r0, r0, #21
 8000724:	4301      	orrs	r1, r0
 8000726:	61d1      	str	r1, [r2, #28]
 8000728:	69d3      	ldr	r3, [r2, #28]
 800072a:	4003      	ands	r3, r0
 800072c:	9301      	str	r3, [sp, #4]
 800072e:	9b01      	ldr	r3, [sp, #4]
 8000730:	2501      	movs	r5, #1
 8000732:	4b35      	ldr	r3, [pc, #212]	; (8000808 <HAL_RCC_OscConfig+0x2d8>)
 8000734:	681b      	ldr	r3, [r3, #0]
 8000736:	05db      	lsls	r3, r3, #23
 8000738:	d510      	bpl.n	800075c <HAL_RCC_OscConfig+0x22c>
 800073a:	68a3      	ldr	r3, [r4, #8]
 800073c:	2b01      	cmp	r3, #1
 800073e:	d021      	beq.n	8000784 <HAL_RCC_OscConfig+0x254>
 8000740:	2b00      	cmp	r3, #0
 8000742:	d136      	bne.n	80007b2 <HAL_RCC_OscConfig+0x282>
 8000744:	4b2d      	ldr	r3, [pc, #180]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000746:	6a1a      	ldr	r2, [r3, #32]
 8000748:	2101      	movs	r1, #1
 800074a:	438a      	bics	r2, r1
 800074c:	621a      	str	r2, [r3, #32]
 800074e:	6a1a      	ldr	r2, [r3, #32]
 8000750:	3103      	adds	r1, #3
 8000752:	438a      	bics	r2, r1
 8000754:	621a      	str	r2, [r3, #32]
 8000756:	e01a      	b.n	800078e <HAL_RCC_OscConfig+0x25e>
 8000758:	2500      	movs	r5, #0
 800075a:	e7ea      	b.n	8000732 <HAL_RCC_OscConfig+0x202>
 800075c:	4a2a      	ldr	r2, [pc, #168]	; (8000808 <HAL_RCC_OscConfig+0x2d8>)
 800075e:	6811      	ldr	r1, [r2, #0]
 8000760:	2380      	movs	r3, #128	; 0x80
 8000762:	005b      	lsls	r3, r3, #1
 8000764:	430b      	orrs	r3, r1
 8000766:	6013      	str	r3, [r2, #0]
 8000768:	f7ff fd9c 	bl	80002a4 <HAL_GetTick>
 800076c:	0006      	movs	r6, r0
 800076e:	4b26      	ldr	r3, [pc, #152]	; (8000808 <HAL_RCC_OscConfig+0x2d8>)
 8000770:	681b      	ldr	r3, [r3, #0]
 8000772:	05db      	lsls	r3, r3, #23
 8000774:	d4e1      	bmi.n	800073a <HAL_RCC_OscConfig+0x20a>
 8000776:	f7ff fd95 	bl	80002a4 <HAL_GetTick>
 800077a:	1b80      	subs	r0, r0, r6
 800077c:	2864      	cmp	r0, #100	; 0x64
 800077e:	d9f6      	bls.n	800076e <HAL_RCC_OscConfig+0x23e>
 8000780:	2003      	movs	r0, #3
 8000782:	e10e      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000784:	4a1d      	ldr	r2, [pc, #116]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 8000786:	6a13      	ldr	r3, [r2, #32]
 8000788:	2101      	movs	r1, #1
 800078a:	430b      	orrs	r3, r1
 800078c:	6213      	str	r3, [r2, #32]
 800078e:	68a3      	ldr	r3, [r4, #8]
 8000790:	2b00      	cmp	r3, #0
 8000792:	d024      	beq.n	80007de <HAL_RCC_OscConfig+0x2ae>
 8000794:	f7ff fd86 	bl	80002a4 <HAL_GetTick>
 8000798:	0006      	movs	r6, r0
 800079a:	4b18      	ldr	r3, [pc, #96]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 800079c:	6a1b      	ldr	r3, [r3, #32]
 800079e:	079b      	lsls	r3, r3, #30
 80007a0:	d436      	bmi.n	8000810 <HAL_RCC_OscConfig+0x2e0>
 80007a2:	f7ff fd7f 	bl	80002a4 <HAL_GetTick>
 80007a6:	1b80      	subs	r0, r0, r6
 80007a8:	4b18      	ldr	r3, [pc, #96]	; (800080c <HAL_RCC_OscConfig+0x2dc>)
 80007aa:	4298      	cmp	r0, r3
 80007ac:	d9f5      	bls.n	800079a <HAL_RCC_OscConfig+0x26a>
 80007ae:	2003      	movs	r0, #3
 80007b0:	e0f7      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80007b2:	2b05      	cmp	r3, #5
 80007b4:	d009      	beq.n	80007ca <HAL_RCC_OscConfig+0x29a>
 80007b6:	4b11      	ldr	r3, [pc, #68]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80007b8:	6a1a      	ldr	r2, [r3, #32]
 80007ba:	2101      	movs	r1, #1
 80007bc:	438a      	bics	r2, r1
 80007be:	621a      	str	r2, [r3, #32]
 80007c0:	6a1a      	ldr	r2, [r3, #32]
 80007c2:	3103      	adds	r1, #3
 80007c4:	438a      	bics	r2, r1
 80007c6:	621a      	str	r2, [r3, #32]
 80007c8:	e7e1      	b.n	800078e <HAL_RCC_OscConfig+0x25e>
 80007ca:	4b0c      	ldr	r3, [pc, #48]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80007cc:	6a1a      	ldr	r2, [r3, #32]
 80007ce:	2104      	movs	r1, #4
 80007d0:	430a      	orrs	r2, r1
 80007d2:	621a      	str	r2, [r3, #32]
 80007d4:	6a1a      	ldr	r2, [r3, #32]
 80007d6:	3903      	subs	r1, #3
 80007d8:	430a      	orrs	r2, r1
 80007da:	621a      	str	r2, [r3, #32]
 80007dc:	e7d7      	b.n	800078e <HAL_RCC_OscConfig+0x25e>
 80007de:	f7ff fd61 	bl	80002a4 <HAL_GetTick>
 80007e2:	0006      	movs	r6, r0
 80007e4:	4b05      	ldr	r3, [pc, #20]	; (80007fc <HAL_RCC_OscConfig+0x2cc>)
 80007e6:	6a1b      	ldr	r3, [r3, #32]
 80007e8:	079b      	lsls	r3, r3, #30
 80007ea:	d511      	bpl.n	8000810 <HAL_RCC_OscConfig+0x2e0>
 80007ec:	f7ff fd5a 	bl	80002a4 <HAL_GetTick>
 80007f0:	1b80      	subs	r0, r0, r6
 80007f2:	4b06      	ldr	r3, [pc, #24]	; (800080c <HAL_RCC_OscConfig+0x2dc>)
 80007f4:	4298      	cmp	r0, r3
 80007f6:	d9f5      	bls.n	80007e4 <HAL_RCC_OscConfig+0x2b4>
 80007f8:	2003      	movs	r0, #3
 80007fa:	e0d2      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80007fc:	40021000 	.word	0x40021000
 8000800:	fffeffff 	.word	0xfffeffff
 8000804:	fffbffff 	.word	0xfffbffff
 8000808:	40007000 	.word	0x40007000
 800080c:	00001388 	.word	0x00001388
 8000810:	2d01      	cmp	r5, #1
 8000812:	d033      	beq.n	800087c <HAL_RCC_OscConfig+0x34c>
 8000814:	6823      	ldr	r3, [r4, #0]
 8000816:	06db      	lsls	r3, r3, #27
 8000818:	d510      	bpl.n	800083c <HAL_RCC_OscConfig+0x30c>
 800081a:	6963      	ldr	r3, [r4, #20]
 800081c:	2b01      	cmp	r3, #1
 800081e:	d033      	beq.n	8000888 <HAL_RCC_OscConfig+0x358>
 8000820:	3305      	adds	r3, #5
 8000822:	d151      	bne.n	80008c8 <HAL_RCC_OscConfig+0x398>
 8000824:	4a64      	ldr	r2, [pc, #400]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 8000826:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000828:	2104      	movs	r1, #4
 800082a:	438b      	bics	r3, r1
 800082c:	6353      	str	r3, [r2, #52]	; 0x34
 800082e:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8000830:	31f4      	adds	r1, #244	; 0xf4
 8000832:	438b      	bics	r3, r1
 8000834:	69a1      	ldr	r1, [r4, #24]
 8000836:	00c9      	lsls	r1, r1, #3
 8000838:	430b      	orrs	r3, r1
 800083a:	6353      	str	r3, [r2, #52]	; 0x34
 800083c:	6a23      	ldr	r3, [r4, #32]
 800083e:	2b00      	cmp	r3, #0
 8000840:	d100      	bne.n	8000844 <HAL_RCC_OscConfig+0x314>
 8000842:	e0b2      	b.n	80009aa <HAL_RCC_OscConfig+0x47a>
 8000844:	4a5c      	ldr	r2, [pc, #368]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 8000846:	6851      	ldr	r1, [r2, #4]
 8000848:	220c      	movs	r2, #12
 800084a:	400a      	ands	r2, r1
 800084c:	2a08      	cmp	r2, #8
 800084e:	d100      	bne.n	8000852 <HAL_RCC_OscConfig+0x322>
 8000850:	e08a      	b.n	8000968 <HAL_RCC_OscConfig+0x438>
 8000852:	2b02      	cmp	r3, #2
 8000854:	d04f      	beq.n	80008f6 <HAL_RCC_OscConfig+0x3c6>
 8000856:	4a58      	ldr	r2, [pc, #352]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 8000858:	6813      	ldr	r3, [r2, #0]
 800085a:	4958      	ldr	r1, [pc, #352]	; (80009bc <HAL_RCC_OscConfig+0x48c>)
 800085c:	400b      	ands	r3, r1
 800085e:	6013      	str	r3, [r2, #0]
 8000860:	f7ff fd20 	bl	80002a4 <HAL_GetTick>
 8000864:	0004      	movs	r4, r0
 8000866:	4b54      	ldr	r3, [pc, #336]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 8000868:	681b      	ldr	r3, [r3, #0]
 800086a:	019b      	lsls	r3, r3, #6
 800086c:	d57a      	bpl.n	8000964 <HAL_RCC_OscConfig+0x434>
 800086e:	f7ff fd19 	bl	80002a4 <HAL_GetTick>
 8000872:	1b00      	subs	r0, r0, r4
 8000874:	2802      	cmp	r0, #2
 8000876:	d9f6      	bls.n	8000866 <HAL_RCC_OscConfig+0x336>
 8000878:	2003      	movs	r0, #3
 800087a:	e092      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 800087c:	4a4e      	ldr	r2, [pc, #312]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 800087e:	69d3      	ldr	r3, [r2, #28]
 8000880:	494f      	ldr	r1, [pc, #316]	; (80009c0 <HAL_RCC_OscConfig+0x490>)
 8000882:	400b      	ands	r3, r1
 8000884:	61d3      	str	r3, [r2, #28]
 8000886:	e7c5      	b.n	8000814 <HAL_RCC_OscConfig+0x2e4>
 8000888:	4b4b      	ldr	r3, [pc, #300]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 800088a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800088c:	2104      	movs	r1, #4
 800088e:	430a      	orrs	r2, r1
 8000890:	635a      	str	r2, [r3, #52]	; 0x34
 8000892:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8000894:	3903      	subs	r1, #3
 8000896:	430a      	orrs	r2, r1
 8000898:	635a      	str	r2, [r3, #52]	; 0x34
 800089a:	f7ff fd03 	bl	80002a4 <HAL_GetTick>
 800089e:	0005      	movs	r5, r0
 80008a0:	4b45      	ldr	r3, [pc, #276]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 80008a2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80008a4:	079b      	lsls	r3, r3, #30
 80008a6:	d406      	bmi.n	80008b6 <HAL_RCC_OscConfig+0x386>
 80008a8:	f7ff fcfc 	bl	80002a4 <HAL_GetTick>
 80008ac:	1b40      	subs	r0, r0, r5
 80008ae:	2802      	cmp	r0, #2
 80008b0:	d9f6      	bls.n	80008a0 <HAL_RCC_OscConfig+0x370>
 80008b2:	2003      	movs	r0, #3
 80008b4:	e075      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80008b6:	4940      	ldr	r1, [pc, #256]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 80008b8:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80008ba:	22f8      	movs	r2, #248	; 0xf8
 80008bc:	4393      	bics	r3, r2
 80008be:	69a2      	ldr	r2, [r4, #24]
 80008c0:	00d2      	lsls	r2, r2, #3
 80008c2:	4313      	orrs	r3, r2
 80008c4:	634b      	str	r3, [r1, #52]	; 0x34
 80008c6:	e7b9      	b.n	800083c <HAL_RCC_OscConfig+0x30c>
 80008c8:	4b3b      	ldr	r3, [pc, #236]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 80008ca:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80008cc:	2104      	movs	r1, #4
 80008ce:	430a      	orrs	r2, r1
 80008d0:	635a      	str	r2, [r3, #52]	; 0x34
 80008d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80008d4:	3903      	subs	r1, #3
 80008d6:	438a      	bics	r2, r1
 80008d8:	635a      	str	r2, [r3, #52]	; 0x34
 80008da:	f7ff fce3 	bl	80002a4 <HAL_GetTick>
 80008de:	0005      	movs	r5, r0
 80008e0:	4b35      	ldr	r3, [pc, #212]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 80008e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80008e4:	079b      	lsls	r3, r3, #30
 80008e6:	d5a9      	bpl.n	800083c <HAL_RCC_OscConfig+0x30c>
 80008e8:	f7ff fcdc 	bl	80002a4 <HAL_GetTick>
 80008ec:	1b40      	subs	r0, r0, r5
 80008ee:	2802      	cmp	r0, #2
 80008f0:	d9f6      	bls.n	80008e0 <HAL_RCC_OscConfig+0x3b0>
 80008f2:	2003      	movs	r0, #3
 80008f4:	e055      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80008f6:	4a30      	ldr	r2, [pc, #192]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 80008f8:	6813      	ldr	r3, [r2, #0]
 80008fa:	4930      	ldr	r1, [pc, #192]	; (80009bc <HAL_RCC_OscConfig+0x48c>)
 80008fc:	400b      	ands	r3, r1
 80008fe:	6013      	str	r3, [r2, #0]
 8000900:	f7ff fcd0 	bl	80002a4 <HAL_GetTick>
 8000904:	0005      	movs	r5, r0
 8000906:	4b2c      	ldr	r3, [pc, #176]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 8000908:	681b      	ldr	r3, [r3, #0]
 800090a:	019b      	lsls	r3, r3, #6
 800090c:	d506      	bpl.n	800091c <HAL_RCC_OscConfig+0x3ec>
 800090e:	f7ff fcc9 	bl	80002a4 <HAL_GetTick>
 8000912:	1b40      	subs	r0, r0, r5
 8000914:	2802      	cmp	r0, #2
 8000916:	d9f6      	bls.n	8000906 <HAL_RCC_OscConfig+0x3d6>
 8000918:	2003      	movs	r0, #3
 800091a:	e042      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 800091c:	4b26      	ldr	r3, [pc, #152]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 800091e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8000920:	210f      	movs	r1, #15
 8000922:	438a      	bics	r2, r1
 8000924:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8000926:	430a      	orrs	r2, r1
 8000928:	62da      	str	r2, [r3, #44]	; 0x2c
 800092a:	685a      	ldr	r2, [r3, #4]
 800092c:	4925      	ldr	r1, [pc, #148]	; (80009c4 <HAL_RCC_OscConfig+0x494>)
 800092e:	400a      	ands	r2, r1
 8000930:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8000932:	6a60      	ldr	r0, [r4, #36]	; 0x24
 8000934:	4301      	orrs	r1, r0
 8000936:	430a      	orrs	r2, r1
 8000938:	605a      	str	r2, [r3, #4]
 800093a:	6819      	ldr	r1, [r3, #0]
 800093c:	2280      	movs	r2, #128	; 0x80
 800093e:	0452      	lsls	r2, r2, #17
 8000940:	430a      	orrs	r2, r1
 8000942:	601a      	str	r2, [r3, #0]
 8000944:	f7ff fcae 	bl	80002a4 <HAL_GetTick>
 8000948:	0004      	movs	r4, r0
 800094a:	4b1b      	ldr	r3, [pc, #108]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 800094c:	681b      	ldr	r3, [r3, #0]
 800094e:	019b      	lsls	r3, r3, #6
 8000950:	d406      	bmi.n	8000960 <HAL_RCC_OscConfig+0x430>
 8000952:	f7ff fca7 	bl	80002a4 <HAL_GetTick>
 8000956:	1b00      	subs	r0, r0, r4
 8000958:	2802      	cmp	r0, #2
 800095a:	d9f6      	bls.n	800094a <HAL_RCC_OscConfig+0x41a>
 800095c:	2003      	movs	r0, #3
 800095e:	e020      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000960:	2000      	movs	r0, #0
 8000962:	e01e      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000964:	2000      	movs	r0, #0
 8000966:	e01c      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000968:	2b01      	cmp	r3, #1
 800096a:	d020      	beq.n	80009ae <HAL_RCC_OscConfig+0x47e>
 800096c:	4b12      	ldr	r3, [pc, #72]	; (80009b8 <HAL_RCC_OscConfig+0x488>)
 800096e:	685a      	ldr	r2, [r3, #4]
 8000970:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8000972:	2380      	movs	r3, #128	; 0x80
 8000974:	025b      	lsls	r3, r3, #9
 8000976:	4013      	ands	r3, r2
 8000978:	6a60      	ldr	r0, [r4, #36]	; 0x24
 800097a:	4283      	cmp	r3, r0
 800097c:	d001      	beq.n	8000982 <HAL_RCC_OscConfig+0x452>
 800097e:	2001      	movs	r0, #1
 8000980:	e00f      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000982:	230f      	movs	r3, #15
 8000984:	400b      	ands	r3, r1
 8000986:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8000988:	428b      	cmp	r3, r1
 800098a:	d001      	beq.n	8000990 <HAL_RCC_OscConfig+0x460>
 800098c:	2001      	movs	r0, #1
 800098e:	e008      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 8000990:	23f0      	movs	r3, #240	; 0xf0
 8000992:	039b      	lsls	r3, r3, #14
 8000994:	401a      	ands	r2, r3
 8000996:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8000998:	429a      	cmp	r2, r3
 800099a:	d00a      	beq.n	80009b2 <HAL_RCC_OscConfig+0x482>
 800099c:	2001      	movs	r0, #1
 800099e:	e000      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80009a0:	2001      	movs	r0, #1
 80009a2:	b002      	add	sp, #8
 80009a4:	bd70      	pop	{r4, r5, r6, pc}
 80009a6:	2001      	movs	r0, #1
 80009a8:	e7fb      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80009aa:	2000      	movs	r0, #0
 80009ac:	e7f9      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80009ae:	2001      	movs	r0, #1
 80009b0:	e7f7      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80009b2:	2000      	movs	r0, #0
 80009b4:	e7f5      	b.n	80009a2 <HAL_RCC_OscConfig+0x472>
 80009b6:	46c0      	nop			; (mov r8, r8)
 80009b8:	40021000 	.word	0x40021000
 80009bc:	feffffff 	.word	0xfeffffff
 80009c0:	efffffff 	.word	0xefffffff
 80009c4:	ffc2ffff 	.word	0xffc2ffff

080009c8 <HAL_RCC_GetSysClockFreq>:
 80009c8:	b530      	push	{r4, r5, lr}
 80009ca:	b089      	sub	sp, #36	; 0x24
 80009cc:	aa04      	add	r2, sp, #16
 80009ce:	4b17      	ldr	r3, [pc, #92]	; (8000a2c <HAL_RCC_GetSysClockFreq+0x64>)
 80009d0:	0018      	movs	r0, r3
 80009d2:	c832      	ldmia	r0!, {r1, r4, r5}
 80009d4:	c232      	stmia	r2!, {r1, r4, r5}
 80009d6:	0011      	movs	r1, r2
 80009d8:	6802      	ldr	r2, [r0, #0]
 80009da:	600a      	str	r2, [r1, #0]
 80009dc:	466a      	mov	r2, sp
 80009de:	3310      	adds	r3, #16
 80009e0:	cb13      	ldmia	r3!, {r0, r1, r4}
 80009e2:	c213      	stmia	r2!, {r0, r1, r4}
 80009e4:	681b      	ldr	r3, [r3, #0]
 80009e6:	6013      	str	r3, [r2, #0]
 80009e8:	4b11      	ldr	r3, [pc, #68]	; (8000a30 <HAL_RCC_GetSysClockFreq+0x68>)
 80009ea:	685a      	ldr	r2, [r3, #4]
 80009ec:	230c      	movs	r3, #12
 80009ee:	4013      	ands	r3, r2
 80009f0:	2b08      	cmp	r3, #8
 80009f2:	d119      	bne.n	8000a28 <HAL_RCC_GetSysClockFreq+0x60>
 80009f4:	0c91      	lsrs	r1, r2, #18
 80009f6:	3307      	adds	r3, #7
 80009f8:	4019      	ands	r1, r3
 80009fa:	a804      	add	r0, sp, #16
 80009fc:	5c44      	ldrb	r4, [r0, r1]
 80009fe:	490c      	ldr	r1, [pc, #48]	; (8000a30 <HAL_RCC_GetSysClockFreq+0x68>)
 8000a00:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8000a02:	400b      	ands	r3, r1
 8000a04:	4669      	mov	r1, sp
 8000a06:	5cc9      	ldrb	r1, [r1, r3]
 8000a08:	03d3      	lsls	r3, r2, #15
 8000a0a:	d408      	bmi.n	8000a1e <HAL_RCC_GetSysClockFreq+0x56>
 8000a0c:	0163      	lsls	r3, r4, #5
 8000a0e:	1b1b      	subs	r3, r3, r4
 8000a10:	0198      	lsls	r0, r3, #6
 8000a12:	1ac0      	subs	r0, r0, r3
 8000a14:	00c0      	lsls	r0, r0, #3
 8000a16:	1904      	adds	r4, r0, r4
 8000a18:	0220      	lsls	r0, r4, #8
 8000a1a:	b009      	add	sp, #36	; 0x24
 8000a1c:	bd30      	pop	{r4, r5, pc}
 8000a1e:	4805      	ldr	r0, [pc, #20]	; (8000a34 <HAL_RCC_GetSysClockFreq+0x6c>)
 8000a20:	f7ff fb72 	bl	8000108 <__udivsi3>
 8000a24:	4360      	muls	r0, r4
 8000a26:	e7f8      	b.n	8000a1a <HAL_RCC_GetSysClockFreq+0x52>
 8000a28:	4802      	ldr	r0, [pc, #8]	; (8000a34 <HAL_RCC_GetSysClockFreq+0x6c>)
 8000a2a:	e7f6      	b.n	8000a1a <HAL_RCC_GetSysClockFreq+0x52>
 8000a2c:	08003c84 	.word	0x08003c84
 8000a30:	40021000 	.word	0x40021000
 8000a34:	007a1200 	.word	0x007a1200

08000a38 <HAL_RCC_ClockConfig>:
 8000a38:	b570      	push	{r4, r5, r6, lr}
 8000a3a:	0004      	movs	r4, r0
 8000a3c:	000d      	movs	r5, r1
 8000a3e:	2800      	cmp	r0, #0
 8000a40:	d100      	bne.n	8000a44 <HAL_RCC_ClockConfig+0xc>
 8000a42:	e081      	b.n	8000b48 <HAL_RCC_ClockConfig+0x110>
 8000a44:	4b42      	ldr	r3, [pc, #264]	; (8000b50 <HAL_RCC_ClockConfig+0x118>)
 8000a46:	681a      	ldr	r2, [r3, #0]
 8000a48:	2301      	movs	r3, #1
 8000a4a:	4013      	ands	r3, r2
 8000a4c:	428b      	cmp	r3, r1
 8000a4e:	d20b      	bcs.n	8000a68 <HAL_RCC_ClockConfig+0x30>
 8000a50:	493f      	ldr	r1, [pc, #252]	; (8000b50 <HAL_RCC_ClockConfig+0x118>)
 8000a52:	680b      	ldr	r3, [r1, #0]
 8000a54:	2201      	movs	r2, #1
 8000a56:	4393      	bics	r3, r2
 8000a58:	432b      	orrs	r3, r5
 8000a5a:	600b      	str	r3, [r1, #0]
 8000a5c:	680b      	ldr	r3, [r1, #0]
 8000a5e:	401a      	ands	r2, r3
 8000a60:	42aa      	cmp	r2, r5
 8000a62:	d001      	beq.n	8000a68 <HAL_RCC_ClockConfig+0x30>
 8000a64:	2001      	movs	r0, #1
 8000a66:	e070      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000a68:	6823      	ldr	r3, [r4, #0]
 8000a6a:	079a      	lsls	r2, r3, #30
 8000a6c:	d50e      	bpl.n	8000a8c <HAL_RCC_ClockConfig+0x54>
 8000a6e:	075b      	lsls	r3, r3, #29
 8000a70:	d505      	bpl.n	8000a7e <HAL_RCC_ClockConfig+0x46>
 8000a72:	4a38      	ldr	r2, [pc, #224]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000a74:	6851      	ldr	r1, [r2, #4]
 8000a76:	23e0      	movs	r3, #224	; 0xe0
 8000a78:	00db      	lsls	r3, r3, #3
 8000a7a:	430b      	orrs	r3, r1
 8000a7c:	6053      	str	r3, [r2, #4]
 8000a7e:	4a35      	ldr	r2, [pc, #212]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000a80:	6853      	ldr	r3, [r2, #4]
 8000a82:	21f0      	movs	r1, #240	; 0xf0
 8000a84:	438b      	bics	r3, r1
 8000a86:	68a1      	ldr	r1, [r4, #8]
 8000a88:	430b      	orrs	r3, r1
 8000a8a:	6053      	str	r3, [r2, #4]
 8000a8c:	6823      	ldr	r3, [r4, #0]
 8000a8e:	07db      	lsls	r3, r3, #31
 8000a90:	d52d      	bpl.n	8000aee <HAL_RCC_ClockConfig+0xb6>
 8000a92:	6863      	ldr	r3, [r4, #4]
 8000a94:	2b01      	cmp	r3, #1
 8000a96:	d01e      	beq.n	8000ad6 <HAL_RCC_ClockConfig+0x9e>
 8000a98:	2b02      	cmp	r3, #2
 8000a9a:	d022      	beq.n	8000ae2 <HAL_RCC_ClockConfig+0xaa>
 8000a9c:	4a2d      	ldr	r2, [pc, #180]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000a9e:	6812      	ldr	r2, [r2, #0]
 8000aa0:	0792      	lsls	r2, r2, #30
 8000aa2:	d553      	bpl.n	8000b4c <HAL_RCC_ClockConfig+0x114>
 8000aa4:	492b      	ldr	r1, [pc, #172]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000aa6:	684a      	ldr	r2, [r1, #4]
 8000aa8:	2003      	movs	r0, #3
 8000aaa:	4382      	bics	r2, r0
 8000aac:	4313      	orrs	r3, r2
 8000aae:	604b      	str	r3, [r1, #4]
 8000ab0:	f7ff fbf8 	bl	80002a4 <HAL_GetTick>
 8000ab4:	0006      	movs	r6, r0
 8000ab6:	4b27      	ldr	r3, [pc, #156]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000ab8:	685b      	ldr	r3, [r3, #4]
 8000aba:	220c      	movs	r2, #12
 8000abc:	401a      	ands	r2, r3
 8000abe:	6863      	ldr	r3, [r4, #4]
 8000ac0:	009b      	lsls	r3, r3, #2
 8000ac2:	429a      	cmp	r2, r3
 8000ac4:	d013      	beq.n	8000aee <HAL_RCC_ClockConfig+0xb6>
 8000ac6:	f7ff fbed 	bl	80002a4 <HAL_GetTick>
 8000aca:	1b80      	subs	r0, r0, r6
 8000acc:	4b22      	ldr	r3, [pc, #136]	; (8000b58 <HAL_RCC_ClockConfig+0x120>)
 8000ace:	4298      	cmp	r0, r3
 8000ad0:	d9f1      	bls.n	8000ab6 <HAL_RCC_ClockConfig+0x7e>
 8000ad2:	2003      	movs	r0, #3
 8000ad4:	e039      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000ad6:	4a1f      	ldr	r2, [pc, #124]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000ad8:	6812      	ldr	r2, [r2, #0]
 8000ada:	0392      	lsls	r2, r2, #14
 8000adc:	d4e2      	bmi.n	8000aa4 <HAL_RCC_ClockConfig+0x6c>
 8000ade:	2001      	movs	r0, #1
 8000ae0:	e033      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000ae2:	4a1c      	ldr	r2, [pc, #112]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000ae4:	6812      	ldr	r2, [r2, #0]
 8000ae6:	0192      	lsls	r2, r2, #6
 8000ae8:	d4dc      	bmi.n	8000aa4 <HAL_RCC_ClockConfig+0x6c>
 8000aea:	2001      	movs	r0, #1
 8000aec:	e02d      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000aee:	4b18      	ldr	r3, [pc, #96]	; (8000b50 <HAL_RCC_ClockConfig+0x118>)
 8000af0:	681a      	ldr	r2, [r3, #0]
 8000af2:	2301      	movs	r3, #1
 8000af4:	4013      	ands	r3, r2
 8000af6:	42ab      	cmp	r3, r5
 8000af8:	d90b      	bls.n	8000b12 <HAL_RCC_ClockConfig+0xda>
 8000afa:	4915      	ldr	r1, [pc, #84]	; (8000b50 <HAL_RCC_ClockConfig+0x118>)
 8000afc:	680b      	ldr	r3, [r1, #0]
 8000afe:	2201      	movs	r2, #1
 8000b00:	4393      	bics	r3, r2
 8000b02:	432b      	orrs	r3, r5
 8000b04:	600b      	str	r3, [r1, #0]
 8000b06:	680b      	ldr	r3, [r1, #0]
 8000b08:	401a      	ands	r2, r3
 8000b0a:	42aa      	cmp	r2, r5
 8000b0c:	d001      	beq.n	8000b12 <HAL_RCC_ClockConfig+0xda>
 8000b0e:	2001      	movs	r0, #1
 8000b10:	e01b      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000b12:	6823      	ldr	r3, [r4, #0]
 8000b14:	075b      	lsls	r3, r3, #29
 8000b16:	d506      	bpl.n	8000b26 <HAL_RCC_ClockConfig+0xee>
 8000b18:	4a0e      	ldr	r2, [pc, #56]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000b1a:	6853      	ldr	r3, [r2, #4]
 8000b1c:	490f      	ldr	r1, [pc, #60]	; (8000b5c <HAL_RCC_ClockConfig+0x124>)
 8000b1e:	400b      	ands	r3, r1
 8000b20:	68e1      	ldr	r1, [r4, #12]
 8000b22:	430b      	orrs	r3, r1
 8000b24:	6053      	str	r3, [r2, #4]
 8000b26:	f7ff ff4f 	bl	80009c8 <HAL_RCC_GetSysClockFreq>
 8000b2a:	4b0a      	ldr	r3, [pc, #40]	; (8000b54 <HAL_RCC_ClockConfig+0x11c>)
 8000b2c:	685a      	ldr	r2, [r3, #4]
 8000b2e:	0912      	lsrs	r2, r2, #4
 8000b30:	230f      	movs	r3, #15
 8000b32:	4013      	ands	r3, r2
 8000b34:	4a0a      	ldr	r2, [pc, #40]	; (8000b60 <HAL_RCC_ClockConfig+0x128>)
 8000b36:	5cd3      	ldrb	r3, [r2, r3]
 8000b38:	40d8      	lsrs	r0, r3
 8000b3a:	4b0a      	ldr	r3, [pc, #40]	; (8000b64 <HAL_RCC_ClockConfig+0x12c>)
 8000b3c:	6018      	str	r0, [r3, #0]
 8000b3e:	2000      	movs	r0, #0
 8000b40:	f7ff fb6e 	bl	8000220 <HAL_InitTick>
 8000b44:	2000      	movs	r0, #0
 8000b46:	e000      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000b48:	2001      	movs	r0, #1
 8000b4a:	bd70      	pop	{r4, r5, r6, pc}
 8000b4c:	2001      	movs	r0, #1
 8000b4e:	e7fc      	b.n	8000b4a <HAL_RCC_ClockConfig+0x112>
 8000b50:	40022000 	.word	0x40022000
 8000b54:	40021000 	.word	0x40021000
 8000b58:	00001388 	.word	0x00001388
 8000b5c:	fffff8ff 	.word	0xfffff8ff
 8000b60:	08003edc 	.word	0x08003edc
 8000b64:	20000014 	.word	0x20000014

08000b68 <HAL_RCC_GetHCLKFreq>:
 8000b68:	4b01      	ldr	r3, [pc, #4]	; (8000b70 <HAL_RCC_GetHCLKFreq+0x8>)
 8000b6a:	6818      	ldr	r0, [r3, #0]
 8000b6c:	4770      	bx	lr
 8000b6e:	46c0      	nop			; (mov r8, r8)
 8000b70:	20000014 	.word	0x20000014

08000b74 <HAL_RCC_GetPCLK1Freq>:
 8000b74:	b510      	push	{r4, lr}
 8000b76:	f7ff fff7 	bl	8000b68 <HAL_RCC_GetHCLKFreq>
 8000b7a:	4b04      	ldr	r3, [pc, #16]	; (8000b8c <HAL_RCC_GetPCLK1Freq+0x18>)
 8000b7c:	685a      	ldr	r2, [r3, #4]
 8000b7e:	0a12      	lsrs	r2, r2, #8
 8000b80:	2307      	movs	r3, #7
 8000b82:	4013      	ands	r3, r2
 8000b84:	4a02      	ldr	r2, [pc, #8]	; (8000b90 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8000b86:	5cd3      	ldrb	r3, [r2, r3]
 8000b88:	40d8      	lsrs	r0, r3
 8000b8a:	bd10      	pop	{r4, pc}
 8000b8c:	40021000 	.word	0x40021000
 8000b90:	08003eec 	.word	0x08003eec

08000b94 <HAL_RCCEx_PeriphCLKConfig>:
 8000b94:	b570      	push	{r4, r5, r6, lr}
 8000b96:	b082      	sub	sp, #8
 8000b98:	0004      	movs	r4, r0
 8000b9a:	6803      	ldr	r3, [r0, #0]
 8000b9c:	03db      	lsls	r3, r3, #15
 8000b9e:	d535      	bpl.n	8000c0c <HAL_RCCEx_PeriphCLKConfig+0x78>
 8000ba0:	4b3c      	ldr	r3, [pc, #240]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000ba2:	69db      	ldr	r3, [r3, #28]
 8000ba4:	00db      	lsls	r3, r3, #3
 8000ba6:	d448      	bmi.n	8000c3a <HAL_RCCEx_PeriphCLKConfig+0xa6>
 8000ba8:	4a3a      	ldr	r2, [pc, #232]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000baa:	69d1      	ldr	r1, [r2, #28]
 8000bac:	2080      	movs	r0, #128	; 0x80
 8000bae:	0540      	lsls	r0, r0, #21
 8000bb0:	4301      	orrs	r1, r0
 8000bb2:	61d1      	str	r1, [r2, #28]
 8000bb4:	69d3      	ldr	r3, [r2, #28]
 8000bb6:	4003      	ands	r3, r0
 8000bb8:	9301      	str	r3, [sp, #4]
 8000bba:	9b01      	ldr	r3, [sp, #4]
 8000bbc:	2501      	movs	r5, #1
 8000bbe:	4b36      	ldr	r3, [pc, #216]	; (8000c98 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 8000bc0:	681b      	ldr	r3, [r3, #0]
 8000bc2:	05db      	lsls	r3, r3, #23
 8000bc4:	d53b      	bpl.n	8000c3e <HAL_RCCEx_PeriphCLKConfig+0xaa>
 8000bc6:	4b33      	ldr	r3, [pc, #204]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000bc8:	6a1b      	ldr	r3, [r3, #32]
 8000bca:	22c0      	movs	r2, #192	; 0xc0
 8000bcc:	0092      	lsls	r2, r2, #2
 8000bce:	4013      	ands	r3, r2
 8000bd0:	d013      	beq.n	8000bfa <HAL_RCCEx_PeriphCLKConfig+0x66>
 8000bd2:	6861      	ldr	r1, [r4, #4]
 8000bd4:	400a      	ands	r2, r1
 8000bd6:	429a      	cmp	r2, r3
 8000bd8:	d00f      	beq.n	8000bfa <HAL_RCCEx_PeriphCLKConfig+0x66>
 8000bda:	4b2e      	ldr	r3, [pc, #184]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000bdc:	6a18      	ldr	r0, [r3, #32]
 8000bde:	4a2f      	ldr	r2, [pc, #188]	; (8000c9c <HAL_RCCEx_PeriphCLKConfig+0x108>)
 8000be0:	4002      	ands	r2, r0
 8000be2:	6a1e      	ldr	r6, [r3, #32]
 8000be4:	2180      	movs	r1, #128	; 0x80
 8000be6:	0249      	lsls	r1, r1, #9
 8000be8:	4331      	orrs	r1, r6
 8000bea:	6219      	str	r1, [r3, #32]
 8000bec:	6a19      	ldr	r1, [r3, #32]
 8000bee:	4e2c      	ldr	r6, [pc, #176]	; (8000ca0 <HAL_RCCEx_PeriphCLKConfig+0x10c>)
 8000bf0:	4031      	ands	r1, r6
 8000bf2:	6219      	str	r1, [r3, #32]
 8000bf4:	621a      	str	r2, [r3, #32]
 8000bf6:	07c3      	lsls	r3, r0, #31
 8000bf8:	d435      	bmi.n	8000c66 <HAL_RCCEx_PeriphCLKConfig+0xd2>
 8000bfa:	4a26      	ldr	r2, [pc, #152]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000bfc:	6a13      	ldr	r3, [r2, #32]
 8000bfe:	4927      	ldr	r1, [pc, #156]	; (8000c9c <HAL_RCCEx_PeriphCLKConfig+0x108>)
 8000c00:	400b      	ands	r3, r1
 8000c02:	6861      	ldr	r1, [r4, #4]
 8000c04:	430b      	orrs	r3, r1
 8000c06:	6213      	str	r3, [r2, #32]
 8000c08:	2d01      	cmp	r5, #1
 8000c0a:	d03b      	beq.n	8000c84 <HAL_RCCEx_PeriphCLKConfig+0xf0>
 8000c0c:	6823      	ldr	r3, [r4, #0]
 8000c0e:	07db      	lsls	r3, r3, #31
 8000c10:	d506      	bpl.n	8000c20 <HAL_RCCEx_PeriphCLKConfig+0x8c>
 8000c12:	4a20      	ldr	r2, [pc, #128]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000c14:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000c16:	2103      	movs	r1, #3
 8000c18:	438b      	bics	r3, r1
 8000c1a:	68a1      	ldr	r1, [r4, #8]
 8000c1c:	430b      	orrs	r3, r1
 8000c1e:	6313      	str	r3, [r2, #48]	; 0x30
 8000c20:	6823      	ldr	r3, [r4, #0]
 8000c22:	069b      	lsls	r3, r3, #26
 8000c24:	d533      	bpl.n	8000c8e <HAL_RCCEx_PeriphCLKConfig+0xfa>
 8000c26:	4a1b      	ldr	r2, [pc, #108]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000c28:	6b13      	ldr	r3, [r2, #48]	; 0x30
 8000c2a:	2110      	movs	r1, #16
 8000c2c:	438b      	bics	r3, r1
 8000c2e:	68e1      	ldr	r1, [r4, #12]
 8000c30:	430b      	orrs	r3, r1
 8000c32:	6313      	str	r3, [r2, #48]	; 0x30
 8000c34:	2000      	movs	r0, #0
 8000c36:	b002      	add	sp, #8
 8000c38:	bd70      	pop	{r4, r5, r6, pc}
 8000c3a:	2500      	movs	r5, #0
 8000c3c:	e7bf      	b.n	8000bbe <HAL_RCCEx_PeriphCLKConfig+0x2a>
 8000c3e:	4a16      	ldr	r2, [pc, #88]	; (8000c98 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 8000c40:	6811      	ldr	r1, [r2, #0]
 8000c42:	2380      	movs	r3, #128	; 0x80
 8000c44:	005b      	lsls	r3, r3, #1
 8000c46:	430b      	orrs	r3, r1
 8000c48:	6013      	str	r3, [r2, #0]
 8000c4a:	f7ff fb2b 	bl	80002a4 <HAL_GetTick>
 8000c4e:	0006      	movs	r6, r0
 8000c50:	4b11      	ldr	r3, [pc, #68]	; (8000c98 <HAL_RCCEx_PeriphCLKConfig+0x104>)
 8000c52:	681b      	ldr	r3, [r3, #0]
 8000c54:	05db      	lsls	r3, r3, #23
 8000c56:	d4b6      	bmi.n	8000bc6 <HAL_RCCEx_PeriphCLKConfig+0x32>
 8000c58:	f7ff fb24 	bl	80002a4 <HAL_GetTick>
 8000c5c:	1b80      	subs	r0, r0, r6
 8000c5e:	2864      	cmp	r0, #100	; 0x64
 8000c60:	d9f6      	bls.n	8000c50 <HAL_RCCEx_PeriphCLKConfig+0xbc>
 8000c62:	2003      	movs	r0, #3
 8000c64:	e7e7      	b.n	8000c36 <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8000c66:	f7ff fb1d 	bl	80002a4 <HAL_GetTick>
 8000c6a:	0006      	movs	r6, r0
 8000c6c:	4b09      	ldr	r3, [pc, #36]	; (8000c94 <HAL_RCCEx_PeriphCLKConfig+0x100>)
 8000c6e:	6a1b      	ldr	r3, [r3, #32]
 8000c70:	079b      	lsls	r3, r3, #30
 8000c72:	d4c2      	bmi.n	8000bfa <HAL_RCCEx_PeriphCLKConfig+0x66>
 8000c74:	f7ff fb16 	bl	80002a4 <HAL_GetTick>
 8000c78:	1b80      	subs	r0, r0, r6
 8000c7a:	4b0a      	ldr	r3, [pc, #40]	; (8000ca4 <HAL_RCCEx_PeriphCLKConfig+0x110>)
 8000c7c:	4298      	cmp	r0, r3
 8000c7e:	d9f5      	bls.n	8000c6c <HAL_RCCEx_PeriphCLKConfig+0xd8>
 8000c80:	2003      	movs	r0, #3
 8000c82:	e7d8      	b.n	8000c36 <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8000c84:	69d3      	ldr	r3, [r2, #28]
 8000c86:	4908      	ldr	r1, [pc, #32]	; (8000ca8 <HAL_RCCEx_PeriphCLKConfig+0x114>)
 8000c88:	400b      	ands	r3, r1
 8000c8a:	61d3      	str	r3, [r2, #28]
 8000c8c:	e7be      	b.n	8000c0c <HAL_RCCEx_PeriphCLKConfig+0x78>
 8000c8e:	2000      	movs	r0, #0
 8000c90:	e7d1      	b.n	8000c36 <HAL_RCCEx_PeriphCLKConfig+0xa2>
 8000c92:	46c0      	nop			; (mov r8, r8)
 8000c94:	40021000 	.word	0x40021000
 8000c98:	40007000 	.word	0x40007000
 8000c9c:	fffffcff 	.word	0xfffffcff
 8000ca0:	fffeffff 	.word	0xfffeffff
 8000ca4:	00001388 	.word	0x00001388
 8000ca8:	efffffff 	.word	0xefffffff

08000cac <SPI_WaitFlagStateUntilTimeout>:
 8000cac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cae:	0006      	movs	r6, r0
 8000cb0:	000c      	movs	r4, r1
 8000cb2:	0017      	movs	r7, r2
 8000cb4:	001d      	movs	r5, r3
 8000cb6:	6833      	ldr	r3, [r6, #0]
 8000cb8:	689b      	ldr	r3, [r3, #8]
 8000cba:	4023      	ands	r3, r4
 8000cbc:	1b1b      	subs	r3, r3, r4
 8000cbe:	425a      	negs	r2, r3
 8000cc0:	4153      	adcs	r3, r2
 8000cc2:	42bb      	cmp	r3, r7
 8000cc4:	d03b      	beq.n	8000d3e <SPI_WaitFlagStateUntilTimeout+0x92>
 8000cc6:	1c6b      	adds	r3, r5, #1
 8000cc8:	d0f5      	beq.n	8000cb6 <SPI_WaitFlagStateUntilTimeout+0xa>
 8000cca:	f7ff faeb 	bl	80002a4 <HAL_GetTick>
 8000cce:	9b06      	ldr	r3, [sp, #24]
 8000cd0:	1ac0      	subs	r0, r0, r3
 8000cd2:	42a8      	cmp	r0, r5
 8000cd4:	d201      	bcs.n	8000cda <SPI_WaitFlagStateUntilTimeout+0x2e>
 8000cd6:	2d00      	cmp	r5, #0
 8000cd8:	d1ed      	bne.n	8000cb6 <SPI_WaitFlagStateUntilTimeout+0xa>
 8000cda:	6832      	ldr	r2, [r6, #0]
 8000cdc:	6853      	ldr	r3, [r2, #4]
 8000cde:	21e0      	movs	r1, #224	; 0xe0
 8000ce0:	438b      	bics	r3, r1
 8000ce2:	6053      	str	r3, [r2, #4]
 8000ce4:	2382      	movs	r3, #130	; 0x82
 8000ce6:	005b      	lsls	r3, r3, #1
 8000ce8:	6872      	ldr	r2, [r6, #4]
 8000cea:	429a      	cmp	r2, r3
 8000cec:	d00c      	beq.n	8000d08 <SPI_WaitFlagStateUntilTimeout+0x5c>
 8000cee:	2380      	movs	r3, #128	; 0x80
 8000cf0:	019b      	lsls	r3, r3, #6
 8000cf2:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8000cf4:	429a      	cmp	r2, r3
 8000cf6:	d016      	beq.n	8000d26 <SPI_WaitFlagStateUntilTimeout+0x7a>
 8000cf8:	235d      	movs	r3, #93	; 0x5d
 8000cfa:	2201      	movs	r2, #1
 8000cfc:	54f2      	strb	r2, [r6, r3]
 8000cfe:	3b01      	subs	r3, #1
 8000d00:	2200      	movs	r2, #0
 8000d02:	54f2      	strb	r2, [r6, r3]
 8000d04:	2003      	movs	r0, #3
 8000d06:	e01b      	b.n	8000d40 <SPI_WaitFlagStateUntilTimeout+0x94>
 8000d08:	68b3      	ldr	r3, [r6, #8]
 8000d0a:	2280      	movs	r2, #128	; 0x80
 8000d0c:	0212      	lsls	r2, r2, #8
 8000d0e:	4293      	cmp	r3, r2
 8000d10:	d003      	beq.n	8000d1a <SPI_WaitFlagStateUntilTimeout+0x6e>
 8000d12:	2280      	movs	r2, #128	; 0x80
 8000d14:	00d2      	lsls	r2, r2, #3
 8000d16:	4293      	cmp	r3, r2
 8000d18:	d1e9      	bne.n	8000cee <SPI_WaitFlagStateUntilTimeout+0x42>
 8000d1a:	6832      	ldr	r2, [r6, #0]
 8000d1c:	6813      	ldr	r3, [r2, #0]
 8000d1e:	2140      	movs	r1, #64	; 0x40
 8000d20:	438b      	bics	r3, r1
 8000d22:	6013      	str	r3, [r2, #0]
 8000d24:	e7e3      	b.n	8000cee <SPI_WaitFlagStateUntilTimeout+0x42>
 8000d26:	6832      	ldr	r2, [r6, #0]
 8000d28:	6813      	ldr	r3, [r2, #0]
 8000d2a:	4906      	ldr	r1, [pc, #24]	; (8000d44 <SPI_WaitFlagStateUntilTimeout+0x98>)
 8000d2c:	400b      	ands	r3, r1
 8000d2e:	6013      	str	r3, [r2, #0]
 8000d30:	6832      	ldr	r2, [r6, #0]
 8000d32:	6811      	ldr	r1, [r2, #0]
 8000d34:	2380      	movs	r3, #128	; 0x80
 8000d36:	019b      	lsls	r3, r3, #6
 8000d38:	430b      	orrs	r3, r1
 8000d3a:	6013      	str	r3, [r2, #0]
 8000d3c:	e7dc      	b.n	8000cf8 <SPI_WaitFlagStateUntilTimeout+0x4c>
 8000d3e:	2000      	movs	r0, #0
 8000d40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d42:	46c0      	nop			; (mov r8, r8)
 8000d44:	ffffdfff 	.word	0xffffdfff

08000d48 <SPI_WaitFifoStateUntilTimeout>:
 8000d48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d4a:	0007      	movs	r7, r0
 8000d4c:	000c      	movs	r4, r1
 8000d4e:	0015      	movs	r5, r2
 8000d50:	001e      	movs	r6, r3
 8000d52:	e001      	b.n	8000d58 <SPI_WaitFifoStateUntilTimeout+0x10>
 8000d54:	1c73      	adds	r3, r6, #1
 8000d56:	d10c      	bne.n	8000d72 <SPI_WaitFifoStateUntilTimeout+0x2a>
 8000d58:	683a      	ldr	r2, [r7, #0]
 8000d5a:	6893      	ldr	r3, [r2, #8]
 8000d5c:	4023      	ands	r3, r4
 8000d5e:	42ab      	cmp	r3, r5
 8000d60:	d041      	beq.n	8000de6 <SPI_WaitFifoStateUntilTimeout+0x9e>
 8000d62:	23c0      	movs	r3, #192	; 0xc0
 8000d64:	00db      	lsls	r3, r3, #3
 8000d66:	429c      	cmp	r4, r3
 8000d68:	d1f4      	bne.n	8000d54 <SPI_WaitFifoStateUntilTimeout+0xc>
 8000d6a:	2d00      	cmp	r5, #0
 8000d6c:	d1f2      	bne.n	8000d54 <SPI_WaitFifoStateUntilTimeout+0xc>
 8000d6e:	7b13      	ldrb	r3, [r2, #12]
 8000d70:	e7f0      	b.n	8000d54 <SPI_WaitFifoStateUntilTimeout+0xc>
 8000d72:	f7ff fa97 	bl	80002a4 <HAL_GetTick>
 8000d76:	9b06      	ldr	r3, [sp, #24]
 8000d78:	1ac0      	subs	r0, r0, r3
 8000d7a:	42b0      	cmp	r0, r6
 8000d7c:	d201      	bcs.n	8000d82 <SPI_WaitFifoStateUntilTimeout+0x3a>
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d1ea      	bne.n	8000d58 <SPI_WaitFifoStateUntilTimeout+0x10>
 8000d82:	683a      	ldr	r2, [r7, #0]
 8000d84:	6853      	ldr	r3, [r2, #4]
 8000d86:	21e0      	movs	r1, #224	; 0xe0
 8000d88:	438b      	bics	r3, r1
 8000d8a:	6053      	str	r3, [r2, #4]
 8000d8c:	2382      	movs	r3, #130	; 0x82
 8000d8e:	005b      	lsls	r3, r3, #1
 8000d90:	687a      	ldr	r2, [r7, #4]
 8000d92:	429a      	cmp	r2, r3
 8000d94:	d00c      	beq.n	8000db0 <SPI_WaitFifoStateUntilTimeout+0x68>
 8000d96:	2380      	movs	r3, #128	; 0x80
 8000d98:	019b      	lsls	r3, r3, #6
 8000d9a:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8000d9c:	429a      	cmp	r2, r3
 8000d9e:	d016      	beq.n	8000dce <SPI_WaitFifoStateUntilTimeout+0x86>
 8000da0:	235d      	movs	r3, #93	; 0x5d
 8000da2:	2201      	movs	r2, #1
 8000da4:	54fa      	strb	r2, [r7, r3]
 8000da6:	3b01      	subs	r3, #1
 8000da8:	2200      	movs	r2, #0
 8000daa:	54fa      	strb	r2, [r7, r3]
 8000dac:	2003      	movs	r0, #3
 8000dae:	e01b      	b.n	8000de8 <SPI_WaitFifoStateUntilTimeout+0xa0>
 8000db0:	68bb      	ldr	r3, [r7, #8]
 8000db2:	2280      	movs	r2, #128	; 0x80
 8000db4:	0212      	lsls	r2, r2, #8
 8000db6:	4293      	cmp	r3, r2
 8000db8:	d003      	beq.n	8000dc2 <SPI_WaitFifoStateUntilTimeout+0x7a>
 8000dba:	2280      	movs	r2, #128	; 0x80
 8000dbc:	00d2      	lsls	r2, r2, #3
 8000dbe:	4293      	cmp	r3, r2
 8000dc0:	d1e9      	bne.n	8000d96 <SPI_WaitFifoStateUntilTimeout+0x4e>
 8000dc2:	683a      	ldr	r2, [r7, #0]
 8000dc4:	6813      	ldr	r3, [r2, #0]
 8000dc6:	2140      	movs	r1, #64	; 0x40
 8000dc8:	438b      	bics	r3, r1
 8000dca:	6013      	str	r3, [r2, #0]
 8000dcc:	e7e3      	b.n	8000d96 <SPI_WaitFifoStateUntilTimeout+0x4e>
 8000dce:	683a      	ldr	r2, [r7, #0]
 8000dd0:	6813      	ldr	r3, [r2, #0]
 8000dd2:	4906      	ldr	r1, [pc, #24]	; (8000dec <SPI_WaitFifoStateUntilTimeout+0xa4>)
 8000dd4:	400b      	ands	r3, r1
 8000dd6:	6013      	str	r3, [r2, #0]
 8000dd8:	683a      	ldr	r2, [r7, #0]
 8000dda:	6811      	ldr	r1, [r2, #0]
 8000ddc:	2380      	movs	r3, #128	; 0x80
 8000dde:	019b      	lsls	r3, r3, #6
 8000de0:	430b      	orrs	r3, r1
 8000de2:	6013      	str	r3, [r2, #0]
 8000de4:	e7dc      	b.n	8000da0 <SPI_WaitFifoStateUntilTimeout+0x58>
 8000de6:	2000      	movs	r0, #0
 8000de8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000dea:	46c0      	nop			; (mov r8, r8)
 8000dec:	ffffdfff 	.word	0xffffdfff

08000df0 <SPI_EndRxTxTransaction>:
 8000df0:	b570      	push	{r4, r5, r6, lr}
 8000df2:	b082      	sub	sp, #8
 8000df4:	0004      	movs	r4, r0
 8000df6:	000d      	movs	r5, r1
 8000df8:	0016      	movs	r6, r2
 8000dfa:	21c0      	movs	r1, #192	; 0xc0
 8000dfc:	9200      	str	r2, [sp, #0]
 8000dfe:	002b      	movs	r3, r5
 8000e00:	2200      	movs	r2, #0
 8000e02:	0149      	lsls	r1, r1, #5
 8000e04:	f7ff ffa0 	bl	8000d48 <SPI_WaitFifoStateUntilTimeout>
 8000e08:	2800      	cmp	r0, #0
 8000e0a:	d118      	bne.n	8000e3e <SPI_EndRxTxTransaction+0x4e>
 8000e0c:	9600      	str	r6, [sp, #0]
 8000e0e:	002b      	movs	r3, r5
 8000e10:	2200      	movs	r2, #0
 8000e12:	2180      	movs	r1, #128	; 0x80
 8000e14:	0020      	movs	r0, r4
 8000e16:	f7ff ff49 	bl	8000cac <SPI_WaitFlagStateUntilTimeout>
 8000e1a:	2800      	cmp	r0, #0
 8000e1c:	d116      	bne.n	8000e4c <SPI_EndRxTxTransaction+0x5c>
 8000e1e:	21c0      	movs	r1, #192	; 0xc0
 8000e20:	9600      	str	r6, [sp, #0]
 8000e22:	002b      	movs	r3, r5
 8000e24:	2200      	movs	r2, #0
 8000e26:	00c9      	lsls	r1, r1, #3
 8000e28:	0020      	movs	r0, r4
 8000e2a:	f7ff ff8d 	bl	8000d48 <SPI_WaitFifoStateUntilTimeout>
 8000e2e:	2800      	cmp	r0, #0
 8000e30:	d00a      	beq.n	8000e48 <SPI_EndRxTxTransaction+0x58>
 8000e32:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8000e34:	2220      	movs	r2, #32
 8000e36:	4313      	orrs	r3, r2
 8000e38:	6623      	str	r3, [r4, #96]	; 0x60
 8000e3a:	2003      	movs	r0, #3
 8000e3c:	e004      	b.n	8000e48 <SPI_EndRxTxTransaction+0x58>
 8000e3e:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8000e40:	2220      	movs	r2, #32
 8000e42:	4313      	orrs	r3, r2
 8000e44:	6623      	str	r3, [r4, #96]	; 0x60
 8000e46:	2003      	movs	r0, #3
 8000e48:	b002      	add	sp, #8
 8000e4a:	bd70      	pop	{r4, r5, r6, pc}
 8000e4c:	6e23      	ldr	r3, [r4, #96]	; 0x60
 8000e4e:	2220      	movs	r2, #32
 8000e50:	4313      	orrs	r3, r2
 8000e52:	6623      	str	r3, [r4, #96]	; 0x60
 8000e54:	2003      	movs	r0, #3
 8000e56:	e7f7      	b.n	8000e48 <SPI_EndRxTxTransaction+0x58>

08000e58 <HAL_SPI_Init>:
 8000e58:	b510      	push	{r4, lr}
 8000e5a:	1e04      	subs	r4, r0, #0
 8000e5c:	d05e      	beq.n	8000f1c <HAL_SPI_Init+0xc4>
 8000e5e:	2300      	movs	r3, #0
 8000e60:	6283      	str	r3, [r0, #40]	; 0x28
 8000e62:	335d      	adds	r3, #93	; 0x5d
 8000e64:	5cc3      	ldrb	r3, [r0, r3]
 8000e66:	2b00      	cmp	r3, #0
 8000e68:	d04c      	beq.n	8000f04 <HAL_SPI_Init+0xac>
 8000e6a:	235d      	movs	r3, #93	; 0x5d
 8000e6c:	2202      	movs	r2, #2
 8000e6e:	54e2      	strb	r2, [r4, r3]
 8000e70:	6822      	ldr	r2, [r4, #0]
 8000e72:	6813      	ldr	r3, [r2, #0]
 8000e74:	2140      	movs	r1, #64	; 0x40
 8000e76:	438b      	bics	r3, r1
 8000e78:	6013      	str	r3, [r2, #0]
 8000e7a:	68e3      	ldr	r3, [r4, #12]
 8000e7c:	22e0      	movs	r2, #224	; 0xe0
 8000e7e:	00d2      	lsls	r2, r2, #3
 8000e80:	4293      	cmp	r3, r2
 8000e82:	d945      	bls.n	8000f10 <HAL_SPI_Init+0xb8>
 8000e84:	2200      	movs	r2, #0
 8000e86:	21f0      	movs	r1, #240	; 0xf0
 8000e88:	0109      	lsls	r1, r1, #4
 8000e8a:	428b      	cmp	r3, r1
 8000e8c:	d005      	beq.n	8000e9a <HAL_SPI_Init+0x42>
 8000e8e:	21e0      	movs	r1, #224	; 0xe0
 8000e90:	00c9      	lsls	r1, r1, #3
 8000e92:	428b      	cmp	r3, r1
 8000e94:	d001      	beq.n	8000e9a <HAL_SPI_Init+0x42>
 8000e96:	2100      	movs	r1, #0
 8000e98:	62a1      	str	r1, [r4, #40]	; 0x28
 8000e9a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000e9c:	2900      	cmp	r1, #0
 8000e9e:	d105      	bne.n	8000eac <HAL_SPI_Init+0x54>
 8000ea0:	21e0      	movs	r1, #224	; 0xe0
 8000ea2:	00c9      	lsls	r1, r1, #3
 8000ea4:	428b      	cmp	r3, r1
 8000ea6:	d936      	bls.n	8000f16 <HAL_SPI_Init+0xbe>
 8000ea8:	2302      	movs	r3, #2
 8000eaa:	6323      	str	r3, [r4, #48]	; 0x30
 8000eac:	6863      	ldr	r3, [r4, #4]
 8000eae:	68a1      	ldr	r1, [r4, #8]
 8000eb0:	430b      	orrs	r3, r1
 8000eb2:	6921      	ldr	r1, [r4, #16]
 8000eb4:	430b      	orrs	r3, r1
 8000eb6:	6961      	ldr	r1, [r4, #20]
 8000eb8:	430b      	orrs	r3, r1
 8000eba:	2180      	movs	r1, #128	; 0x80
 8000ebc:	0089      	lsls	r1, r1, #2
 8000ebe:	69a0      	ldr	r0, [r4, #24]
 8000ec0:	4001      	ands	r1, r0
 8000ec2:	430b      	orrs	r3, r1
 8000ec4:	69e1      	ldr	r1, [r4, #28]
 8000ec6:	430b      	orrs	r3, r1
 8000ec8:	6a21      	ldr	r1, [r4, #32]
 8000eca:	430b      	orrs	r3, r1
 8000ecc:	6821      	ldr	r1, [r4, #0]
 8000ece:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8000ed0:	4303      	orrs	r3, r0
 8000ed2:	600b      	str	r3, [r1, #0]
 8000ed4:	8b61      	ldrh	r1, [r4, #26]
 8000ed6:	2304      	movs	r3, #4
 8000ed8:	400b      	ands	r3, r1
 8000eda:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8000edc:	430b      	orrs	r3, r1
 8000ede:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000ee0:	430b      	orrs	r3, r1
 8000ee2:	68e1      	ldr	r1, [r4, #12]
 8000ee4:	430b      	orrs	r3, r1
 8000ee6:	6821      	ldr	r1, [r4, #0]
 8000ee8:	4313      	orrs	r3, r2
 8000eea:	604b      	str	r3, [r1, #4]
 8000eec:	6822      	ldr	r2, [r4, #0]
 8000eee:	69d3      	ldr	r3, [r2, #28]
 8000ef0:	490b      	ldr	r1, [pc, #44]	; (8000f20 <HAL_SPI_Init+0xc8>)
 8000ef2:	400b      	ands	r3, r1
 8000ef4:	61d3      	str	r3, [r2, #28]
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	6623      	str	r3, [r4, #96]	; 0x60
 8000efa:	335d      	adds	r3, #93	; 0x5d
 8000efc:	2201      	movs	r2, #1
 8000efe:	54e2      	strb	r2, [r4, r3]
 8000f00:	2000      	movs	r0, #0
 8000f02:	bd10      	pop	{r4, pc}
 8000f04:	335c      	adds	r3, #92	; 0x5c
 8000f06:	2200      	movs	r2, #0
 8000f08:	54c2      	strb	r2, [r0, r3]
 8000f0a:	f002 f9c1 	bl	8003290 <HAL_SPI_MspInit>
 8000f0e:	e7ac      	b.n	8000e6a <HAL_SPI_Init+0x12>
 8000f10:	2280      	movs	r2, #128	; 0x80
 8000f12:	0152      	lsls	r2, r2, #5
 8000f14:	e7b7      	b.n	8000e86 <HAL_SPI_Init+0x2e>
 8000f16:	2301      	movs	r3, #1
 8000f18:	6323      	str	r3, [r4, #48]	; 0x30
 8000f1a:	e7c7      	b.n	8000eac <HAL_SPI_Init+0x54>
 8000f1c:	2001      	movs	r0, #1
 8000f1e:	e7f0      	b.n	8000f02 <HAL_SPI_Init+0xaa>
 8000f20:	fffff7ff 	.word	0xfffff7ff

08000f24 <HAL_SPI_Transmit>:
 8000f24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f26:	b085      	sub	sp, #20
 8000f28:	0004      	movs	r4, r0
 8000f2a:	9101      	str	r1, [sp, #4]
 8000f2c:	0016      	movs	r6, r2
 8000f2e:	001f      	movs	r7, r3
 8000f30:	235c      	movs	r3, #92	; 0x5c
 8000f32:	5cc3      	ldrb	r3, [r0, r3]
 8000f34:	2b01      	cmp	r3, #1
 8000f36:	d100      	bne.n	8000f3a <HAL_SPI_Transmit+0x16>
 8000f38:	e0e2      	b.n	8001100 <HAL_SPI_Transmit+0x1dc>
 8000f3a:	235c      	movs	r3, #92	; 0x5c
 8000f3c:	2201      	movs	r2, #1
 8000f3e:	54c2      	strb	r2, [r0, r3]
 8000f40:	f7ff f9b0 	bl	80002a4 <HAL_GetTick>
 8000f44:	0005      	movs	r5, r0
 8000f46:	235d      	movs	r3, #93	; 0x5d
 8000f48:	5ce3      	ldrb	r3, [r4, r3]
 8000f4a:	2b01      	cmp	r3, #1
 8000f4c:	d008      	beq.n	8000f60 <HAL_SPI_Transmit+0x3c>
 8000f4e:	2002      	movs	r0, #2
 8000f50:	235d      	movs	r3, #93	; 0x5d
 8000f52:	2201      	movs	r2, #1
 8000f54:	54e2      	strb	r2, [r4, r3]
 8000f56:	3b01      	subs	r3, #1
 8000f58:	2200      	movs	r2, #0
 8000f5a:	54e2      	strb	r2, [r4, r3]
 8000f5c:	b005      	add	sp, #20
 8000f5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f60:	9901      	ldr	r1, [sp, #4]
 8000f62:	2900      	cmp	r1, #0
 8000f64:	d100      	bne.n	8000f68 <HAL_SPI_Transmit+0x44>
 8000f66:	e0bd      	b.n	80010e4 <HAL_SPI_Transmit+0x1c0>
 8000f68:	2e00      	cmp	r6, #0
 8000f6a:	d100      	bne.n	8000f6e <HAL_SPI_Transmit+0x4a>
 8000f6c:	e0bc      	b.n	80010e8 <HAL_SPI_Transmit+0x1c4>
 8000f6e:	335c      	adds	r3, #92	; 0x5c
 8000f70:	2203      	movs	r2, #3
 8000f72:	54e2      	strb	r2, [r4, r3]
 8000f74:	2300      	movs	r3, #0
 8000f76:	6623      	str	r3, [r4, #96]	; 0x60
 8000f78:	63a1      	str	r1, [r4, #56]	; 0x38
 8000f7a:	87a6      	strh	r6, [r4, #60]	; 0x3c
 8000f7c:	87e6      	strh	r6, [r4, #62]	; 0x3e
 8000f7e:	6423      	str	r3, [r4, #64]	; 0x40
 8000f80:	3241      	adds	r2, #65	; 0x41
 8000f82:	52a3      	strh	r3, [r4, r2]
 8000f84:	3202      	adds	r2, #2
 8000f86:	52a3      	strh	r3, [r4, r2]
 8000f88:	6523      	str	r3, [r4, #80]	; 0x50
 8000f8a:	64e3      	str	r3, [r4, #76]	; 0x4c
 8000f8c:	2380      	movs	r3, #128	; 0x80
 8000f8e:	021b      	lsls	r3, r3, #8
 8000f90:	68a2      	ldr	r2, [r4, #8]
 8000f92:	429a      	cmp	r2, r3
 8000f94:	d01d      	beq.n	8000fd2 <HAL_SPI_Transmit+0xae>
 8000f96:	6823      	ldr	r3, [r4, #0]
 8000f98:	681a      	ldr	r2, [r3, #0]
 8000f9a:	0652      	lsls	r2, r2, #25
 8000f9c:	d403      	bmi.n	8000fa6 <HAL_SPI_Transmit+0x82>
 8000f9e:	681a      	ldr	r2, [r3, #0]
 8000fa0:	2140      	movs	r1, #64	; 0x40
 8000fa2:	430a      	orrs	r2, r1
 8000fa4:	601a      	str	r2, [r3, #0]
 8000fa6:	23e0      	movs	r3, #224	; 0xe0
 8000fa8:	00db      	lsls	r3, r3, #3
 8000faa:	68e2      	ldr	r2, [r4, #12]
 8000fac:	429a      	cmp	r2, r3
 8000fae:	d935      	bls.n	800101c <HAL_SPI_Transmit+0xf8>
 8000fb0:	6863      	ldr	r3, [r4, #4]
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d001      	beq.n	8000fba <HAL_SPI_Transmit+0x96>
 8000fb6:	2e01      	cmp	r6, #1
 8000fb8:	d11d      	bne.n	8000ff6 <HAL_SPI_Transmit+0xd2>
 8000fba:	6823      	ldr	r3, [r4, #0]
 8000fbc:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8000fbe:	8812      	ldrh	r2, [r2, #0]
 8000fc0:	60da      	str	r2, [r3, #12]
 8000fc2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8000fc4:	3302      	adds	r3, #2
 8000fc6:	63a3      	str	r3, [r4, #56]	; 0x38
 8000fc8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8000fca:	3b01      	subs	r3, #1
 8000fcc:	b29b      	uxth	r3, r3
 8000fce:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8000fd0:	e011      	b.n	8000ff6 <HAL_SPI_Transmit+0xd2>
 8000fd2:	6822      	ldr	r2, [r4, #0]
 8000fd4:	6811      	ldr	r1, [r2, #0]
 8000fd6:	2380      	movs	r3, #128	; 0x80
 8000fd8:	01db      	lsls	r3, r3, #7
 8000fda:	430b      	orrs	r3, r1
 8000fdc:	6013      	str	r3, [r2, #0]
 8000fde:	e7da      	b.n	8000f96 <HAL_SPI_Transmit+0x72>
 8000fe0:	f7ff f960 	bl	80002a4 <HAL_GetTick>
 8000fe4:	1b40      	subs	r0, r0, r5
 8000fe6:	42b8      	cmp	r0, r7
 8000fe8:	d302      	bcc.n	8000ff0 <HAL_SPI_Transmit+0xcc>
 8000fea:	1c7b      	adds	r3, r7, #1
 8000fec:	d000      	beq.n	8000ff0 <HAL_SPI_Transmit+0xcc>
 8000fee:	e07d      	b.n	80010ec <HAL_SPI_Transmit+0x1c8>
 8000ff0:	2f00      	cmp	r7, #0
 8000ff2:	d100      	bne.n	8000ff6 <HAL_SPI_Transmit+0xd2>
 8000ff4:	e07c      	b.n	80010f0 <HAL_SPI_Transmit+0x1cc>
 8000ff6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8000ff8:	b29b      	uxth	r3, r3
 8000ffa:	2b00      	cmp	r3, #0
 8000ffc:	d05a      	beq.n	80010b4 <HAL_SPI_Transmit+0x190>
 8000ffe:	6823      	ldr	r3, [r4, #0]
 8001000:	689a      	ldr	r2, [r3, #8]
 8001002:	0792      	lsls	r2, r2, #30
 8001004:	d5ec      	bpl.n	8000fe0 <HAL_SPI_Transmit+0xbc>
 8001006:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8001008:	8812      	ldrh	r2, [r2, #0]
 800100a:	60da      	str	r2, [r3, #12]
 800100c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800100e:	3302      	adds	r3, #2
 8001010:	63a3      	str	r3, [r4, #56]	; 0x38
 8001012:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8001014:	3b01      	subs	r3, #1
 8001016:	b29b      	uxth	r3, r3
 8001018:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800101a:	e7ec      	b.n	8000ff6 <HAL_SPI_Transmit+0xd2>
 800101c:	6863      	ldr	r3, [r4, #4]
 800101e:	2b00      	cmp	r3, #0
 8001020:	d001      	beq.n	8001026 <HAL_SPI_Transmit+0x102>
 8001022:	2e01      	cmp	r6, #1
 8001024:	d12f      	bne.n	8001086 <HAL_SPI_Transmit+0x162>
 8001026:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8001028:	b29b      	uxth	r3, r3
 800102a:	2b01      	cmp	r3, #1
 800102c:	d90b      	bls.n	8001046 <HAL_SPI_Transmit+0x122>
 800102e:	6823      	ldr	r3, [r4, #0]
 8001030:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8001032:	8812      	ldrh	r2, [r2, #0]
 8001034:	60da      	str	r2, [r3, #12]
 8001036:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001038:	3302      	adds	r3, #2
 800103a:	63a3      	str	r3, [r4, #56]	; 0x38
 800103c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800103e:	3b02      	subs	r3, #2
 8001040:	b29b      	uxth	r3, r3
 8001042:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8001044:	e01f      	b.n	8001086 <HAL_SPI_Transmit+0x162>
 8001046:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001048:	781b      	ldrb	r3, [r3, #0]
 800104a:	6822      	ldr	r2, [r4, #0]
 800104c:	7313      	strb	r3, [r2, #12]
 800104e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001050:	3301      	adds	r3, #1
 8001052:	63a3      	str	r3, [r4, #56]	; 0x38
 8001054:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8001056:	3b01      	subs	r3, #1
 8001058:	b29b      	uxth	r3, r3
 800105a:	87e3      	strh	r3, [r4, #62]	; 0x3e
 800105c:	e013      	b.n	8001086 <HAL_SPI_Transmit+0x162>
 800105e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001060:	781b      	ldrb	r3, [r3, #0]
 8001062:	7313      	strb	r3, [r2, #12]
 8001064:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8001066:	3301      	adds	r3, #1
 8001068:	63a3      	str	r3, [r4, #56]	; 0x38
 800106a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800106c:	3b01      	subs	r3, #1
 800106e:	b29b      	uxth	r3, r3
 8001070:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8001072:	e008      	b.n	8001086 <HAL_SPI_Transmit+0x162>
 8001074:	f7ff f916 	bl	80002a4 <HAL_GetTick>
 8001078:	1b40      	subs	r0, r0, r5
 800107a:	42b8      	cmp	r0, r7
 800107c:	d301      	bcc.n	8001082 <HAL_SPI_Transmit+0x15e>
 800107e:	1c7b      	adds	r3, r7, #1
 8001080:	d138      	bne.n	80010f4 <HAL_SPI_Transmit+0x1d0>
 8001082:	2f00      	cmp	r7, #0
 8001084:	d038      	beq.n	80010f8 <HAL_SPI_Transmit+0x1d4>
 8001086:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8001088:	b29b      	uxth	r3, r3
 800108a:	2b00      	cmp	r3, #0
 800108c:	d012      	beq.n	80010b4 <HAL_SPI_Transmit+0x190>
 800108e:	6822      	ldr	r2, [r4, #0]
 8001090:	6893      	ldr	r3, [r2, #8]
 8001092:	079b      	lsls	r3, r3, #30
 8001094:	d5ee      	bpl.n	8001074 <HAL_SPI_Transmit+0x150>
 8001096:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8001098:	b29b      	uxth	r3, r3
 800109a:	2b01      	cmp	r3, #1
 800109c:	d9df      	bls.n	800105e <HAL_SPI_Transmit+0x13a>
 800109e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80010a0:	881b      	ldrh	r3, [r3, #0]
 80010a2:	60d3      	str	r3, [r2, #12]
 80010a4:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80010a6:	3302      	adds	r3, #2
 80010a8:	63a3      	str	r3, [r4, #56]	; 0x38
 80010aa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80010ac:	3b02      	subs	r3, #2
 80010ae:	b29b      	uxth	r3, r3
 80010b0:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80010b2:	e7e8      	b.n	8001086 <HAL_SPI_Transmit+0x162>
 80010b4:	002a      	movs	r2, r5
 80010b6:	0039      	movs	r1, r7
 80010b8:	0020      	movs	r0, r4
 80010ba:	f7ff fe99 	bl	8000df0 <SPI_EndRxTxTransaction>
 80010be:	2800      	cmp	r0, #0
 80010c0:	d001      	beq.n	80010c6 <HAL_SPI_Transmit+0x1a2>
 80010c2:	2320      	movs	r3, #32
 80010c4:	6623      	str	r3, [r4, #96]	; 0x60
 80010c6:	68a3      	ldr	r3, [r4, #8]
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d106      	bne.n	80010da <HAL_SPI_Transmit+0x1b6>
 80010cc:	9303      	str	r3, [sp, #12]
 80010ce:	6823      	ldr	r3, [r4, #0]
 80010d0:	68da      	ldr	r2, [r3, #12]
 80010d2:	9203      	str	r2, [sp, #12]
 80010d4:	689b      	ldr	r3, [r3, #8]
 80010d6:	9303      	str	r3, [sp, #12]
 80010d8:	9b03      	ldr	r3, [sp, #12]
 80010da:	6e23      	ldr	r3, [r4, #96]	; 0x60
 80010dc:	2b00      	cmp	r3, #0
 80010de:	d10d      	bne.n	80010fc <HAL_SPI_Transmit+0x1d8>
 80010e0:	2000      	movs	r0, #0
 80010e2:	e735      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010e4:	2001      	movs	r0, #1
 80010e6:	e733      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010e8:	2001      	movs	r0, #1
 80010ea:	e731      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010ec:	2003      	movs	r0, #3
 80010ee:	e72f      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010f0:	2003      	movs	r0, #3
 80010f2:	e72d      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010f4:	2003      	movs	r0, #3
 80010f6:	e72b      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010f8:	2003      	movs	r0, #3
 80010fa:	e729      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 80010fc:	2001      	movs	r0, #1
 80010fe:	e727      	b.n	8000f50 <HAL_SPI_Transmit+0x2c>
 8001100:	2002      	movs	r0, #2
 8001102:	e72b      	b.n	8000f5c <HAL_SPI_Transmit+0x38>

08001104 <TIM_OC1_SetConfig>:
 8001104:	b530      	push	{r4, r5, lr}
 8001106:	6a03      	ldr	r3, [r0, #32]
 8001108:	2201      	movs	r2, #1
 800110a:	4393      	bics	r3, r2
 800110c:	6203      	str	r3, [r0, #32]
 800110e:	6a03      	ldr	r3, [r0, #32]
 8001110:	6842      	ldr	r2, [r0, #4]
 8001112:	6984      	ldr	r4, [r0, #24]
 8001114:	2573      	movs	r5, #115	; 0x73
 8001116:	43ac      	bics	r4, r5
 8001118:	680d      	ldr	r5, [r1, #0]
 800111a:	432c      	orrs	r4, r5
 800111c:	2502      	movs	r5, #2
 800111e:	43ab      	bics	r3, r5
 8001120:	688d      	ldr	r5, [r1, #8]
 8001122:	432b      	orrs	r3, r5
 8001124:	4d14      	ldr	r5, [pc, #80]	; (8001178 <TIM_OC1_SetConfig+0x74>)
 8001126:	42a8      	cmp	r0, r5
 8001128:	d008      	beq.n	800113c <TIM_OC1_SetConfig+0x38>
 800112a:	4d14      	ldr	r5, [pc, #80]	; (800117c <TIM_OC1_SetConfig+0x78>)
 800112c:	42a8      	cmp	r0, r5
 800112e:	d005      	beq.n	800113c <TIM_OC1_SetConfig+0x38>
 8001130:	4d13      	ldr	r5, [pc, #76]	; (8001180 <TIM_OC1_SetConfig+0x7c>)
 8001132:	42a8      	cmp	r0, r5
 8001134:	d002      	beq.n	800113c <TIM_OC1_SetConfig+0x38>
 8001136:	4d13      	ldr	r5, [pc, #76]	; (8001184 <TIM_OC1_SetConfig+0x80>)
 8001138:	42a8      	cmp	r0, r5
 800113a:	d105      	bne.n	8001148 <TIM_OC1_SetConfig+0x44>
 800113c:	2508      	movs	r5, #8
 800113e:	43ab      	bics	r3, r5
 8001140:	68cd      	ldr	r5, [r1, #12]
 8001142:	432b      	orrs	r3, r5
 8001144:	2504      	movs	r5, #4
 8001146:	43ab      	bics	r3, r5
 8001148:	4d0b      	ldr	r5, [pc, #44]	; (8001178 <TIM_OC1_SetConfig+0x74>)
 800114a:	42a8      	cmp	r0, r5
 800114c:	d008      	beq.n	8001160 <TIM_OC1_SetConfig+0x5c>
 800114e:	4d0b      	ldr	r5, [pc, #44]	; (800117c <TIM_OC1_SetConfig+0x78>)
 8001150:	42a8      	cmp	r0, r5
 8001152:	d005      	beq.n	8001160 <TIM_OC1_SetConfig+0x5c>
 8001154:	4d0a      	ldr	r5, [pc, #40]	; (8001180 <TIM_OC1_SetConfig+0x7c>)
 8001156:	42a8      	cmp	r0, r5
 8001158:	d002      	beq.n	8001160 <TIM_OC1_SetConfig+0x5c>
 800115a:	4d0a      	ldr	r5, [pc, #40]	; (8001184 <TIM_OC1_SetConfig+0x80>)
 800115c:	42a8      	cmp	r0, r5
 800115e:	d105      	bne.n	800116c <TIM_OC1_SetConfig+0x68>
 8001160:	4d09      	ldr	r5, [pc, #36]	; (8001188 <TIM_OC1_SetConfig+0x84>)
 8001162:	402a      	ands	r2, r5
 8001164:	694d      	ldr	r5, [r1, #20]
 8001166:	432a      	orrs	r2, r5
 8001168:	698d      	ldr	r5, [r1, #24]
 800116a:	432a      	orrs	r2, r5
 800116c:	6042      	str	r2, [r0, #4]
 800116e:	6184      	str	r4, [r0, #24]
 8001170:	684a      	ldr	r2, [r1, #4]
 8001172:	6342      	str	r2, [r0, #52]	; 0x34
 8001174:	6203      	str	r3, [r0, #32]
 8001176:	bd30      	pop	{r4, r5, pc}
 8001178:	40012c00 	.word	0x40012c00
 800117c:	40014000 	.word	0x40014000
 8001180:	40014400 	.word	0x40014400
 8001184:	40014800 	.word	0x40014800
 8001188:	fffffcff 	.word	0xfffffcff

0800118c <TIM_OC3_SetConfig>:
 800118c:	b570      	push	{r4, r5, r6, lr}
 800118e:	6a03      	ldr	r3, [r0, #32]
 8001190:	4a19      	ldr	r2, [pc, #100]	; (80011f8 <TIM_OC3_SetConfig+0x6c>)
 8001192:	4013      	ands	r3, r2
 8001194:	6203      	str	r3, [r0, #32]
 8001196:	6a03      	ldr	r3, [r0, #32]
 8001198:	6842      	ldr	r2, [r0, #4]
 800119a:	69c4      	ldr	r4, [r0, #28]
 800119c:	2573      	movs	r5, #115	; 0x73
 800119e:	43ac      	bics	r4, r5
 80011a0:	680e      	ldr	r6, [r1, #0]
 80011a2:	4326      	orrs	r6, r4
 80011a4:	4c15      	ldr	r4, [pc, #84]	; (80011fc <TIM_OC3_SetConfig+0x70>)
 80011a6:	4023      	ands	r3, r4
 80011a8:	688c      	ldr	r4, [r1, #8]
 80011aa:	0224      	lsls	r4, r4, #8
 80011ac:	4323      	orrs	r3, r4
 80011ae:	4c14      	ldr	r4, [pc, #80]	; (8001200 <TIM_OC3_SetConfig+0x74>)
 80011b0:	42a0      	cmp	r0, r4
 80011b2:	d019      	beq.n	80011e8 <TIM_OC3_SetConfig+0x5c>
 80011b4:	4c12      	ldr	r4, [pc, #72]	; (8001200 <TIM_OC3_SetConfig+0x74>)
 80011b6:	42a0      	cmp	r0, r4
 80011b8:	d008      	beq.n	80011cc <TIM_OC3_SetConfig+0x40>
 80011ba:	4c12      	ldr	r4, [pc, #72]	; (8001204 <TIM_OC3_SetConfig+0x78>)
 80011bc:	42a0      	cmp	r0, r4
 80011be:	d005      	beq.n	80011cc <TIM_OC3_SetConfig+0x40>
 80011c0:	4c11      	ldr	r4, [pc, #68]	; (8001208 <TIM_OC3_SetConfig+0x7c>)
 80011c2:	42a0      	cmp	r0, r4
 80011c4:	d002      	beq.n	80011cc <TIM_OC3_SetConfig+0x40>
 80011c6:	4c11      	ldr	r4, [pc, #68]	; (800120c <TIM_OC3_SetConfig+0x80>)
 80011c8:	42a0      	cmp	r0, r4
 80011ca:	d107      	bne.n	80011dc <TIM_OC3_SetConfig+0x50>
 80011cc:	4c10      	ldr	r4, [pc, #64]	; (8001210 <TIM_OC3_SetConfig+0x84>)
 80011ce:	4014      	ands	r4, r2
 80011d0:	694a      	ldr	r2, [r1, #20]
 80011d2:	0112      	lsls	r2, r2, #4
 80011d4:	4322      	orrs	r2, r4
 80011d6:	698c      	ldr	r4, [r1, #24]
 80011d8:	0125      	lsls	r5, r4, #4
 80011da:	432a      	orrs	r2, r5
 80011dc:	6042      	str	r2, [r0, #4]
 80011de:	61c6      	str	r6, [r0, #28]
 80011e0:	684a      	ldr	r2, [r1, #4]
 80011e2:	63c2      	str	r2, [r0, #60]	; 0x3c
 80011e4:	6203      	str	r3, [r0, #32]
 80011e6:	bd70      	pop	{r4, r5, r6, pc}
 80011e8:	4c0a      	ldr	r4, [pc, #40]	; (8001214 <TIM_OC3_SetConfig+0x88>)
 80011ea:	401c      	ands	r4, r3
 80011ec:	68cb      	ldr	r3, [r1, #12]
 80011ee:	021b      	lsls	r3, r3, #8
 80011f0:	4323      	orrs	r3, r4
 80011f2:	4c09      	ldr	r4, [pc, #36]	; (8001218 <TIM_OC3_SetConfig+0x8c>)
 80011f4:	4023      	ands	r3, r4
 80011f6:	e7dd      	b.n	80011b4 <TIM_OC3_SetConfig+0x28>
 80011f8:	fffffeff 	.word	0xfffffeff
 80011fc:	fffffdff 	.word	0xfffffdff
 8001200:	40012c00 	.word	0x40012c00
 8001204:	40014000 	.word	0x40014000
 8001208:	40014400 	.word	0x40014400
 800120c:	40014800 	.word	0x40014800
 8001210:	ffffcfff 	.word	0xffffcfff
 8001214:	fffff7ff 	.word	0xfffff7ff
 8001218:	fffffbff 	.word	0xfffffbff

0800121c <TIM_OC4_SetConfig>:
 800121c:	b530      	push	{r4, r5, lr}
 800121e:	6a03      	ldr	r3, [r0, #32]
 8001220:	4a13      	ldr	r2, [pc, #76]	; (8001270 <TIM_OC4_SetConfig+0x54>)
 8001222:	4013      	ands	r3, r2
 8001224:	6203      	str	r3, [r0, #32]
 8001226:	6a02      	ldr	r2, [r0, #32]
 8001228:	6843      	ldr	r3, [r0, #4]
 800122a:	69c4      	ldr	r4, [r0, #28]
 800122c:	4d11      	ldr	r5, [pc, #68]	; (8001274 <TIM_OC4_SetConfig+0x58>)
 800122e:	402c      	ands	r4, r5
 8001230:	680d      	ldr	r5, [r1, #0]
 8001232:	022d      	lsls	r5, r5, #8
 8001234:	432c      	orrs	r4, r5
 8001236:	4d10      	ldr	r5, [pc, #64]	; (8001278 <TIM_OC4_SetConfig+0x5c>)
 8001238:	4015      	ands	r5, r2
 800123a:	688a      	ldr	r2, [r1, #8]
 800123c:	0312      	lsls	r2, r2, #12
 800123e:	432a      	orrs	r2, r5
 8001240:	4d0e      	ldr	r5, [pc, #56]	; (800127c <TIM_OC4_SetConfig+0x60>)
 8001242:	42a8      	cmp	r0, r5
 8001244:	d008      	beq.n	8001258 <TIM_OC4_SetConfig+0x3c>
 8001246:	4d0e      	ldr	r5, [pc, #56]	; (8001280 <TIM_OC4_SetConfig+0x64>)
 8001248:	42a8      	cmp	r0, r5
 800124a:	d005      	beq.n	8001258 <TIM_OC4_SetConfig+0x3c>
 800124c:	4d0d      	ldr	r5, [pc, #52]	; (8001284 <TIM_OC4_SetConfig+0x68>)
 800124e:	42a8      	cmp	r0, r5
 8001250:	d002      	beq.n	8001258 <TIM_OC4_SetConfig+0x3c>
 8001252:	4d0d      	ldr	r5, [pc, #52]	; (8001288 <TIM_OC4_SetConfig+0x6c>)
 8001254:	42a8      	cmp	r0, r5
 8001256:	d104      	bne.n	8001262 <TIM_OC4_SetConfig+0x46>
 8001258:	4d0c      	ldr	r5, [pc, #48]	; (800128c <TIM_OC4_SetConfig+0x70>)
 800125a:	402b      	ands	r3, r5
 800125c:	694d      	ldr	r5, [r1, #20]
 800125e:	01ad      	lsls	r5, r5, #6
 8001260:	432b      	orrs	r3, r5
 8001262:	6043      	str	r3, [r0, #4]
 8001264:	61c4      	str	r4, [r0, #28]
 8001266:	684b      	ldr	r3, [r1, #4]
 8001268:	6403      	str	r3, [r0, #64]	; 0x40
 800126a:	6202      	str	r2, [r0, #32]
 800126c:	bd30      	pop	{r4, r5, pc}
 800126e:	46c0      	nop			; (mov r8, r8)
 8001270:	ffffefff 	.word	0xffffefff
 8001274:	ffff8cff 	.word	0xffff8cff
 8001278:	ffffdfff 	.word	0xffffdfff
 800127c:	40012c00 	.word	0x40012c00
 8001280:	40014000 	.word	0x40014000
 8001284:	40014400 	.word	0x40014400
 8001288:	40014800 	.word	0x40014800
 800128c:	ffffbfff 	.word	0xffffbfff

08001290 <TIM_TI1_ConfigInputStage>:
 8001290:	b530      	push	{r4, r5, lr}
 8001292:	6a03      	ldr	r3, [r0, #32]
 8001294:	6a04      	ldr	r4, [r0, #32]
 8001296:	2501      	movs	r5, #1
 8001298:	43ac      	bics	r4, r5
 800129a:	6204      	str	r4, [r0, #32]
 800129c:	6984      	ldr	r4, [r0, #24]
 800129e:	35ef      	adds	r5, #239	; 0xef
 80012a0:	43ac      	bics	r4, r5
 80012a2:	0112      	lsls	r2, r2, #4
 80012a4:	4322      	orrs	r2, r4
 80012a6:	240a      	movs	r4, #10
 80012a8:	43a3      	bics	r3, r4
 80012aa:	4319      	orrs	r1, r3
 80012ac:	6182      	str	r2, [r0, #24]
 80012ae:	6201      	str	r1, [r0, #32]
 80012b0:	bd30      	pop	{r4, r5, pc}
	...

080012b4 <TIM_TI2_SetConfig>:
 80012b4:	b570      	push	{r4, r5, r6, lr}
 80012b6:	6a04      	ldr	r4, [r0, #32]
 80012b8:	2510      	movs	r5, #16
 80012ba:	43ac      	bics	r4, r5
 80012bc:	6204      	str	r4, [r0, #32]
 80012be:	6985      	ldr	r5, [r0, #24]
 80012c0:	6a04      	ldr	r4, [r0, #32]
 80012c2:	4e08      	ldr	r6, [pc, #32]	; (80012e4 <TIM_TI2_SetConfig+0x30>)
 80012c4:	4035      	ands	r5, r6
 80012c6:	0212      	lsls	r2, r2, #8
 80012c8:	432a      	orrs	r2, r5
 80012ca:	4d07      	ldr	r5, [pc, #28]	; (80012e8 <TIM_TI2_SetConfig+0x34>)
 80012cc:	402a      	ands	r2, r5
 80012ce:	071b      	lsls	r3, r3, #28
 80012d0:	0c1b      	lsrs	r3, r3, #16
 80012d2:	4313      	orrs	r3, r2
 80012d4:	22a0      	movs	r2, #160	; 0xa0
 80012d6:	4394      	bics	r4, r2
 80012d8:	0109      	lsls	r1, r1, #4
 80012da:	400a      	ands	r2, r1
 80012dc:	4322      	orrs	r2, r4
 80012de:	6183      	str	r3, [r0, #24]
 80012e0:	6202      	str	r2, [r0, #32]
 80012e2:	bd70      	pop	{r4, r5, r6, pc}
 80012e4:	fffffcff 	.word	0xfffffcff
 80012e8:	ffff0fff 	.word	0xffff0fff

080012ec <TIM_TI2_ConfigInputStage>:
 80012ec:	b530      	push	{r4, r5, lr}
 80012ee:	6a03      	ldr	r3, [r0, #32]
 80012f0:	2410      	movs	r4, #16
 80012f2:	43a3      	bics	r3, r4
 80012f4:	6203      	str	r3, [r0, #32]
 80012f6:	6984      	ldr	r4, [r0, #24]
 80012f8:	6a03      	ldr	r3, [r0, #32]
 80012fa:	4d05      	ldr	r5, [pc, #20]	; (8001310 <TIM_TI2_ConfigInputStage+0x24>)
 80012fc:	402c      	ands	r4, r5
 80012fe:	0312      	lsls	r2, r2, #12
 8001300:	4322      	orrs	r2, r4
 8001302:	24a0      	movs	r4, #160	; 0xa0
 8001304:	43a3      	bics	r3, r4
 8001306:	0109      	lsls	r1, r1, #4
 8001308:	4319      	orrs	r1, r3
 800130a:	6182      	str	r2, [r0, #24]
 800130c:	6201      	str	r1, [r0, #32]
 800130e:	bd30      	pop	{r4, r5, pc}
 8001310:	ffff0fff 	.word	0xffff0fff

08001314 <TIM_TI3_SetConfig>:
 8001314:	b570      	push	{r4, r5, r6, lr}
 8001316:	6a04      	ldr	r4, [r0, #32]
 8001318:	4d0b      	ldr	r5, [pc, #44]	; (8001348 <TIM_TI3_SetConfig+0x34>)
 800131a:	402c      	ands	r4, r5
 800131c:	6204      	str	r4, [r0, #32]
 800131e:	69c4      	ldr	r4, [r0, #28]
 8001320:	6a05      	ldr	r5, [r0, #32]
 8001322:	2603      	movs	r6, #3
 8001324:	43b4      	bics	r4, r6
 8001326:	4322      	orrs	r2, r4
 8001328:	24f0      	movs	r4, #240	; 0xf0
 800132a:	43a2      	bics	r2, r4
 800132c:	011c      	lsls	r4, r3, #4
 800132e:	23ff      	movs	r3, #255	; 0xff
 8001330:	4023      	ands	r3, r4
 8001332:	431a      	orrs	r2, r3
 8001334:	4b05      	ldr	r3, [pc, #20]	; (800134c <TIM_TI3_SetConfig+0x38>)
 8001336:	402b      	ands	r3, r5
 8001338:	0209      	lsls	r1, r1, #8
 800133a:	24a0      	movs	r4, #160	; 0xa0
 800133c:	0124      	lsls	r4, r4, #4
 800133e:	4021      	ands	r1, r4
 8001340:	4319      	orrs	r1, r3
 8001342:	61c2      	str	r2, [r0, #28]
 8001344:	6201      	str	r1, [r0, #32]
 8001346:	bd70      	pop	{r4, r5, r6, pc}
 8001348:	fffffeff 	.word	0xfffffeff
 800134c:	fffff5ff 	.word	0xfffff5ff

08001350 <TIM_TI4_SetConfig>:
 8001350:	b570      	push	{r4, r5, r6, lr}
 8001352:	6a04      	ldr	r4, [r0, #32]
 8001354:	4d0b      	ldr	r5, [pc, #44]	; (8001384 <TIM_TI4_SetConfig+0x34>)
 8001356:	402c      	ands	r4, r5
 8001358:	6204      	str	r4, [r0, #32]
 800135a:	69c5      	ldr	r5, [r0, #28]
 800135c:	6a04      	ldr	r4, [r0, #32]
 800135e:	4e0a      	ldr	r6, [pc, #40]	; (8001388 <TIM_TI4_SetConfig+0x38>)
 8001360:	4035      	ands	r5, r6
 8001362:	0212      	lsls	r2, r2, #8
 8001364:	432a      	orrs	r2, r5
 8001366:	4d09      	ldr	r5, [pc, #36]	; (800138c <TIM_TI4_SetConfig+0x3c>)
 8001368:	402a      	ands	r2, r5
 800136a:	071b      	lsls	r3, r3, #28
 800136c:	0c1b      	lsrs	r3, r3, #16
 800136e:	4313      	orrs	r3, r2
 8001370:	4a07      	ldr	r2, [pc, #28]	; (8001390 <TIM_TI4_SetConfig+0x40>)
 8001372:	4022      	ands	r2, r4
 8001374:	0309      	lsls	r1, r1, #12
 8001376:	24a0      	movs	r4, #160	; 0xa0
 8001378:	0224      	lsls	r4, r4, #8
 800137a:	4021      	ands	r1, r4
 800137c:	4311      	orrs	r1, r2
 800137e:	61c3      	str	r3, [r0, #28]
 8001380:	6201      	str	r1, [r0, #32]
 8001382:	bd70      	pop	{r4, r5, r6, pc}
 8001384:	ffffefff 	.word	0xffffefff
 8001388:	fffffcff 	.word	0xfffffcff
 800138c:	ffff0fff 	.word	0xffff0fff
 8001390:	ffff5fff 	.word	0xffff5fff

08001394 <HAL_TIM_Base_Start_IT>:
 8001394:	6802      	ldr	r2, [r0, #0]
 8001396:	68d3      	ldr	r3, [r2, #12]
 8001398:	2101      	movs	r1, #1
 800139a:	430b      	orrs	r3, r1
 800139c:	60d3      	str	r3, [r2, #12]
 800139e:	6802      	ldr	r2, [r0, #0]
 80013a0:	6891      	ldr	r1, [r2, #8]
 80013a2:	2307      	movs	r3, #7
 80013a4:	400b      	ands	r3, r1
 80013a6:	2b06      	cmp	r3, #6
 80013a8:	d003      	beq.n	80013b2 <HAL_TIM_Base_Start_IT+0x1e>
 80013aa:	6813      	ldr	r3, [r2, #0]
 80013ac:	2101      	movs	r1, #1
 80013ae:	430b      	orrs	r3, r1
 80013b0:	6013      	str	r3, [r2, #0]
 80013b2:	2000      	movs	r0, #0
 80013b4:	4770      	bx	lr

080013b6 <HAL_TIM_PWM_MspInit>:
 80013b6:	4770      	bx	lr

080013b8 <HAL_TIM_PeriodElapsedCallback>:
 80013b8:	4770      	bx	lr

080013ba <HAL_TIM_OC_DelayElapsedCallback>:
 80013ba:	4770      	bx	lr

080013bc <HAL_TIM_PWM_PulseFinishedCallback>:
 80013bc:	4770      	bx	lr

080013be <HAL_TIM_TriggerCallback>:
 80013be:	4770      	bx	lr

080013c0 <HAL_TIM_IRQHandler>:
 80013c0:	b510      	push	{r4, lr}
 80013c2:	0004      	movs	r4, r0
 80013c4:	6803      	ldr	r3, [r0, #0]
 80013c6:	691a      	ldr	r2, [r3, #16]
 80013c8:	0792      	lsls	r2, r2, #30
 80013ca:	d50f      	bpl.n	80013ec <HAL_TIM_IRQHandler+0x2c>
 80013cc:	68da      	ldr	r2, [r3, #12]
 80013ce:	0792      	lsls	r2, r2, #30
 80013d0:	d50c      	bpl.n	80013ec <HAL_TIM_IRQHandler+0x2c>
 80013d2:	2203      	movs	r2, #3
 80013d4:	4252      	negs	r2, r2
 80013d6:	611a      	str	r2, [r3, #16]
 80013d8:	2301      	movs	r3, #1
 80013da:	7703      	strb	r3, [r0, #28]
 80013dc:	6803      	ldr	r3, [r0, #0]
 80013de:	699b      	ldr	r3, [r3, #24]
 80013e0:	079b      	lsls	r3, r3, #30
 80013e2:	d063      	beq.n	80014ac <HAL_TIM_IRQHandler+0xec>
 80013e4:	f002 f828 	bl	8003438 <HAL_TIM_IC_CaptureCallback>
 80013e8:	2300      	movs	r3, #0
 80013ea:	7723      	strb	r3, [r4, #28]
 80013ec:	6823      	ldr	r3, [r4, #0]
 80013ee:	691a      	ldr	r2, [r3, #16]
 80013f0:	0752      	lsls	r2, r2, #29
 80013f2:	d512      	bpl.n	800141a <HAL_TIM_IRQHandler+0x5a>
 80013f4:	68da      	ldr	r2, [r3, #12]
 80013f6:	0752      	lsls	r2, r2, #29
 80013f8:	d50f      	bpl.n	800141a <HAL_TIM_IRQHandler+0x5a>
 80013fa:	2205      	movs	r2, #5
 80013fc:	4252      	negs	r2, r2
 80013fe:	611a      	str	r2, [r3, #16]
 8001400:	2302      	movs	r3, #2
 8001402:	7723      	strb	r3, [r4, #28]
 8001404:	6823      	ldr	r3, [r4, #0]
 8001406:	699a      	ldr	r2, [r3, #24]
 8001408:	23c0      	movs	r3, #192	; 0xc0
 800140a:	009b      	lsls	r3, r3, #2
 800140c:	421a      	tst	r2, r3
 800140e:	d053      	beq.n	80014b8 <HAL_TIM_IRQHandler+0xf8>
 8001410:	0020      	movs	r0, r4
 8001412:	f002 f811 	bl	8003438 <HAL_TIM_IC_CaptureCallback>
 8001416:	2300      	movs	r3, #0
 8001418:	7723      	strb	r3, [r4, #28]
 800141a:	6823      	ldr	r3, [r4, #0]
 800141c:	691a      	ldr	r2, [r3, #16]
 800141e:	0712      	lsls	r2, r2, #28
 8001420:	d510      	bpl.n	8001444 <HAL_TIM_IRQHandler+0x84>
 8001422:	68da      	ldr	r2, [r3, #12]
 8001424:	0712      	lsls	r2, r2, #28
 8001426:	d50d      	bpl.n	8001444 <HAL_TIM_IRQHandler+0x84>
 8001428:	2209      	movs	r2, #9
 800142a:	4252      	negs	r2, r2
 800142c:	611a      	str	r2, [r3, #16]
 800142e:	2304      	movs	r3, #4
 8001430:	7723      	strb	r3, [r4, #28]
 8001432:	6823      	ldr	r3, [r4, #0]
 8001434:	69db      	ldr	r3, [r3, #28]
 8001436:	079b      	lsls	r3, r3, #30
 8001438:	d045      	beq.n	80014c6 <HAL_TIM_IRQHandler+0x106>
 800143a:	0020      	movs	r0, r4
 800143c:	f001 fffc 	bl	8003438 <HAL_TIM_IC_CaptureCallback>
 8001440:	2300      	movs	r3, #0
 8001442:	7723      	strb	r3, [r4, #28]
 8001444:	6823      	ldr	r3, [r4, #0]
 8001446:	691a      	ldr	r2, [r3, #16]
 8001448:	06d2      	lsls	r2, r2, #27
 800144a:	d512      	bpl.n	8001472 <HAL_TIM_IRQHandler+0xb2>
 800144c:	68da      	ldr	r2, [r3, #12]
 800144e:	06d2      	lsls	r2, r2, #27
 8001450:	d50f      	bpl.n	8001472 <HAL_TIM_IRQHandler+0xb2>
 8001452:	2211      	movs	r2, #17
 8001454:	4252      	negs	r2, r2
 8001456:	611a      	str	r2, [r3, #16]
 8001458:	2308      	movs	r3, #8
 800145a:	7723      	strb	r3, [r4, #28]
 800145c:	6823      	ldr	r3, [r4, #0]
 800145e:	69da      	ldr	r2, [r3, #28]
 8001460:	23c0      	movs	r3, #192	; 0xc0
 8001462:	009b      	lsls	r3, r3, #2
 8001464:	421a      	tst	r2, r3
 8001466:	d035      	beq.n	80014d4 <HAL_TIM_IRQHandler+0x114>
 8001468:	0020      	movs	r0, r4
 800146a:	f001 ffe5 	bl	8003438 <HAL_TIM_IC_CaptureCallback>
 800146e:	2300      	movs	r3, #0
 8001470:	7723      	strb	r3, [r4, #28]
 8001472:	6823      	ldr	r3, [r4, #0]
 8001474:	691a      	ldr	r2, [r3, #16]
 8001476:	07d2      	lsls	r2, r2, #31
 8001478:	d502      	bpl.n	8001480 <HAL_TIM_IRQHandler+0xc0>
 800147a:	68da      	ldr	r2, [r3, #12]
 800147c:	07d2      	lsls	r2, r2, #31
 800147e:	d430      	bmi.n	80014e2 <HAL_TIM_IRQHandler+0x122>
 8001480:	6823      	ldr	r3, [r4, #0]
 8001482:	691a      	ldr	r2, [r3, #16]
 8001484:	0612      	lsls	r2, r2, #24
 8001486:	d502      	bpl.n	800148e <HAL_TIM_IRQHandler+0xce>
 8001488:	68da      	ldr	r2, [r3, #12]
 800148a:	0612      	lsls	r2, r2, #24
 800148c:	d430      	bmi.n	80014f0 <HAL_TIM_IRQHandler+0x130>
 800148e:	6823      	ldr	r3, [r4, #0]
 8001490:	691a      	ldr	r2, [r3, #16]
 8001492:	0652      	lsls	r2, r2, #25
 8001494:	d502      	bpl.n	800149c <HAL_TIM_IRQHandler+0xdc>
 8001496:	68da      	ldr	r2, [r3, #12]
 8001498:	0652      	lsls	r2, r2, #25
 800149a:	d430      	bmi.n	80014fe <HAL_TIM_IRQHandler+0x13e>
 800149c:	6823      	ldr	r3, [r4, #0]
 800149e:	691a      	ldr	r2, [r3, #16]
 80014a0:	0692      	lsls	r2, r2, #26
 80014a2:	d502      	bpl.n	80014aa <HAL_TIM_IRQHandler+0xea>
 80014a4:	68da      	ldr	r2, [r3, #12]
 80014a6:	0692      	lsls	r2, r2, #26
 80014a8:	d430      	bmi.n	800150c <HAL_TIM_IRQHandler+0x14c>
 80014aa:	bd10      	pop	{r4, pc}
 80014ac:	f7ff ff85 	bl	80013ba <HAL_TIM_OC_DelayElapsedCallback>
 80014b0:	0020      	movs	r0, r4
 80014b2:	f7ff ff83 	bl	80013bc <HAL_TIM_PWM_PulseFinishedCallback>
 80014b6:	e797      	b.n	80013e8 <HAL_TIM_IRQHandler+0x28>
 80014b8:	0020      	movs	r0, r4
 80014ba:	f7ff ff7e 	bl	80013ba <HAL_TIM_OC_DelayElapsedCallback>
 80014be:	0020      	movs	r0, r4
 80014c0:	f7ff ff7c 	bl	80013bc <HAL_TIM_PWM_PulseFinishedCallback>
 80014c4:	e7a7      	b.n	8001416 <HAL_TIM_IRQHandler+0x56>
 80014c6:	0020      	movs	r0, r4
 80014c8:	f7ff ff77 	bl	80013ba <HAL_TIM_OC_DelayElapsedCallback>
 80014cc:	0020      	movs	r0, r4
 80014ce:	f7ff ff75 	bl	80013bc <HAL_TIM_PWM_PulseFinishedCallback>
 80014d2:	e7b5      	b.n	8001440 <HAL_TIM_IRQHandler+0x80>
 80014d4:	0020      	movs	r0, r4
 80014d6:	f7ff ff70 	bl	80013ba <HAL_TIM_OC_DelayElapsedCallback>
 80014da:	0020      	movs	r0, r4
 80014dc:	f7ff ff6e 	bl	80013bc <HAL_TIM_PWM_PulseFinishedCallback>
 80014e0:	e7c5      	b.n	800146e <HAL_TIM_IRQHandler+0xae>
 80014e2:	2202      	movs	r2, #2
 80014e4:	4252      	negs	r2, r2
 80014e6:	611a      	str	r2, [r3, #16]
 80014e8:	0020      	movs	r0, r4
 80014ea:	f7ff ff65 	bl	80013b8 <HAL_TIM_PeriodElapsedCallback>
 80014ee:	e7c7      	b.n	8001480 <HAL_TIM_IRQHandler+0xc0>
 80014f0:	2281      	movs	r2, #129	; 0x81
 80014f2:	4252      	negs	r2, r2
 80014f4:	611a      	str	r2, [r3, #16]
 80014f6:	0020      	movs	r0, r4
 80014f8:	f000 fb0f 	bl	8001b1a <HAL_TIMEx_BreakCallback>
 80014fc:	e7c7      	b.n	800148e <HAL_TIM_IRQHandler+0xce>
 80014fe:	2241      	movs	r2, #65	; 0x41
 8001500:	4252      	negs	r2, r2
 8001502:	611a      	str	r2, [r3, #16]
 8001504:	0020      	movs	r0, r4
 8001506:	f7ff ff5a 	bl	80013be <HAL_TIM_TriggerCallback>
 800150a:	e7c7      	b.n	800149c <HAL_TIM_IRQHandler+0xdc>
 800150c:	2221      	movs	r2, #33	; 0x21
 800150e:	4252      	negs	r2, r2
 8001510:	611a      	str	r2, [r3, #16]
 8001512:	0020      	movs	r0, r4
 8001514:	f000 fb00 	bl	8001b18 <HAL_TIMEx_CommutCallback>
 8001518:	e7c7      	b.n	80014aa <HAL_TIM_IRQHandler+0xea>
	...

0800151c <TIM_Base_SetConfig>:
 800151c:	6803      	ldr	r3, [r0, #0]
 800151e:	4a1d      	ldr	r2, [pc, #116]	; (8001594 <TIM_Base_SetConfig+0x78>)
 8001520:	4290      	cmp	r0, r2
 8001522:	d002      	beq.n	800152a <TIM_Base_SetConfig+0xe>
 8001524:	4a1c      	ldr	r2, [pc, #112]	; (8001598 <TIM_Base_SetConfig+0x7c>)
 8001526:	4290      	cmp	r0, r2
 8001528:	d103      	bne.n	8001532 <TIM_Base_SetConfig+0x16>
 800152a:	2270      	movs	r2, #112	; 0x70
 800152c:	4393      	bics	r3, r2
 800152e:	684a      	ldr	r2, [r1, #4]
 8001530:	4313      	orrs	r3, r2
 8001532:	4a18      	ldr	r2, [pc, #96]	; (8001594 <TIM_Base_SetConfig+0x78>)
 8001534:	4290      	cmp	r0, r2
 8001536:	d00e      	beq.n	8001556 <TIM_Base_SetConfig+0x3a>
 8001538:	4a17      	ldr	r2, [pc, #92]	; (8001598 <TIM_Base_SetConfig+0x7c>)
 800153a:	4290      	cmp	r0, r2
 800153c:	d00b      	beq.n	8001556 <TIM_Base_SetConfig+0x3a>
 800153e:	4a17      	ldr	r2, [pc, #92]	; (800159c <TIM_Base_SetConfig+0x80>)
 8001540:	4290      	cmp	r0, r2
 8001542:	d008      	beq.n	8001556 <TIM_Base_SetConfig+0x3a>
 8001544:	4a16      	ldr	r2, [pc, #88]	; (80015a0 <TIM_Base_SetConfig+0x84>)
 8001546:	4290      	cmp	r0, r2
 8001548:	d005      	beq.n	8001556 <TIM_Base_SetConfig+0x3a>
 800154a:	4a16      	ldr	r2, [pc, #88]	; (80015a4 <TIM_Base_SetConfig+0x88>)
 800154c:	4290      	cmp	r0, r2
 800154e:	d002      	beq.n	8001556 <TIM_Base_SetConfig+0x3a>
 8001550:	4a15      	ldr	r2, [pc, #84]	; (80015a8 <TIM_Base_SetConfig+0x8c>)
 8001552:	4290      	cmp	r0, r2
 8001554:	d103      	bne.n	800155e <TIM_Base_SetConfig+0x42>
 8001556:	4a15      	ldr	r2, [pc, #84]	; (80015ac <TIM_Base_SetConfig+0x90>)
 8001558:	4013      	ands	r3, r2
 800155a:	68ca      	ldr	r2, [r1, #12]
 800155c:	4313      	orrs	r3, r2
 800155e:	2280      	movs	r2, #128	; 0x80
 8001560:	4393      	bics	r3, r2
 8001562:	694a      	ldr	r2, [r1, #20]
 8001564:	4313      	orrs	r3, r2
 8001566:	6003      	str	r3, [r0, #0]
 8001568:	688b      	ldr	r3, [r1, #8]
 800156a:	62c3      	str	r3, [r0, #44]	; 0x2c
 800156c:	680b      	ldr	r3, [r1, #0]
 800156e:	6283      	str	r3, [r0, #40]	; 0x28
 8001570:	4b08      	ldr	r3, [pc, #32]	; (8001594 <TIM_Base_SetConfig+0x78>)
 8001572:	4298      	cmp	r0, r3
 8001574:	d008      	beq.n	8001588 <TIM_Base_SetConfig+0x6c>
 8001576:	4b0a      	ldr	r3, [pc, #40]	; (80015a0 <TIM_Base_SetConfig+0x84>)
 8001578:	4298      	cmp	r0, r3
 800157a:	d005      	beq.n	8001588 <TIM_Base_SetConfig+0x6c>
 800157c:	4b09      	ldr	r3, [pc, #36]	; (80015a4 <TIM_Base_SetConfig+0x88>)
 800157e:	4298      	cmp	r0, r3
 8001580:	d002      	beq.n	8001588 <TIM_Base_SetConfig+0x6c>
 8001582:	4b09      	ldr	r3, [pc, #36]	; (80015a8 <TIM_Base_SetConfig+0x8c>)
 8001584:	4298      	cmp	r0, r3
 8001586:	d101      	bne.n	800158c <TIM_Base_SetConfig+0x70>
 8001588:	690b      	ldr	r3, [r1, #16]
 800158a:	6303      	str	r3, [r0, #48]	; 0x30
 800158c:	2301      	movs	r3, #1
 800158e:	6143      	str	r3, [r0, #20]
 8001590:	4770      	bx	lr
 8001592:	46c0      	nop			; (mov r8, r8)
 8001594:	40012c00 	.word	0x40012c00
 8001598:	40000400 	.word	0x40000400
 800159c:	40002000 	.word	0x40002000
 80015a0:	40014000 	.word	0x40014000
 80015a4:	40014400 	.word	0x40014400
 80015a8:	40014800 	.word	0x40014800
 80015ac:	fffffcff 	.word	0xfffffcff

080015b0 <HAL_TIM_Base_Init>:
 80015b0:	b570      	push	{r4, r5, r6, lr}
 80015b2:	1e04      	subs	r4, r0, #0
 80015b4:	d014      	beq.n	80015e0 <HAL_TIM_Base_Init+0x30>
 80015b6:	233d      	movs	r3, #61	; 0x3d
 80015b8:	5cc3      	ldrb	r3, [r0, r3]
 80015ba:	2b00      	cmp	r3, #0
 80015bc:	d00a      	beq.n	80015d4 <HAL_TIM_Base_Init+0x24>
 80015be:	253d      	movs	r5, #61	; 0x3d
 80015c0:	2302      	movs	r3, #2
 80015c2:	5563      	strb	r3, [r4, r5]
 80015c4:	1d21      	adds	r1, r4, #4
 80015c6:	6820      	ldr	r0, [r4, #0]
 80015c8:	f7ff ffa8 	bl	800151c <TIM_Base_SetConfig>
 80015cc:	2301      	movs	r3, #1
 80015ce:	5563      	strb	r3, [r4, r5]
 80015d0:	2000      	movs	r0, #0
 80015d2:	bd70      	pop	{r4, r5, r6, pc}
 80015d4:	333c      	adds	r3, #60	; 0x3c
 80015d6:	2200      	movs	r2, #0
 80015d8:	54c2      	strb	r2, [r0, r3]
 80015da:	f002 f8d3 	bl	8003784 <HAL_TIM_Base_MspInit>
 80015de:	e7ee      	b.n	80015be <HAL_TIM_Base_Init+0xe>
 80015e0:	2001      	movs	r0, #1
 80015e2:	e7f6      	b.n	80015d2 <HAL_TIM_Base_Init+0x22>

080015e4 <HAL_TIM_PWM_Init>:
 80015e4:	b570      	push	{r4, r5, r6, lr}
 80015e6:	1e04      	subs	r4, r0, #0
 80015e8:	d014      	beq.n	8001614 <HAL_TIM_PWM_Init+0x30>
 80015ea:	233d      	movs	r3, #61	; 0x3d
 80015ec:	5cc3      	ldrb	r3, [r0, r3]
 80015ee:	2b00      	cmp	r3, #0
 80015f0:	d00a      	beq.n	8001608 <HAL_TIM_PWM_Init+0x24>
 80015f2:	253d      	movs	r5, #61	; 0x3d
 80015f4:	2302      	movs	r3, #2
 80015f6:	5563      	strb	r3, [r4, r5]
 80015f8:	1d21      	adds	r1, r4, #4
 80015fa:	6820      	ldr	r0, [r4, #0]
 80015fc:	f7ff ff8e 	bl	800151c <TIM_Base_SetConfig>
 8001600:	2301      	movs	r3, #1
 8001602:	5563      	strb	r3, [r4, r5]
 8001604:	2000      	movs	r0, #0
 8001606:	bd70      	pop	{r4, r5, r6, pc}
 8001608:	333c      	adds	r3, #60	; 0x3c
 800160a:	2200      	movs	r2, #0
 800160c:	54c2      	strb	r2, [r0, r3]
 800160e:	f7ff fed2 	bl	80013b6 <HAL_TIM_PWM_MspInit>
 8001612:	e7ee      	b.n	80015f2 <HAL_TIM_PWM_Init+0xe>
 8001614:	2001      	movs	r0, #1
 8001616:	e7f6      	b.n	8001606 <HAL_TIM_PWM_Init+0x22>

08001618 <HAL_TIM_IC_Init>:
 8001618:	b570      	push	{r4, r5, r6, lr}
 800161a:	1e04      	subs	r4, r0, #0
 800161c:	d014      	beq.n	8001648 <HAL_TIM_IC_Init+0x30>
 800161e:	233d      	movs	r3, #61	; 0x3d
 8001620:	5cc3      	ldrb	r3, [r0, r3]
 8001622:	2b00      	cmp	r3, #0
 8001624:	d00a      	beq.n	800163c <HAL_TIM_IC_Init+0x24>
 8001626:	253d      	movs	r5, #61	; 0x3d
 8001628:	2302      	movs	r3, #2
 800162a:	5563      	strb	r3, [r4, r5]
 800162c:	1d21      	adds	r1, r4, #4
 800162e:	6820      	ldr	r0, [r4, #0]
 8001630:	f7ff ff74 	bl	800151c <TIM_Base_SetConfig>
 8001634:	2301      	movs	r3, #1
 8001636:	5563      	strb	r3, [r4, r5]
 8001638:	2000      	movs	r0, #0
 800163a:	bd70      	pop	{r4, r5, r6, pc}
 800163c:	333c      	adds	r3, #60	; 0x3c
 800163e:	2200      	movs	r2, #0
 8001640:	54c2      	strb	r2, [r0, r3]
 8001642:	f002 f83b 	bl	80036bc <HAL_TIM_IC_MspInit>
 8001646:	e7ee      	b.n	8001626 <HAL_TIM_IC_Init+0xe>
 8001648:	2001      	movs	r0, #1
 800164a:	e7f6      	b.n	800163a <HAL_TIM_IC_Init+0x22>

0800164c <TIM_OC2_SetConfig>:
 800164c:	b570      	push	{r4, r5, r6, lr}
 800164e:	6a03      	ldr	r3, [r0, #32]
 8001650:	2210      	movs	r2, #16
 8001652:	4393      	bics	r3, r2
 8001654:	6203      	str	r3, [r0, #32]
 8001656:	6a03      	ldr	r3, [r0, #32]
 8001658:	6842      	ldr	r2, [r0, #4]
 800165a:	6984      	ldr	r4, [r0, #24]
 800165c:	4d17      	ldr	r5, [pc, #92]	; (80016bc <TIM_OC2_SetConfig+0x70>)
 800165e:	402c      	ands	r4, r5
 8001660:	680d      	ldr	r5, [r1, #0]
 8001662:	022d      	lsls	r5, r5, #8
 8001664:	4325      	orrs	r5, r4
 8001666:	2420      	movs	r4, #32
 8001668:	43a3      	bics	r3, r4
 800166a:	688c      	ldr	r4, [r1, #8]
 800166c:	0124      	lsls	r4, r4, #4
 800166e:	4323      	orrs	r3, r4
 8001670:	4c13      	ldr	r4, [pc, #76]	; (80016c0 <TIM_OC2_SetConfig+0x74>)
 8001672:	42a0      	cmp	r0, r4
 8001674:	d019      	beq.n	80016aa <TIM_OC2_SetConfig+0x5e>
 8001676:	4c12      	ldr	r4, [pc, #72]	; (80016c0 <TIM_OC2_SetConfig+0x74>)
 8001678:	42a0      	cmp	r0, r4
 800167a:	d008      	beq.n	800168e <TIM_OC2_SetConfig+0x42>
 800167c:	4c11      	ldr	r4, [pc, #68]	; (80016c4 <TIM_OC2_SetConfig+0x78>)
 800167e:	42a0      	cmp	r0, r4
 8001680:	d005      	beq.n	800168e <TIM_OC2_SetConfig+0x42>
 8001682:	4c11      	ldr	r4, [pc, #68]	; (80016c8 <TIM_OC2_SetConfig+0x7c>)
 8001684:	42a0      	cmp	r0, r4
 8001686:	d002      	beq.n	800168e <TIM_OC2_SetConfig+0x42>
 8001688:	4c10      	ldr	r4, [pc, #64]	; (80016cc <TIM_OC2_SetConfig+0x80>)
 800168a:	42a0      	cmp	r0, r4
 800168c:	d107      	bne.n	800169e <TIM_OC2_SetConfig+0x52>
 800168e:	4c10      	ldr	r4, [pc, #64]	; (80016d0 <TIM_OC2_SetConfig+0x84>)
 8001690:	4014      	ands	r4, r2
 8001692:	694a      	ldr	r2, [r1, #20]
 8001694:	0092      	lsls	r2, r2, #2
 8001696:	4322      	orrs	r2, r4
 8001698:	698c      	ldr	r4, [r1, #24]
 800169a:	00a6      	lsls	r6, r4, #2
 800169c:	4332      	orrs	r2, r6
 800169e:	6042      	str	r2, [r0, #4]
 80016a0:	6185      	str	r5, [r0, #24]
 80016a2:	684a      	ldr	r2, [r1, #4]
 80016a4:	6382      	str	r2, [r0, #56]	; 0x38
 80016a6:	6203      	str	r3, [r0, #32]
 80016a8:	bd70      	pop	{r4, r5, r6, pc}
 80016aa:	2480      	movs	r4, #128	; 0x80
 80016ac:	43a3      	bics	r3, r4
 80016ae:	001c      	movs	r4, r3
 80016b0:	68cb      	ldr	r3, [r1, #12]
 80016b2:	011b      	lsls	r3, r3, #4
 80016b4:	4323      	orrs	r3, r4
 80016b6:	2440      	movs	r4, #64	; 0x40
 80016b8:	43a3      	bics	r3, r4
 80016ba:	e7dc      	b.n	8001676 <TIM_OC2_SetConfig+0x2a>
 80016bc:	ffff8cff 	.word	0xffff8cff
 80016c0:	40012c00 	.word	0x40012c00
 80016c4:	40014000 	.word	0x40014000
 80016c8:	40014400 	.word	0x40014400
 80016cc:	40014800 	.word	0x40014800
 80016d0:	fffff3ff 	.word	0xfffff3ff

080016d4 <HAL_TIM_PWM_ConfigChannel>:
 80016d4:	b570      	push	{r4, r5, r6, lr}
 80016d6:	0004      	movs	r4, r0
 80016d8:	000d      	movs	r5, r1
 80016da:	233c      	movs	r3, #60	; 0x3c
 80016dc:	5cc3      	ldrb	r3, [r0, r3]
 80016de:	2b01      	cmp	r3, #1
 80016e0:	d069      	beq.n	80017b6 <HAL_TIM_PWM_ConfigChannel+0xe2>
 80016e2:	233c      	movs	r3, #60	; 0x3c
 80016e4:	2101      	movs	r1, #1
 80016e6:	54c1      	strb	r1, [r0, r3]
 80016e8:	3301      	adds	r3, #1
 80016ea:	3101      	adds	r1, #1
 80016ec:	54c1      	strb	r1, [r0, r3]
 80016ee:	2a04      	cmp	r2, #4
 80016f0:	d037      	beq.n	8001762 <HAL_TIM_PWM_ConfigChannel+0x8e>
 80016f2:	d919      	bls.n	8001728 <HAL_TIM_PWM_ConfigChannel+0x54>
 80016f4:	2a08      	cmp	r2, #8
 80016f6:	d04a      	beq.n	800178e <HAL_TIM_PWM_ConfigChannel+0xba>
 80016f8:	2a0c      	cmp	r2, #12
 80016fa:	d12a      	bne.n	8001752 <HAL_TIM_PWM_ConfigChannel+0x7e>
 80016fc:	0029      	movs	r1, r5
 80016fe:	6800      	ldr	r0, [r0, #0]
 8001700:	f7ff fd8c 	bl	800121c <TIM_OC4_SetConfig>
 8001704:	6822      	ldr	r2, [r4, #0]
 8001706:	69d1      	ldr	r1, [r2, #28]
 8001708:	2380      	movs	r3, #128	; 0x80
 800170a:	011b      	lsls	r3, r3, #4
 800170c:	430b      	orrs	r3, r1
 800170e:	61d3      	str	r3, [r2, #28]
 8001710:	6822      	ldr	r2, [r4, #0]
 8001712:	69d3      	ldr	r3, [r2, #28]
 8001714:	4929      	ldr	r1, [pc, #164]	; (80017bc <HAL_TIM_PWM_ConfigChannel+0xe8>)
 8001716:	400b      	ands	r3, r1
 8001718:	61d3      	str	r3, [r2, #28]
 800171a:	6821      	ldr	r1, [r4, #0]
 800171c:	69cb      	ldr	r3, [r1, #28]
 800171e:	692a      	ldr	r2, [r5, #16]
 8001720:	0212      	lsls	r2, r2, #8
 8001722:	4313      	orrs	r3, r2
 8001724:	61cb      	str	r3, [r1, #28]
 8001726:	e014      	b.n	8001752 <HAL_TIM_PWM_ConfigChannel+0x7e>
 8001728:	2a00      	cmp	r2, #0
 800172a:	d112      	bne.n	8001752 <HAL_TIM_PWM_ConfigChannel+0x7e>
 800172c:	0029      	movs	r1, r5
 800172e:	6800      	ldr	r0, [r0, #0]
 8001730:	f7ff fce8 	bl	8001104 <TIM_OC1_SetConfig>
 8001734:	6822      	ldr	r2, [r4, #0]
 8001736:	6993      	ldr	r3, [r2, #24]
 8001738:	2108      	movs	r1, #8
 800173a:	430b      	orrs	r3, r1
 800173c:	6193      	str	r3, [r2, #24]
 800173e:	6822      	ldr	r2, [r4, #0]
 8001740:	6993      	ldr	r3, [r2, #24]
 8001742:	3904      	subs	r1, #4
 8001744:	438b      	bics	r3, r1
 8001746:	6193      	str	r3, [r2, #24]
 8001748:	6822      	ldr	r2, [r4, #0]
 800174a:	6993      	ldr	r3, [r2, #24]
 800174c:	6929      	ldr	r1, [r5, #16]
 800174e:	430b      	orrs	r3, r1
 8001750:	6193      	str	r3, [r2, #24]
 8001752:	233d      	movs	r3, #61	; 0x3d
 8001754:	2201      	movs	r2, #1
 8001756:	54e2      	strb	r2, [r4, r3]
 8001758:	3b01      	subs	r3, #1
 800175a:	2200      	movs	r2, #0
 800175c:	54e2      	strb	r2, [r4, r3]
 800175e:	2000      	movs	r0, #0
 8001760:	bd70      	pop	{r4, r5, r6, pc}
 8001762:	0029      	movs	r1, r5
 8001764:	6800      	ldr	r0, [r0, #0]
 8001766:	f7ff ff71 	bl	800164c <TIM_OC2_SetConfig>
 800176a:	6822      	ldr	r2, [r4, #0]
 800176c:	6991      	ldr	r1, [r2, #24]
 800176e:	2380      	movs	r3, #128	; 0x80
 8001770:	011b      	lsls	r3, r3, #4
 8001772:	430b      	orrs	r3, r1
 8001774:	6193      	str	r3, [r2, #24]
 8001776:	6822      	ldr	r2, [r4, #0]
 8001778:	6993      	ldr	r3, [r2, #24]
 800177a:	4910      	ldr	r1, [pc, #64]	; (80017bc <HAL_TIM_PWM_ConfigChannel+0xe8>)
 800177c:	400b      	ands	r3, r1
 800177e:	6193      	str	r3, [r2, #24]
 8001780:	6821      	ldr	r1, [r4, #0]
 8001782:	698b      	ldr	r3, [r1, #24]
 8001784:	692a      	ldr	r2, [r5, #16]
 8001786:	0212      	lsls	r2, r2, #8
 8001788:	4313      	orrs	r3, r2
 800178a:	618b      	str	r3, [r1, #24]
 800178c:	e7e1      	b.n	8001752 <HAL_TIM_PWM_ConfigChannel+0x7e>
 800178e:	0029      	movs	r1, r5
 8001790:	6800      	ldr	r0, [r0, #0]
 8001792:	f7ff fcfb 	bl	800118c <TIM_OC3_SetConfig>
 8001796:	6822      	ldr	r2, [r4, #0]
 8001798:	69d3      	ldr	r3, [r2, #28]
 800179a:	2108      	movs	r1, #8
 800179c:	430b      	orrs	r3, r1
 800179e:	61d3      	str	r3, [r2, #28]
 80017a0:	6822      	ldr	r2, [r4, #0]
 80017a2:	69d3      	ldr	r3, [r2, #28]
 80017a4:	3904      	subs	r1, #4
 80017a6:	438b      	bics	r3, r1
 80017a8:	61d3      	str	r3, [r2, #28]
 80017aa:	6822      	ldr	r2, [r4, #0]
 80017ac:	69d3      	ldr	r3, [r2, #28]
 80017ae:	6929      	ldr	r1, [r5, #16]
 80017b0:	430b      	orrs	r3, r1
 80017b2:	61d3      	str	r3, [r2, #28]
 80017b4:	e7cd      	b.n	8001752 <HAL_TIM_PWM_ConfigChannel+0x7e>
 80017b6:	2002      	movs	r0, #2
 80017b8:	e7d2      	b.n	8001760 <HAL_TIM_PWM_ConfigChannel+0x8c>
 80017ba:	46c0      	nop			; (mov r8, r8)
 80017bc:	fffffbff 	.word	0xfffffbff

080017c0 <TIM_TI1_SetConfig>:
 80017c0:	b570      	push	{r4, r5, r6, lr}
 80017c2:	0014      	movs	r4, r2
 80017c4:	6a02      	ldr	r2, [r0, #32]
 80017c6:	2501      	movs	r5, #1
 80017c8:	43aa      	bics	r2, r5
 80017ca:	6202      	str	r2, [r0, #32]
 80017cc:	6982      	ldr	r2, [r0, #24]
 80017ce:	6a05      	ldr	r5, [r0, #32]
 80017d0:	4e0d      	ldr	r6, [pc, #52]	; (8001808 <TIM_TI1_SetConfig+0x48>)
 80017d2:	42b0      	cmp	r0, r6
 80017d4:	d008      	beq.n	80017e8 <TIM_TI1_SetConfig+0x28>
 80017d6:	4e0d      	ldr	r6, [pc, #52]	; (800180c <TIM_TI1_SetConfig+0x4c>)
 80017d8:	42b0      	cmp	r0, r6
 80017da:	d005      	beq.n	80017e8 <TIM_TI1_SetConfig+0x28>
 80017dc:	4e0c      	ldr	r6, [pc, #48]	; (8001810 <TIM_TI1_SetConfig+0x50>)
 80017de:	42b0      	cmp	r0, r6
 80017e0:	d002      	beq.n	80017e8 <TIM_TI1_SetConfig+0x28>
 80017e2:	2401      	movs	r4, #1
 80017e4:	4322      	orrs	r2, r4
 80017e6:	e002      	b.n	80017ee <TIM_TI1_SetConfig+0x2e>
 80017e8:	2603      	movs	r6, #3
 80017ea:	43b2      	bics	r2, r6
 80017ec:	4322      	orrs	r2, r4
 80017ee:	24f0      	movs	r4, #240	; 0xf0
 80017f0:	43a2      	bics	r2, r4
 80017f2:	011c      	lsls	r4, r3, #4
 80017f4:	23ff      	movs	r3, #255	; 0xff
 80017f6:	4023      	ands	r3, r4
 80017f8:	431a      	orrs	r2, r3
 80017fa:	240a      	movs	r4, #10
 80017fc:	43a5      	bics	r5, r4
 80017fe:	400c      	ands	r4, r1
 8001800:	432c      	orrs	r4, r5
 8001802:	6182      	str	r2, [r0, #24]
 8001804:	6204      	str	r4, [r0, #32]
 8001806:	bd70      	pop	{r4, r5, r6, pc}
 8001808:	40012c00 	.word	0x40012c00
 800180c:	40000400 	.word	0x40000400
 8001810:	40014000 	.word	0x40014000

08001814 <HAL_TIM_IC_ConfigChannel>:
 8001814:	b570      	push	{r4, r5, r6, lr}
 8001816:	0004      	movs	r4, r0
 8001818:	000d      	movs	r5, r1
 800181a:	233c      	movs	r3, #60	; 0x3c
 800181c:	5cc3      	ldrb	r3, [r0, r3]
 800181e:	2b01      	cmp	r3, #1
 8001820:	d058      	beq.n	80018d4 <HAL_TIM_IC_ConfigChannel+0xc0>
 8001822:	233c      	movs	r3, #60	; 0x3c
 8001824:	2101      	movs	r1, #1
 8001826:	54c1      	strb	r1, [r0, r3]
 8001828:	3301      	adds	r3, #1
 800182a:	3101      	adds	r1, #1
 800182c:	54c1      	strb	r1, [r0, r3]
 800182e:	2a00      	cmp	r2, #0
 8001830:	d01c      	beq.n	800186c <HAL_TIM_IC_ConfigChannel+0x58>
 8001832:	2a04      	cmp	r2, #4
 8001834:	d02b      	beq.n	800188e <HAL_TIM_IC_ConfigChannel+0x7a>
 8001836:	2a08      	cmp	r2, #8
 8001838:	d03b      	beq.n	80018b2 <HAL_TIM_IC_ConfigChannel+0x9e>
 800183a:	68eb      	ldr	r3, [r5, #12]
 800183c:	686a      	ldr	r2, [r5, #4]
 800183e:	6829      	ldr	r1, [r5, #0]
 8001840:	6800      	ldr	r0, [r0, #0]
 8001842:	f7ff fd85 	bl	8001350 <TIM_TI4_SetConfig>
 8001846:	6822      	ldr	r2, [r4, #0]
 8001848:	69d3      	ldr	r3, [r2, #28]
 800184a:	4923      	ldr	r1, [pc, #140]	; (80018d8 <HAL_TIM_IC_ConfigChannel+0xc4>)
 800184c:	400b      	ands	r3, r1
 800184e:	61d3      	str	r3, [r2, #28]
 8001850:	6821      	ldr	r1, [r4, #0]
 8001852:	69cb      	ldr	r3, [r1, #28]
 8001854:	68aa      	ldr	r2, [r5, #8]
 8001856:	0212      	lsls	r2, r2, #8
 8001858:	4313      	orrs	r3, r2
 800185a:	61cb      	str	r3, [r1, #28]
 800185c:	233d      	movs	r3, #61	; 0x3d
 800185e:	2201      	movs	r2, #1
 8001860:	54e2      	strb	r2, [r4, r3]
 8001862:	3b01      	subs	r3, #1
 8001864:	2200      	movs	r2, #0
 8001866:	54e2      	strb	r2, [r4, r3]
 8001868:	2000      	movs	r0, #0
 800186a:	bd70      	pop	{r4, r5, r6, pc}
 800186c:	68eb      	ldr	r3, [r5, #12]
 800186e:	686a      	ldr	r2, [r5, #4]
 8001870:	6829      	ldr	r1, [r5, #0]
 8001872:	6800      	ldr	r0, [r0, #0]
 8001874:	f7ff ffa4 	bl	80017c0 <TIM_TI1_SetConfig>
 8001878:	6822      	ldr	r2, [r4, #0]
 800187a:	6993      	ldr	r3, [r2, #24]
 800187c:	210c      	movs	r1, #12
 800187e:	438b      	bics	r3, r1
 8001880:	6193      	str	r3, [r2, #24]
 8001882:	6822      	ldr	r2, [r4, #0]
 8001884:	6993      	ldr	r3, [r2, #24]
 8001886:	68a9      	ldr	r1, [r5, #8]
 8001888:	430b      	orrs	r3, r1
 800188a:	6193      	str	r3, [r2, #24]
 800188c:	e7e6      	b.n	800185c <HAL_TIM_IC_ConfigChannel+0x48>
 800188e:	68eb      	ldr	r3, [r5, #12]
 8001890:	686a      	ldr	r2, [r5, #4]
 8001892:	6829      	ldr	r1, [r5, #0]
 8001894:	6800      	ldr	r0, [r0, #0]
 8001896:	f7ff fd0d 	bl	80012b4 <TIM_TI2_SetConfig>
 800189a:	6822      	ldr	r2, [r4, #0]
 800189c:	6993      	ldr	r3, [r2, #24]
 800189e:	490e      	ldr	r1, [pc, #56]	; (80018d8 <HAL_TIM_IC_ConfigChannel+0xc4>)
 80018a0:	400b      	ands	r3, r1
 80018a2:	6193      	str	r3, [r2, #24]
 80018a4:	6821      	ldr	r1, [r4, #0]
 80018a6:	698b      	ldr	r3, [r1, #24]
 80018a8:	68aa      	ldr	r2, [r5, #8]
 80018aa:	0212      	lsls	r2, r2, #8
 80018ac:	4313      	orrs	r3, r2
 80018ae:	618b      	str	r3, [r1, #24]
 80018b0:	e7d4      	b.n	800185c <HAL_TIM_IC_ConfigChannel+0x48>
 80018b2:	68eb      	ldr	r3, [r5, #12]
 80018b4:	686a      	ldr	r2, [r5, #4]
 80018b6:	6829      	ldr	r1, [r5, #0]
 80018b8:	6800      	ldr	r0, [r0, #0]
 80018ba:	f7ff fd2b 	bl	8001314 <TIM_TI3_SetConfig>
 80018be:	6822      	ldr	r2, [r4, #0]
 80018c0:	69d3      	ldr	r3, [r2, #28]
 80018c2:	210c      	movs	r1, #12
 80018c4:	438b      	bics	r3, r1
 80018c6:	61d3      	str	r3, [r2, #28]
 80018c8:	6822      	ldr	r2, [r4, #0]
 80018ca:	69d3      	ldr	r3, [r2, #28]
 80018cc:	68a9      	ldr	r1, [r5, #8]
 80018ce:	430b      	orrs	r3, r1
 80018d0:	61d3      	str	r3, [r2, #28]
 80018d2:	e7c3      	b.n	800185c <HAL_TIM_IC_ConfigChannel+0x48>
 80018d4:	2002      	movs	r0, #2
 80018d6:	e7c8      	b.n	800186a <HAL_TIM_IC_ConfigChannel+0x56>
 80018d8:	fffff3ff 	.word	0xfffff3ff

080018dc <TIM_ETR_SetConfig>:
 80018dc:	b530      	push	{r4, r5, lr}
 80018de:	6884      	ldr	r4, [r0, #8]
 80018e0:	4d03      	ldr	r5, [pc, #12]	; (80018f0 <TIM_ETR_SetConfig+0x14>)
 80018e2:	402c      	ands	r4, r5
 80018e4:	021b      	lsls	r3, r3, #8
 80018e6:	431a      	orrs	r2, r3
 80018e8:	4311      	orrs	r1, r2
 80018ea:	4321      	orrs	r1, r4
 80018ec:	6081      	str	r1, [r0, #8]
 80018ee:	bd30      	pop	{r4, r5, pc}
 80018f0:	ffff00ff 	.word	0xffff00ff

080018f4 <TIM_SlaveTimer_SetConfig>:
 80018f4:	b570      	push	{r4, r5, r6, lr}
 80018f6:	6802      	ldr	r2, [r0, #0]
 80018f8:	6893      	ldr	r3, [r2, #8]
 80018fa:	2470      	movs	r4, #112	; 0x70
 80018fc:	43a3      	bics	r3, r4
 80018fe:	684c      	ldr	r4, [r1, #4]
 8001900:	4323      	orrs	r3, r4
 8001902:	2407      	movs	r4, #7
 8001904:	43a3      	bics	r3, r4
 8001906:	680c      	ldr	r4, [r1, #0]
 8001908:	4323      	orrs	r3, r4
 800190a:	6093      	str	r3, [r2, #8]
 800190c:	684b      	ldr	r3, [r1, #4]
 800190e:	2b50      	cmp	r3, #80	; 0x50
 8001910:	d024      	beq.n	800195c <TIM_SlaveTimer_SetConfig+0x68>
 8001912:	d90b      	bls.n	800192c <TIM_SlaveTimer_SetConfig+0x38>
 8001914:	2b60      	cmp	r3, #96	; 0x60
 8001916:	d028      	beq.n	800196a <TIM_SlaveTimer_SetConfig+0x76>
 8001918:	2b70      	cmp	r3, #112	; 0x70
 800191a:	d12d      	bne.n	8001978 <TIM_SlaveTimer_SetConfig+0x84>
 800191c:	690b      	ldr	r3, [r1, #16]
 800191e:	688a      	ldr	r2, [r1, #8]
 8001920:	68c9      	ldr	r1, [r1, #12]
 8001922:	6800      	ldr	r0, [r0, #0]
 8001924:	f7ff ffda 	bl	80018dc <TIM_ETR_SetConfig>
 8001928:	2000      	movs	r0, #0
 800192a:	bd70      	pop	{r4, r5, r6, pc}
 800192c:	2b40      	cmp	r3, #64	; 0x40
 800192e:	d123      	bne.n	8001978 <TIM_SlaveTimer_SetConfig+0x84>
 8001930:	680b      	ldr	r3, [r1, #0]
 8001932:	2b05      	cmp	r3, #5
 8001934:	d022      	beq.n	800197c <TIM_SlaveTimer_SetConfig+0x88>
 8001936:	6803      	ldr	r3, [r0, #0]
 8001938:	6a1d      	ldr	r5, [r3, #32]
 800193a:	6a1a      	ldr	r2, [r3, #32]
 800193c:	2401      	movs	r4, #1
 800193e:	43a2      	bics	r2, r4
 8001940:	621a      	str	r2, [r3, #32]
 8001942:	6804      	ldr	r4, [r0, #0]
 8001944:	69a3      	ldr	r3, [r4, #24]
 8001946:	22f0      	movs	r2, #240	; 0xf0
 8001948:	4393      	bics	r3, r2
 800194a:	001a      	movs	r2, r3
 800194c:	690b      	ldr	r3, [r1, #16]
 800194e:	011b      	lsls	r3, r3, #4
 8001950:	4313      	orrs	r3, r2
 8001952:	61a3      	str	r3, [r4, #24]
 8001954:	6803      	ldr	r3, [r0, #0]
 8001956:	621d      	str	r5, [r3, #32]
 8001958:	2000      	movs	r0, #0
 800195a:	e7e6      	b.n	800192a <TIM_SlaveTimer_SetConfig+0x36>
 800195c:	690a      	ldr	r2, [r1, #16]
 800195e:	6889      	ldr	r1, [r1, #8]
 8001960:	6800      	ldr	r0, [r0, #0]
 8001962:	f7ff fc95 	bl	8001290 <TIM_TI1_ConfigInputStage>
 8001966:	2000      	movs	r0, #0
 8001968:	e7df      	b.n	800192a <TIM_SlaveTimer_SetConfig+0x36>
 800196a:	690a      	ldr	r2, [r1, #16]
 800196c:	6889      	ldr	r1, [r1, #8]
 800196e:	6800      	ldr	r0, [r0, #0]
 8001970:	f7ff fcbc 	bl	80012ec <TIM_TI2_ConfigInputStage>
 8001974:	2000      	movs	r0, #0
 8001976:	e7d8      	b.n	800192a <TIM_SlaveTimer_SetConfig+0x36>
 8001978:	2000      	movs	r0, #0
 800197a:	e7d6      	b.n	800192a <TIM_SlaveTimer_SetConfig+0x36>
 800197c:	2001      	movs	r0, #1
 800197e:	e7d4      	b.n	800192a <TIM_SlaveTimer_SetConfig+0x36>

08001980 <HAL_TIM_SlaveConfigSynchro>:
 8001980:	b510      	push	{r4, lr}
 8001982:	0004      	movs	r4, r0
 8001984:	233c      	movs	r3, #60	; 0x3c
 8001986:	5cc3      	ldrb	r3, [r0, r3]
 8001988:	2b01      	cmp	r3, #1
 800198a:	d022      	beq.n	80019d2 <HAL_TIM_SlaveConfigSynchro+0x52>
 800198c:	233c      	movs	r3, #60	; 0x3c
 800198e:	2201      	movs	r2, #1
 8001990:	54c2      	strb	r2, [r0, r3]
 8001992:	3301      	adds	r3, #1
 8001994:	3201      	adds	r2, #1
 8001996:	54c2      	strb	r2, [r0, r3]
 8001998:	f7ff ffac 	bl	80018f4 <TIM_SlaveTimer_SetConfig>
 800199c:	2800      	cmp	r0, #0
 800199e:	d110      	bne.n	80019c2 <HAL_TIM_SlaveConfigSynchro+0x42>
 80019a0:	6822      	ldr	r2, [r4, #0]
 80019a2:	68d3      	ldr	r3, [r2, #12]
 80019a4:	2140      	movs	r1, #64	; 0x40
 80019a6:	438b      	bics	r3, r1
 80019a8:	60d3      	str	r3, [r2, #12]
 80019aa:	6822      	ldr	r2, [r4, #0]
 80019ac:	68d3      	ldr	r3, [r2, #12]
 80019ae:	490a      	ldr	r1, [pc, #40]	; (80019d8 <HAL_TIM_SlaveConfigSynchro+0x58>)
 80019b0:	400b      	ands	r3, r1
 80019b2:	60d3      	str	r3, [r2, #12]
 80019b4:	233d      	movs	r3, #61	; 0x3d
 80019b6:	2201      	movs	r2, #1
 80019b8:	54e2      	strb	r2, [r4, r3]
 80019ba:	3b01      	subs	r3, #1
 80019bc:	2200      	movs	r2, #0
 80019be:	54e2      	strb	r2, [r4, r3]
 80019c0:	bd10      	pop	{r4, pc}
 80019c2:	233d      	movs	r3, #61	; 0x3d
 80019c4:	2201      	movs	r2, #1
 80019c6:	54e2      	strb	r2, [r4, r3]
 80019c8:	3b01      	subs	r3, #1
 80019ca:	2200      	movs	r2, #0
 80019cc:	54e2      	strb	r2, [r4, r3]
 80019ce:	2001      	movs	r0, #1
 80019d0:	e7f6      	b.n	80019c0 <HAL_TIM_SlaveConfigSynchro+0x40>
 80019d2:	2002      	movs	r0, #2
 80019d4:	e7f4      	b.n	80019c0 <HAL_TIM_SlaveConfigSynchro+0x40>
 80019d6:	46c0      	nop			; (mov r8, r8)
 80019d8:	ffffbfff 	.word	0xffffbfff

080019dc <TIM_CCxChannelCmd>:
 80019dc:	b510      	push	{r4, lr}
 80019de:	231f      	movs	r3, #31
 80019e0:	4019      	ands	r1, r3
 80019e2:	2401      	movs	r4, #1
 80019e4:	408c      	lsls	r4, r1
 80019e6:	6a03      	ldr	r3, [r0, #32]
 80019e8:	43a3      	bics	r3, r4
 80019ea:	6203      	str	r3, [r0, #32]
 80019ec:	6a03      	ldr	r3, [r0, #32]
 80019ee:	408a      	lsls	r2, r1
 80019f0:	431a      	orrs	r2, r3
 80019f2:	6202      	str	r2, [r0, #32]
 80019f4:	bd10      	pop	{r4, pc}
	...

080019f8 <HAL_TIM_PWM_Start>:
 80019f8:	b510      	push	{r4, lr}
 80019fa:	0004      	movs	r4, r0
 80019fc:	2201      	movs	r2, #1
 80019fe:	6800      	ldr	r0, [r0, #0]
 8001a00:	f7ff ffec 	bl	80019dc <TIM_CCxChannelCmd>
 8001a04:	6823      	ldr	r3, [r4, #0]
 8001a06:	4a0e      	ldr	r2, [pc, #56]	; (8001a40 <HAL_TIM_PWM_Start+0x48>)
 8001a08:	4293      	cmp	r3, r2
 8001a0a:	d008      	beq.n	8001a1e <HAL_TIM_PWM_Start+0x26>
 8001a0c:	4a0d      	ldr	r2, [pc, #52]	; (8001a44 <HAL_TIM_PWM_Start+0x4c>)
 8001a0e:	4293      	cmp	r3, r2
 8001a10:	d005      	beq.n	8001a1e <HAL_TIM_PWM_Start+0x26>
 8001a12:	4a0d      	ldr	r2, [pc, #52]	; (8001a48 <HAL_TIM_PWM_Start+0x50>)
 8001a14:	4293      	cmp	r3, r2
 8001a16:	d002      	beq.n	8001a1e <HAL_TIM_PWM_Start+0x26>
 8001a18:	4a0c      	ldr	r2, [pc, #48]	; (8001a4c <HAL_TIM_PWM_Start+0x54>)
 8001a1a:	4293      	cmp	r3, r2
 8001a1c:	d104      	bne.n	8001a28 <HAL_TIM_PWM_Start+0x30>
 8001a1e:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001a20:	2280      	movs	r2, #128	; 0x80
 8001a22:	0212      	lsls	r2, r2, #8
 8001a24:	430a      	orrs	r2, r1
 8001a26:	645a      	str	r2, [r3, #68]	; 0x44
 8001a28:	6822      	ldr	r2, [r4, #0]
 8001a2a:	6891      	ldr	r1, [r2, #8]
 8001a2c:	2307      	movs	r3, #7
 8001a2e:	400b      	ands	r3, r1
 8001a30:	2b06      	cmp	r3, #6
 8001a32:	d003      	beq.n	8001a3c <HAL_TIM_PWM_Start+0x44>
 8001a34:	6813      	ldr	r3, [r2, #0]
 8001a36:	2101      	movs	r1, #1
 8001a38:	430b      	orrs	r3, r1
 8001a3a:	6013      	str	r3, [r2, #0]
 8001a3c:	2000      	movs	r0, #0
 8001a3e:	bd10      	pop	{r4, pc}
 8001a40:	40012c00 	.word	0x40012c00
 8001a44:	40014000 	.word	0x40014000
 8001a48:	40014400 	.word	0x40014400
 8001a4c:	40014800 	.word	0x40014800

08001a50 <HAL_TIM_IC_Start_IT>:
 8001a50:	b510      	push	{r4, lr}
 8001a52:	0004      	movs	r4, r0
 8001a54:	2904      	cmp	r1, #4
 8001a56:	d021      	beq.n	8001a9c <HAL_TIM_IC_Start_IT+0x4c>
 8001a58:	d909      	bls.n	8001a6e <HAL_TIM_IC_Start_IT+0x1e>
 8001a5a:	2908      	cmp	r1, #8
 8001a5c:	d024      	beq.n	8001aa8 <HAL_TIM_IC_Start_IT+0x58>
 8001a5e:	290c      	cmp	r1, #12
 8001a60:	d10c      	bne.n	8001a7c <HAL_TIM_IC_Start_IT+0x2c>
 8001a62:	6802      	ldr	r2, [r0, #0]
 8001a64:	68d3      	ldr	r3, [r2, #12]
 8001a66:	2010      	movs	r0, #16
 8001a68:	4303      	orrs	r3, r0
 8001a6a:	60d3      	str	r3, [r2, #12]
 8001a6c:	e006      	b.n	8001a7c <HAL_TIM_IC_Start_IT+0x2c>
 8001a6e:	2900      	cmp	r1, #0
 8001a70:	d104      	bne.n	8001a7c <HAL_TIM_IC_Start_IT+0x2c>
 8001a72:	6802      	ldr	r2, [r0, #0]
 8001a74:	68d3      	ldr	r3, [r2, #12]
 8001a76:	2002      	movs	r0, #2
 8001a78:	4303      	orrs	r3, r0
 8001a7a:	60d3      	str	r3, [r2, #12]
 8001a7c:	2201      	movs	r2, #1
 8001a7e:	6820      	ldr	r0, [r4, #0]
 8001a80:	f7ff ffac 	bl	80019dc <TIM_CCxChannelCmd>
 8001a84:	6822      	ldr	r2, [r4, #0]
 8001a86:	6891      	ldr	r1, [r2, #8]
 8001a88:	2307      	movs	r3, #7
 8001a8a:	400b      	ands	r3, r1
 8001a8c:	2b06      	cmp	r3, #6
 8001a8e:	d003      	beq.n	8001a98 <HAL_TIM_IC_Start_IT+0x48>
 8001a90:	6813      	ldr	r3, [r2, #0]
 8001a92:	2101      	movs	r1, #1
 8001a94:	430b      	orrs	r3, r1
 8001a96:	6013      	str	r3, [r2, #0]
 8001a98:	2000      	movs	r0, #0
 8001a9a:	bd10      	pop	{r4, pc}
 8001a9c:	6802      	ldr	r2, [r0, #0]
 8001a9e:	68d3      	ldr	r3, [r2, #12]
 8001aa0:	2004      	movs	r0, #4
 8001aa2:	4303      	orrs	r3, r0
 8001aa4:	60d3      	str	r3, [r2, #12]
 8001aa6:	e7e9      	b.n	8001a7c <HAL_TIM_IC_Start_IT+0x2c>
 8001aa8:	6802      	ldr	r2, [r0, #0]
 8001aaa:	68d3      	ldr	r3, [r2, #12]
 8001aac:	2008      	movs	r0, #8
 8001aae:	4303      	orrs	r3, r0
 8001ab0:	60d3      	str	r3, [r2, #12]
 8001ab2:	e7e3      	b.n	8001a7c <HAL_TIM_IC_Start_IT+0x2c>

08001ab4 <HAL_TIMEx_MasterConfigSynchronization>:
 8001ab4:	b530      	push	{r4, r5, lr}
 8001ab6:	233c      	movs	r3, #60	; 0x3c
 8001ab8:	5cc3      	ldrb	r3, [r0, r3]
 8001aba:	2b01      	cmp	r3, #1
 8001abc:	d024      	beq.n	8001b08 <HAL_TIMEx_MasterConfigSynchronization+0x54>
 8001abe:	233c      	movs	r3, #60	; 0x3c
 8001ac0:	2201      	movs	r2, #1
 8001ac2:	54c2      	strb	r2, [r0, r3]
 8001ac4:	3301      	adds	r3, #1
 8001ac6:	3201      	adds	r2, #1
 8001ac8:	54c2      	strb	r2, [r0, r3]
 8001aca:	6803      	ldr	r3, [r0, #0]
 8001acc:	685a      	ldr	r2, [r3, #4]
 8001ace:	689c      	ldr	r4, [r3, #8]
 8001ad0:	2570      	movs	r5, #112	; 0x70
 8001ad2:	43aa      	bics	r2, r5
 8001ad4:	680d      	ldr	r5, [r1, #0]
 8001ad6:	432a      	orrs	r2, r5
 8001ad8:	605a      	str	r2, [r3, #4]
 8001ada:	6803      	ldr	r3, [r0, #0]
 8001adc:	4a0b      	ldr	r2, [pc, #44]	; (8001b0c <HAL_TIMEx_MasterConfigSynchronization+0x58>)
 8001ade:	4293      	cmp	r3, r2
 8001ae0:	d005      	beq.n	8001aee <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 8001ae2:	4a0b      	ldr	r2, [pc, #44]	; (8001b10 <HAL_TIMEx_MasterConfigSynchronization+0x5c>)
 8001ae4:	4293      	cmp	r3, r2
 8001ae6:	d002      	beq.n	8001aee <HAL_TIMEx_MasterConfigSynchronization+0x3a>
 8001ae8:	4a0a      	ldr	r2, [pc, #40]	; (8001b14 <HAL_TIMEx_MasterConfigSynchronization+0x60>)
 8001aea:	4293      	cmp	r3, r2
 8001aec:	d104      	bne.n	8001af8 <HAL_TIMEx_MasterConfigSynchronization+0x44>
 8001aee:	2280      	movs	r2, #128	; 0x80
 8001af0:	4394      	bics	r4, r2
 8001af2:	684a      	ldr	r2, [r1, #4]
 8001af4:	4314      	orrs	r4, r2
 8001af6:	609c      	str	r4, [r3, #8]
 8001af8:	233d      	movs	r3, #61	; 0x3d
 8001afa:	2201      	movs	r2, #1
 8001afc:	54c2      	strb	r2, [r0, r3]
 8001afe:	3b01      	subs	r3, #1
 8001b00:	2200      	movs	r2, #0
 8001b02:	54c2      	strb	r2, [r0, r3]
 8001b04:	2000      	movs	r0, #0
 8001b06:	bd30      	pop	{r4, r5, pc}
 8001b08:	2002      	movs	r0, #2
 8001b0a:	e7fc      	b.n	8001b06 <HAL_TIMEx_MasterConfigSynchronization+0x52>
 8001b0c:	40012c00 	.word	0x40012c00
 8001b10:	40000400 	.word	0x40000400
 8001b14:	40014000 	.word	0x40014000

08001b18 <HAL_TIMEx_CommutCallback>:
 8001b18:	4770      	bx	lr

08001b1a <HAL_TIMEx_BreakCallback>:
 8001b1a:	4770      	bx	lr

08001b1c <UART_TxISR_8BIT>:
 8001b1c:	6f43      	ldr	r3, [r0, #116]	; 0x74
 8001b1e:	2b21      	cmp	r3, #33	; 0x21
 8001b20:	d000      	beq.n	8001b24 <UART_TxISR_8BIT+0x8>
 8001b22:	4770      	bx	lr
 8001b24:	3331      	adds	r3, #49	; 0x31
 8001b26:	5ac3      	ldrh	r3, [r0, r3]
 8001b28:	b29b      	uxth	r3, r3
 8001b2a:	2b00      	cmp	r3, #0
 8001b2c:	d00c      	beq.n	8001b48 <UART_TxISR_8BIT+0x2c>
 8001b2e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8001b30:	781b      	ldrb	r3, [r3, #0]
 8001b32:	6802      	ldr	r2, [r0, #0]
 8001b34:	8513      	strh	r3, [r2, #40]	; 0x28
 8001b36:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8001b38:	3301      	adds	r3, #1
 8001b3a:	64c3      	str	r3, [r0, #76]	; 0x4c
 8001b3c:	2252      	movs	r2, #82	; 0x52
 8001b3e:	5a83      	ldrh	r3, [r0, r2]
 8001b40:	3b01      	subs	r3, #1
 8001b42:	b29b      	uxth	r3, r3
 8001b44:	5283      	strh	r3, [r0, r2]
 8001b46:	e7ec      	b.n	8001b22 <UART_TxISR_8BIT+0x6>
 8001b48:	6802      	ldr	r2, [r0, #0]
 8001b4a:	6813      	ldr	r3, [r2, #0]
 8001b4c:	2180      	movs	r1, #128	; 0x80
 8001b4e:	438b      	bics	r3, r1
 8001b50:	6013      	str	r3, [r2, #0]
 8001b52:	6802      	ldr	r2, [r0, #0]
 8001b54:	6813      	ldr	r3, [r2, #0]
 8001b56:	3940      	subs	r1, #64	; 0x40
 8001b58:	430b      	orrs	r3, r1
 8001b5a:	6013      	str	r3, [r2, #0]
 8001b5c:	e7e1      	b.n	8001b22 <UART_TxISR_8BIT+0x6>

08001b5e <UART_TxISR_16BIT>:
 8001b5e:	6f43      	ldr	r3, [r0, #116]	; 0x74
 8001b60:	2b21      	cmp	r3, #33	; 0x21
 8001b62:	d000      	beq.n	8001b66 <UART_TxISR_16BIT+0x8>
 8001b64:	4770      	bx	lr
 8001b66:	3331      	adds	r3, #49	; 0x31
 8001b68:	5ac3      	ldrh	r3, [r0, r3]
 8001b6a:	b29b      	uxth	r3, r3
 8001b6c:	2b00      	cmp	r3, #0
 8001b6e:	d00e      	beq.n	8001b8e <UART_TxISR_16BIT+0x30>
 8001b70:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8001b72:	881b      	ldrh	r3, [r3, #0]
 8001b74:	05db      	lsls	r3, r3, #23
 8001b76:	0ddb      	lsrs	r3, r3, #23
 8001b78:	6802      	ldr	r2, [r0, #0]
 8001b7a:	8513      	strh	r3, [r2, #40]	; 0x28
 8001b7c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8001b7e:	3302      	adds	r3, #2
 8001b80:	64c3      	str	r3, [r0, #76]	; 0x4c
 8001b82:	2252      	movs	r2, #82	; 0x52
 8001b84:	5a83      	ldrh	r3, [r0, r2]
 8001b86:	3b01      	subs	r3, #1
 8001b88:	b29b      	uxth	r3, r3
 8001b8a:	5283      	strh	r3, [r0, r2]
 8001b8c:	e7ea      	b.n	8001b64 <UART_TxISR_16BIT+0x6>
 8001b8e:	6802      	ldr	r2, [r0, #0]
 8001b90:	6813      	ldr	r3, [r2, #0]
 8001b92:	2180      	movs	r1, #128	; 0x80
 8001b94:	438b      	bics	r3, r1
 8001b96:	6013      	str	r3, [r2, #0]
 8001b98:	6802      	ldr	r2, [r0, #0]
 8001b9a:	6813      	ldr	r3, [r2, #0]
 8001b9c:	3940      	subs	r1, #64	; 0x40
 8001b9e:	430b      	orrs	r3, r1
 8001ba0:	6013      	str	r3, [r2, #0]
 8001ba2:	e7df      	b.n	8001b64 <UART_TxISR_16BIT+0x6>

08001ba4 <HAL_UART_Transmit_IT>:
 8001ba4:	b530      	push	{r4, r5, lr}
 8001ba6:	6f43      	ldr	r3, [r0, #116]	; 0x74
 8001ba8:	2b20      	cmp	r3, #32
 8001baa:	d136      	bne.n	8001c1a <HAL_UART_Transmit_IT+0x76>
 8001bac:	2900      	cmp	r1, #0
 8001bae:	d036      	beq.n	8001c1e <HAL_UART_Transmit_IT+0x7a>
 8001bb0:	2a00      	cmp	r2, #0
 8001bb2:	d036      	beq.n	8001c22 <HAL_UART_Transmit_IT+0x7e>
 8001bb4:	6883      	ldr	r3, [r0, #8]
 8001bb6:	2480      	movs	r4, #128	; 0x80
 8001bb8:	0164      	lsls	r4, r4, #5
 8001bba:	42a3      	cmp	r3, r4
 8001bbc:	d020      	beq.n	8001c00 <HAL_UART_Transmit_IT+0x5c>
 8001bbe:	2470      	movs	r4, #112	; 0x70
 8001bc0:	5d04      	ldrb	r4, [r0, r4]
 8001bc2:	2c01      	cmp	r4, #1
 8001bc4:	d02f      	beq.n	8001c26 <HAL_UART_Transmit_IT+0x82>
 8001bc6:	2470      	movs	r4, #112	; 0x70
 8001bc8:	2501      	movs	r5, #1
 8001bca:	5505      	strb	r5, [r0, r4]
 8001bcc:	64c1      	str	r1, [r0, #76]	; 0x4c
 8001bce:	2150      	movs	r1, #80	; 0x50
 8001bd0:	5242      	strh	r2, [r0, r1]
 8001bd2:	3102      	adds	r1, #2
 8001bd4:	5242      	strh	r2, [r0, r1]
 8001bd6:	2200      	movs	r2, #0
 8001bd8:	6642      	str	r2, [r0, #100]	; 0x64
 8001bda:	67c2      	str	r2, [r0, #124]	; 0x7c
 8001bdc:	3221      	adds	r2, #33	; 0x21
 8001bde:	6742      	str	r2, [r0, #116]	; 0x74
 8001be0:	2280      	movs	r2, #128	; 0x80
 8001be2:	0152      	lsls	r2, r2, #5
 8001be4:	4293      	cmp	r3, r2
 8001be6:	d012      	beq.n	8001c0e <HAL_UART_Transmit_IT+0x6a>
 8001be8:	4b10      	ldr	r3, [pc, #64]	; (8001c2c <HAL_UART_Transmit_IT+0x88>)
 8001bea:	6643      	str	r3, [r0, #100]	; 0x64
 8001bec:	2370      	movs	r3, #112	; 0x70
 8001bee:	2200      	movs	r2, #0
 8001bf0:	54c2      	strb	r2, [r0, r3]
 8001bf2:	6802      	ldr	r2, [r0, #0]
 8001bf4:	6813      	ldr	r3, [r2, #0]
 8001bf6:	2180      	movs	r1, #128	; 0x80
 8001bf8:	430b      	orrs	r3, r1
 8001bfa:	6013      	str	r3, [r2, #0]
 8001bfc:	2000      	movs	r0, #0
 8001bfe:	e00d      	b.n	8001c1c <HAL_UART_Transmit_IT+0x78>
 8001c00:	6904      	ldr	r4, [r0, #16]
 8001c02:	2c00      	cmp	r4, #0
 8001c04:	d1db      	bne.n	8001bbe <HAL_UART_Transmit_IT+0x1a>
 8001c06:	07cc      	lsls	r4, r1, #31
 8001c08:	d5d9      	bpl.n	8001bbe <HAL_UART_Transmit_IT+0x1a>
 8001c0a:	2001      	movs	r0, #1
 8001c0c:	e006      	b.n	8001c1c <HAL_UART_Transmit_IT+0x78>
 8001c0e:	6903      	ldr	r3, [r0, #16]
 8001c10:	2b00      	cmp	r3, #0
 8001c12:	d1e9      	bne.n	8001be8 <HAL_UART_Transmit_IT+0x44>
 8001c14:	4b06      	ldr	r3, [pc, #24]	; (8001c30 <HAL_UART_Transmit_IT+0x8c>)
 8001c16:	6643      	str	r3, [r0, #100]	; 0x64
 8001c18:	e7e8      	b.n	8001bec <HAL_UART_Transmit_IT+0x48>
 8001c1a:	2002      	movs	r0, #2
 8001c1c:	bd30      	pop	{r4, r5, pc}
 8001c1e:	2001      	movs	r0, #1
 8001c20:	e7fc      	b.n	8001c1c <HAL_UART_Transmit_IT+0x78>
 8001c22:	2001      	movs	r0, #1
 8001c24:	e7fa      	b.n	8001c1c <HAL_UART_Transmit_IT+0x78>
 8001c26:	2002      	movs	r0, #2
 8001c28:	e7f8      	b.n	8001c1c <HAL_UART_Transmit_IT+0x78>
 8001c2a:	46c0      	nop			; (mov r8, r8)
 8001c2c:	08001b1d 	.word	0x08001b1d
 8001c30:	08001b5f 	.word	0x08001b5f

08001c34 <HAL_UART_Receive_IT>:
 8001c34:	b530      	push	{r4, r5, lr}
 8001c36:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8001c38:	2b20      	cmp	r3, #32
 8001c3a:	d15c      	bne.n	8001cf6 <HAL_UART_Receive_IT+0xc2>
 8001c3c:	2900      	cmp	r1, #0
 8001c3e:	d05c      	beq.n	8001cfa <HAL_UART_Receive_IT+0xc6>
 8001c40:	2a00      	cmp	r2, #0
 8001c42:	d05c      	beq.n	8001cfe <HAL_UART_Receive_IT+0xca>
 8001c44:	6883      	ldr	r3, [r0, #8]
 8001c46:	2480      	movs	r4, #128	; 0x80
 8001c48:	0164      	lsls	r4, r4, #5
 8001c4a:	42a3      	cmp	r3, r4
 8001c4c:	d01a      	beq.n	8001c84 <HAL_UART_Receive_IT+0x50>
 8001c4e:	2470      	movs	r4, #112	; 0x70
 8001c50:	5d04      	ldrb	r4, [r0, r4]
 8001c52:	2c01      	cmp	r4, #1
 8001c54:	d055      	beq.n	8001d02 <HAL_UART_Receive_IT+0xce>
 8001c56:	2470      	movs	r4, #112	; 0x70
 8001c58:	2501      	movs	r5, #1
 8001c5a:	5505      	strb	r5, [r0, r4]
 8001c5c:	6541      	str	r1, [r0, #84]	; 0x54
 8001c5e:	2158      	movs	r1, #88	; 0x58
 8001c60:	5242      	strh	r2, [r0, r1]
 8001c62:	3102      	adds	r1, #2
 8001c64:	5242      	strh	r2, [r0, r1]
 8001c66:	2200      	movs	r2, #0
 8001c68:	6602      	str	r2, [r0, #96]	; 0x60
 8001c6a:	2280      	movs	r2, #128	; 0x80
 8001c6c:	0152      	lsls	r2, r2, #5
 8001c6e:	4293      	cmp	r3, r2
 8001c70:	d00f      	beq.n	8001c92 <HAL_UART_Receive_IT+0x5e>
 8001c72:	2b00      	cmp	r3, #0
 8001c74:	d11c      	bne.n	8001cb0 <HAL_UART_Receive_IT+0x7c>
 8001c76:	6903      	ldr	r3, [r0, #16]
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	d115      	bne.n	8001ca8 <HAL_UART_Receive_IT+0x74>
 8001c7c:	335c      	adds	r3, #92	; 0x5c
 8001c7e:	22ff      	movs	r2, #255	; 0xff
 8001c80:	52c2      	strh	r2, [r0, r3]
 8001c82:	e018      	b.n	8001cb6 <HAL_UART_Receive_IT+0x82>
 8001c84:	6904      	ldr	r4, [r0, #16]
 8001c86:	2c00      	cmp	r4, #0
 8001c88:	d1e1      	bne.n	8001c4e <HAL_UART_Receive_IT+0x1a>
 8001c8a:	07cc      	lsls	r4, r1, #31
 8001c8c:	d5df      	bpl.n	8001c4e <HAL_UART_Receive_IT+0x1a>
 8001c8e:	2001      	movs	r0, #1
 8001c90:	e032      	b.n	8001cf8 <HAL_UART_Receive_IT+0xc4>
 8001c92:	6903      	ldr	r3, [r0, #16]
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d103      	bne.n	8001ca0 <HAL_UART_Receive_IT+0x6c>
 8001c98:	335c      	adds	r3, #92	; 0x5c
 8001c9a:	4a1b      	ldr	r2, [pc, #108]	; (8001d08 <HAL_UART_Receive_IT+0xd4>)
 8001c9c:	52c2      	strh	r2, [r0, r3]
 8001c9e:	e00a      	b.n	8001cb6 <HAL_UART_Receive_IT+0x82>
 8001ca0:	235c      	movs	r3, #92	; 0x5c
 8001ca2:	22ff      	movs	r2, #255	; 0xff
 8001ca4:	52c2      	strh	r2, [r0, r3]
 8001ca6:	e006      	b.n	8001cb6 <HAL_UART_Receive_IT+0x82>
 8001ca8:	235c      	movs	r3, #92	; 0x5c
 8001caa:	227f      	movs	r2, #127	; 0x7f
 8001cac:	52c2      	strh	r2, [r0, r3]
 8001cae:	e002      	b.n	8001cb6 <HAL_UART_Receive_IT+0x82>
 8001cb0:	235c      	movs	r3, #92	; 0x5c
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	52c2      	strh	r2, [r0, r3]
 8001cb6:	2300      	movs	r3, #0
 8001cb8:	67c3      	str	r3, [r0, #124]	; 0x7c
 8001cba:	3322      	adds	r3, #34	; 0x22
 8001cbc:	6783      	str	r3, [r0, #120]	; 0x78
 8001cbe:	6802      	ldr	r2, [r0, #0]
 8001cc0:	6893      	ldr	r3, [r2, #8]
 8001cc2:	2101      	movs	r1, #1
 8001cc4:	430b      	orrs	r3, r1
 8001cc6:	6093      	str	r3, [r2, #8]
 8001cc8:	2380      	movs	r3, #128	; 0x80
 8001cca:	015b      	lsls	r3, r3, #5
 8001ccc:	6882      	ldr	r2, [r0, #8]
 8001cce:	429a      	cmp	r2, r3
 8001cd0:	d00b      	beq.n	8001cea <HAL_UART_Receive_IT+0xb6>
 8001cd2:	4b0e      	ldr	r3, [pc, #56]	; (8001d0c <HAL_UART_Receive_IT+0xd8>)
 8001cd4:	6603      	str	r3, [r0, #96]	; 0x60
 8001cd6:	2370      	movs	r3, #112	; 0x70
 8001cd8:	2200      	movs	r2, #0
 8001cda:	54c2      	strb	r2, [r0, r3]
 8001cdc:	6802      	ldr	r2, [r0, #0]
 8001cde:	6811      	ldr	r1, [r2, #0]
 8001ce0:	33b0      	adds	r3, #176	; 0xb0
 8001ce2:	430b      	orrs	r3, r1
 8001ce4:	6013      	str	r3, [r2, #0]
 8001ce6:	2000      	movs	r0, #0
 8001ce8:	e006      	b.n	8001cf8 <HAL_UART_Receive_IT+0xc4>
 8001cea:	6903      	ldr	r3, [r0, #16]
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	d1f0      	bne.n	8001cd2 <HAL_UART_Receive_IT+0x9e>
 8001cf0:	4b07      	ldr	r3, [pc, #28]	; (8001d10 <HAL_UART_Receive_IT+0xdc>)
 8001cf2:	6603      	str	r3, [r0, #96]	; 0x60
 8001cf4:	e7ef      	b.n	8001cd6 <HAL_UART_Receive_IT+0xa2>
 8001cf6:	2002      	movs	r0, #2
 8001cf8:	bd30      	pop	{r4, r5, pc}
 8001cfa:	2001      	movs	r0, #1
 8001cfc:	e7fc      	b.n	8001cf8 <HAL_UART_Receive_IT+0xc4>
 8001cfe:	2001      	movs	r0, #1
 8001d00:	e7fa      	b.n	8001cf8 <HAL_UART_Receive_IT+0xc4>
 8001d02:	2002      	movs	r0, #2
 8001d04:	e7f8      	b.n	8001cf8 <HAL_UART_Receive_IT+0xc4>
 8001d06:	46c0      	nop			; (mov r8, r8)
 8001d08:	000001ff 	.word	0x000001ff
 8001d0c:	08001d15 	.word	0x08001d15
 8001d10:	08001d79 	.word	0x08001d79

08001d14 <UART_RxISR_8BIT>:
 8001d14:	b510      	push	{r4, lr}
 8001d16:	235c      	movs	r3, #92	; 0x5c
 8001d18:	5ac3      	ldrh	r3, [r0, r3]
 8001d1a:	6f82      	ldr	r2, [r0, #120]	; 0x78
 8001d1c:	2a22      	cmp	r2, #34	; 0x22
 8001d1e:	d005      	beq.n	8001d2c <UART_RxISR_8BIT+0x18>
 8001d20:	6802      	ldr	r2, [r0, #0]
 8001d22:	6993      	ldr	r3, [r2, #24]
 8001d24:	2108      	movs	r1, #8
 8001d26:	430b      	orrs	r3, r1
 8001d28:	6193      	str	r3, [r2, #24]
 8001d2a:	bd10      	pop	{r4, pc}
 8001d2c:	6802      	ldr	r2, [r0, #0]
 8001d2e:	8c92      	ldrh	r2, [r2, #36]	; 0x24
 8001d30:	b2db      	uxtb	r3, r3
 8001d32:	4013      	ands	r3, r2
 8001d34:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8001d36:	7013      	strb	r3, [r2, #0]
 8001d38:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8001d3a:	3301      	adds	r3, #1
 8001d3c:	6543      	str	r3, [r0, #84]	; 0x54
 8001d3e:	225a      	movs	r2, #90	; 0x5a
 8001d40:	5a83      	ldrh	r3, [r0, r2]
 8001d42:	3b01      	subs	r3, #1
 8001d44:	b29b      	uxth	r3, r3
 8001d46:	5283      	strh	r3, [r0, r2]
 8001d48:	5a83      	ldrh	r3, [r0, r2]
 8001d4a:	b29b      	uxth	r3, r3
 8001d4c:	2b00      	cmp	r3, #0
 8001d4e:	d1ec      	bne.n	8001d2a <UART_RxISR_8BIT+0x16>
 8001d50:	6802      	ldr	r2, [r0, #0]
 8001d52:	6813      	ldr	r3, [r2, #0]
 8001d54:	4907      	ldr	r1, [pc, #28]	; (8001d74 <UART_RxISR_8BIT+0x60>)
 8001d56:	400b      	ands	r3, r1
 8001d58:	6013      	str	r3, [r2, #0]
 8001d5a:	6802      	ldr	r2, [r0, #0]
 8001d5c:	6893      	ldr	r3, [r2, #8]
 8001d5e:	3123      	adds	r1, #35	; 0x23
 8001d60:	31ff      	adds	r1, #255	; 0xff
 8001d62:	438b      	bics	r3, r1
 8001d64:	6093      	str	r3, [r2, #8]
 8001d66:	2320      	movs	r3, #32
 8001d68:	6783      	str	r3, [r0, #120]	; 0x78
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	6603      	str	r3, [r0, #96]	; 0x60
 8001d6e:	f001 fb4f 	bl	8003410 <HAL_UART_RxCpltCallback>
 8001d72:	e7da      	b.n	8001d2a <UART_RxISR_8BIT+0x16>
 8001d74:	fffffedf 	.word	0xfffffedf

08001d78 <UART_RxISR_16BIT>:
 8001d78:	b510      	push	{r4, lr}
 8001d7a:	235c      	movs	r3, #92	; 0x5c
 8001d7c:	5ac2      	ldrh	r2, [r0, r3]
 8001d7e:	6f83      	ldr	r3, [r0, #120]	; 0x78
 8001d80:	2b22      	cmp	r3, #34	; 0x22
 8001d82:	d005      	beq.n	8001d90 <UART_RxISR_16BIT+0x18>
 8001d84:	6802      	ldr	r2, [r0, #0]
 8001d86:	6993      	ldr	r3, [r2, #24]
 8001d88:	2108      	movs	r1, #8
 8001d8a:	430b      	orrs	r3, r1
 8001d8c:	6193      	str	r3, [r2, #24]
 8001d8e:	bd10      	pop	{r4, pc}
 8001d90:	6803      	ldr	r3, [r0, #0]
 8001d92:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8001d94:	4013      	ands	r3, r2
 8001d96:	6d42      	ldr	r2, [r0, #84]	; 0x54
 8001d98:	8013      	strh	r3, [r2, #0]
 8001d9a:	6d43      	ldr	r3, [r0, #84]	; 0x54
 8001d9c:	3302      	adds	r3, #2
 8001d9e:	6543      	str	r3, [r0, #84]	; 0x54
 8001da0:	225a      	movs	r2, #90	; 0x5a
 8001da2:	5a83      	ldrh	r3, [r0, r2]
 8001da4:	3b01      	subs	r3, #1
 8001da6:	b29b      	uxth	r3, r3
 8001da8:	5283      	strh	r3, [r0, r2]
 8001daa:	5a83      	ldrh	r3, [r0, r2]
 8001dac:	b29b      	uxth	r3, r3
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d1ed      	bne.n	8001d8e <UART_RxISR_16BIT+0x16>
 8001db2:	6802      	ldr	r2, [r0, #0]
 8001db4:	6813      	ldr	r3, [r2, #0]
 8001db6:	4908      	ldr	r1, [pc, #32]	; (8001dd8 <UART_RxISR_16BIT+0x60>)
 8001db8:	400b      	ands	r3, r1
 8001dba:	6013      	str	r3, [r2, #0]
 8001dbc:	6802      	ldr	r2, [r0, #0]
 8001dbe:	6893      	ldr	r3, [r2, #8]
 8001dc0:	3123      	adds	r1, #35	; 0x23
 8001dc2:	31ff      	adds	r1, #255	; 0xff
 8001dc4:	438b      	bics	r3, r1
 8001dc6:	6093      	str	r3, [r2, #8]
 8001dc8:	2320      	movs	r3, #32
 8001dca:	6783      	str	r3, [r0, #120]	; 0x78
 8001dcc:	2300      	movs	r3, #0
 8001dce:	6603      	str	r3, [r0, #96]	; 0x60
 8001dd0:	f001 fb1e 	bl	8003410 <HAL_UART_RxCpltCallback>
 8001dd4:	e7db      	b.n	8001d8e <UART_RxISR_16BIT+0x16>
 8001dd6:	46c0      	nop			; (mov r8, r8)
 8001dd8:	fffffedf 	.word	0xfffffedf

08001ddc <UART_SetConfig>:
 8001ddc:	b510      	push	{r4, lr}
 8001dde:	0004      	movs	r4, r0
 8001de0:	6883      	ldr	r3, [r0, #8]
 8001de2:	6902      	ldr	r2, [r0, #16]
 8001de4:	4313      	orrs	r3, r2
 8001de6:	6942      	ldr	r2, [r0, #20]
 8001de8:	4313      	orrs	r3, r2
 8001dea:	69c2      	ldr	r2, [r0, #28]
 8001dec:	4313      	orrs	r3, r2
 8001dee:	6801      	ldr	r1, [r0, #0]
 8001df0:	680a      	ldr	r2, [r1, #0]
 8001df2:	486a      	ldr	r0, [pc, #424]	; (8001f9c <UART_SetConfig+0x1c0>)
 8001df4:	4002      	ands	r2, r0
 8001df6:	4313      	orrs	r3, r2
 8001df8:	600b      	str	r3, [r1, #0]
 8001dfa:	6822      	ldr	r2, [r4, #0]
 8001dfc:	6853      	ldr	r3, [r2, #4]
 8001dfe:	4968      	ldr	r1, [pc, #416]	; (8001fa0 <UART_SetConfig+0x1c4>)
 8001e00:	400b      	ands	r3, r1
 8001e02:	68e1      	ldr	r1, [r4, #12]
 8001e04:	430b      	orrs	r3, r1
 8001e06:	6053      	str	r3, [r2, #4]
 8001e08:	6a22      	ldr	r2, [r4, #32]
 8001e0a:	69a3      	ldr	r3, [r4, #24]
 8001e0c:	431a      	orrs	r2, r3
 8001e0e:	6821      	ldr	r1, [r4, #0]
 8001e10:	688b      	ldr	r3, [r1, #8]
 8001e12:	4864      	ldr	r0, [pc, #400]	; (8001fa4 <UART_SetConfig+0x1c8>)
 8001e14:	4003      	ands	r3, r0
 8001e16:	4313      	orrs	r3, r2
 8001e18:	608b      	str	r3, [r1, #8]
 8001e1a:	6823      	ldr	r3, [r4, #0]
 8001e1c:	4a62      	ldr	r2, [pc, #392]	; (8001fa8 <UART_SetConfig+0x1cc>)
 8001e1e:	4293      	cmp	r3, r2
 8001e20:	d01f      	beq.n	8001e62 <UART_SetConfig+0x86>
 8001e22:	4a62      	ldr	r2, [pc, #392]	; (8001fac <UART_SetConfig+0x1d0>)
 8001e24:	4293      	cmp	r3, r2
 8001e26:	d030      	beq.n	8001e8a <UART_SetConfig+0xae>
 8001e28:	2310      	movs	r3, #16
 8001e2a:	2280      	movs	r2, #128	; 0x80
 8001e2c:	0212      	lsls	r2, r2, #8
 8001e2e:	69e1      	ldr	r1, [r4, #28]
 8001e30:	4291      	cmp	r1, r2
 8001e32:	d02e      	beq.n	8001e92 <UART_SetConfig+0xb6>
 8001e34:	2b02      	cmp	r3, #2
 8001e36:	d100      	bne.n	8001e3a <UART_SetConfig+0x5e>
 8001e38:	e090      	b.n	8001f5c <UART_SetConfig+0x180>
 8001e3a:	d977      	bls.n	8001f2c <UART_SetConfig+0x150>
 8001e3c:	2b04      	cmp	r3, #4
 8001e3e:	d100      	bne.n	8001e42 <UART_SetConfig+0x66>
 8001e40:	e098      	b.n	8001f74 <UART_SetConfig+0x198>
 8001e42:	2b08      	cmp	r3, #8
 8001e44:	d000      	beq.n	8001e48 <UART_SetConfig+0x6c>
 8001e46:	e0a1      	b.n	8001f8c <UART_SetConfig+0x1b0>
 8001e48:	6863      	ldr	r3, [r4, #4]
 8001e4a:	0858      	lsrs	r0, r3, #1
 8001e4c:	2380      	movs	r3, #128	; 0x80
 8001e4e:	021b      	lsls	r3, r3, #8
 8001e50:	469c      	mov	ip, r3
 8001e52:	4460      	add	r0, ip
 8001e54:	6861      	ldr	r1, [r4, #4]
 8001e56:	f7fe f957 	bl	8000108 <__udivsi3>
 8001e5a:	0403      	lsls	r3, r0, #16
 8001e5c:	0c1b      	lsrs	r3, r3, #16
 8001e5e:	2000      	movs	r0, #0
 8001e60:	e071      	b.n	8001f46 <UART_SetConfig+0x16a>
 8001e62:	4b53      	ldr	r3, [pc, #332]	; (8001fb0 <UART_SetConfig+0x1d4>)
 8001e64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001e66:	2303      	movs	r3, #3
 8001e68:	4013      	ands	r3, r2
 8001e6a:	2b01      	cmp	r3, #1
 8001e6c:	d009      	beq.n	8001e82 <UART_SetConfig+0xa6>
 8001e6e:	2b00      	cmp	r3, #0
 8001e70:	d005      	beq.n	8001e7e <UART_SetConfig+0xa2>
 8001e72:	2b02      	cmp	r3, #2
 8001e74:	d007      	beq.n	8001e86 <UART_SetConfig+0xaa>
 8001e76:	2b03      	cmp	r3, #3
 8001e78:	d009      	beq.n	8001e8e <UART_SetConfig+0xb2>
 8001e7a:	2310      	movs	r3, #16
 8001e7c:	e7d5      	b.n	8001e2a <UART_SetConfig+0x4e>
 8001e7e:	2300      	movs	r3, #0
 8001e80:	e7d3      	b.n	8001e2a <UART_SetConfig+0x4e>
 8001e82:	2304      	movs	r3, #4
 8001e84:	e7d1      	b.n	8001e2a <UART_SetConfig+0x4e>
 8001e86:	2308      	movs	r3, #8
 8001e88:	e7cf      	b.n	8001e2a <UART_SetConfig+0x4e>
 8001e8a:	2300      	movs	r3, #0
 8001e8c:	e7cd      	b.n	8001e2a <UART_SetConfig+0x4e>
 8001e8e:	2302      	movs	r3, #2
 8001e90:	e7cb      	b.n	8001e2a <UART_SetConfig+0x4e>
 8001e92:	2b02      	cmp	r3, #2
 8001e94:	d02e      	beq.n	8001ef4 <UART_SetConfig+0x118>
 8001e96:	d910      	bls.n	8001eba <UART_SetConfig+0xde>
 8001e98:	2b04      	cmp	r3, #4
 8001e9a:	d037      	beq.n	8001f0c <UART_SetConfig+0x130>
 8001e9c:	2b08      	cmp	r3, #8
 8001e9e:	d142      	bne.n	8001f26 <UART_SetConfig+0x14a>
 8001ea0:	6863      	ldr	r3, [r4, #4]
 8001ea2:	0858      	lsrs	r0, r3, #1
 8001ea4:	2380      	movs	r3, #128	; 0x80
 8001ea6:	025b      	lsls	r3, r3, #9
 8001ea8:	469c      	mov	ip, r3
 8001eaa:	4460      	add	r0, ip
 8001eac:	6861      	ldr	r1, [r4, #4]
 8001eae:	f7fe f92b 	bl	8000108 <__udivsi3>
 8001eb2:	0403      	lsls	r3, r0, #16
 8001eb4:	0c1b      	lsrs	r3, r3, #16
 8001eb6:	2000      	movs	r0, #0
 8001eb8:	e00d      	b.n	8001ed6 <UART_SetConfig+0xfa>
 8001eba:	2b00      	cmp	r3, #0
 8001ebc:	d133      	bne.n	8001f26 <UART_SetConfig+0x14a>
 8001ebe:	f7fe fe59 	bl	8000b74 <HAL_RCC_GetPCLK1Freq>
 8001ec2:	0040      	lsls	r0, r0, #1
 8001ec4:	6863      	ldr	r3, [r4, #4]
 8001ec6:	085b      	lsrs	r3, r3, #1
 8001ec8:	18c0      	adds	r0, r0, r3
 8001eca:	6861      	ldr	r1, [r4, #4]
 8001ecc:	f7fe f91c 	bl	8000108 <__udivsi3>
 8001ed0:	0403      	lsls	r3, r0, #16
 8001ed2:	0c1b      	lsrs	r3, r3, #16
 8001ed4:	2000      	movs	r0, #0
 8001ed6:	4937      	ldr	r1, [pc, #220]	; (8001fb4 <UART_SetConfig+0x1d8>)
 8001ed8:	001a      	movs	r2, r3
 8001eda:	3a10      	subs	r2, #16
 8001edc:	428a      	cmp	r2, r1
 8001ede:	d858      	bhi.n	8001f92 <UART_SetConfig+0x1b6>
 8001ee0:	220f      	movs	r2, #15
 8001ee2:	0019      	movs	r1, r3
 8001ee4:	4391      	bics	r1, r2
 8001ee6:	085b      	lsrs	r3, r3, #1
 8001ee8:	3a08      	subs	r2, #8
 8001eea:	4013      	ands	r3, r2
 8001eec:	430b      	orrs	r3, r1
 8001eee:	6822      	ldr	r2, [r4, #0]
 8001ef0:	60d3      	str	r3, [r2, #12]
 8001ef2:	e02f      	b.n	8001f54 <UART_SetConfig+0x178>
 8001ef4:	6863      	ldr	r3, [r4, #4]
 8001ef6:	0858      	lsrs	r0, r3, #1
 8001ef8:	4b2f      	ldr	r3, [pc, #188]	; (8001fb8 <UART_SetConfig+0x1dc>)
 8001efa:	469c      	mov	ip, r3
 8001efc:	4460      	add	r0, ip
 8001efe:	6861      	ldr	r1, [r4, #4]
 8001f00:	f7fe f902 	bl	8000108 <__udivsi3>
 8001f04:	0403      	lsls	r3, r0, #16
 8001f06:	0c1b      	lsrs	r3, r3, #16
 8001f08:	2000      	movs	r0, #0
 8001f0a:	e7e4      	b.n	8001ed6 <UART_SetConfig+0xfa>
 8001f0c:	f7fe fd5c 	bl	80009c8 <HAL_RCC_GetSysClockFreq>
 8001f10:	0040      	lsls	r0, r0, #1
 8001f12:	6863      	ldr	r3, [r4, #4]
 8001f14:	085b      	lsrs	r3, r3, #1
 8001f16:	18c0      	adds	r0, r0, r3
 8001f18:	6861      	ldr	r1, [r4, #4]
 8001f1a:	f7fe f8f5 	bl	8000108 <__udivsi3>
 8001f1e:	0403      	lsls	r3, r0, #16
 8001f20:	0c1b      	lsrs	r3, r3, #16
 8001f22:	2000      	movs	r0, #0
 8001f24:	e7d7      	b.n	8001ed6 <UART_SetConfig+0xfa>
 8001f26:	2001      	movs	r0, #1
 8001f28:	2300      	movs	r3, #0
 8001f2a:	e7d4      	b.n	8001ed6 <UART_SetConfig+0xfa>
 8001f2c:	2b00      	cmp	r3, #0
 8001f2e:	d12d      	bne.n	8001f8c <UART_SetConfig+0x1b0>
 8001f30:	f7fe fe20 	bl	8000b74 <HAL_RCC_GetPCLK1Freq>
 8001f34:	6863      	ldr	r3, [r4, #4]
 8001f36:	085b      	lsrs	r3, r3, #1
 8001f38:	1818      	adds	r0, r3, r0
 8001f3a:	6861      	ldr	r1, [r4, #4]
 8001f3c:	f7fe f8e4 	bl	8000108 <__udivsi3>
 8001f40:	0403      	lsls	r3, r0, #16
 8001f42:	0c1b      	lsrs	r3, r3, #16
 8001f44:	2000      	movs	r0, #0
 8001f46:	491b      	ldr	r1, [pc, #108]	; (8001fb4 <UART_SetConfig+0x1d8>)
 8001f48:	001a      	movs	r2, r3
 8001f4a:	3a10      	subs	r2, #16
 8001f4c:	428a      	cmp	r2, r1
 8001f4e:	d822      	bhi.n	8001f96 <UART_SetConfig+0x1ba>
 8001f50:	6822      	ldr	r2, [r4, #0]
 8001f52:	60d3      	str	r3, [r2, #12]
 8001f54:	2300      	movs	r3, #0
 8001f56:	6623      	str	r3, [r4, #96]	; 0x60
 8001f58:	6663      	str	r3, [r4, #100]	; 0x64
 8001f5a:	bd10      	pop	{r4, pc}
 8001f5c:	6863      	ldr	r3, [r4, #4]
 8001f5e:	0858      	lsrs	r0, r3, #1
 8001f60:	4b16      	ldr	r3, [pc, #88]	; (8001fbc <UART_SetConfig+0x1e0>)
 8001f62:	469c      	mov	ip, r3
 8001f64:	4460      	add	r0, ip
 8001f66:	6861      	ldr	r1, [r4, #4]
 8001f68:	f7fe f8ce 	bl	8000108 <__udivsi3>
 8001f6c:	0403      	lsls	r3, r0, #16
 8001f6e:	0c1b      	lsrs	r3, r3, #16
 8001f70:	2000      	movs	r0, #0
 8001f72:	e7e8      	b.n	8001f46 <UART_SetConfig+0x16a>
 8001f74:	f7fe fd28 	bl	80009c8 <HAL_RCC_GetSysClockFreq>
 8001f78:	6863      	ldr	r3, [r4, #4]
 8001f7a:	085b      	lsrs	r3, r3, #1
 8001f7c:	1818      	adds	r0, r3, r0
 8001f7e:	6861      	ldr	r1, [r4, #4]
 8001f80:	f7fe f8c2 	bl	8000108 <__udivsi3>
 8001f84:	0403      	lsls	r3, r0, #16
 8001f86:	0c1b      	lsrs	r3, r3, #16
 8001f88:	2000      	movs	r0, #0
 8001f8a:	e7dc      	b.n	8001f46 <UART_SetConfig+0x16a>
 8001f8c:	2001      	movs	r0, #1
 8001f8e:	2300      	movs	r3, #0
 8001f90:	e7d9      	b.n	8001f46 <UART_SetConfig+0x16a>
 8001f92:	2001      	movs	r0, #1
 8001f94:	e7de      	b.n	8001f54 <UART_SetConfig+0x178>
 8001f96:	2001      	movs	r0, #1
 8001f98:	e7dc      	b.n	8001f54 <UART_SetConfig+0x178>
 8001f9a:	46c0      	nop			; (mov r8, r8)
 8001f9c:	ffff69f3 	.word	0xffff69f3
 8001fa0:	ffffcfff 	.word	0xffffcfff
 8001fa4:	fffff4ff 	.word	0xfffff4ff
 8001fa8:	40013800 	.word	0x40013800
 8001fac:	40004400 	.word	0x40004400
 8001fb0:	40021000 	.word	0x40021000
 8001fb4:	0000ffef 	.word	0x0000ffef
 8001fb8:	00f42400 	.word	0x00f42400
 8001fbc:	007a1200 	.word	0x007a1200

08001fc0 <UART_AdvFeatureConfig>:
 8001fc0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001fc2:	07db      	lsls	r3, r3, #31
 8001fc4:	d506      	bpl.n	8001fd4 <UART_AdvFeatureConfig+0x14>
 8001fc6:	6802      	ldr	r2, [r0, #0]
 8001fc8:	6853      	ldr	r3, [r2, #4]
 8001fca:	492c      	ldr	r1, [pc, #176]	; (800207c <UART_AdvFeatureConfig+0xbc>)
 8001fcc:	400b      	ands	r3, r1
 8001fce:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8001fd0:	430b      	orrs	r3, r1
 8001fd2:	6053      	str	r3, [r2, #4]
 8001fd4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001fd6:	079b      	lsls	r3, r3, #30
 8001fd8:	d506      	bpl.n	8001fe8 <UART_AdvFeatureConfig+0x28>
 8001fda:	6802      	ldr	r2, [r0, #0]
 8001fdc:	6853      	ldr	r3, [r2, #4]
 8001fde:	4928      	ldr	r1, [pc, #160]	; (8002080 <UART_AdvFeatureConfig+0xc0>)
 8001fe0:	400b      	ands	r3, r1
 8001fe2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 8001fe4:	430b      	orrs	r3, r1
 8001fe6:	6053      	str	r3, [r2, #4]
 8001fe8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001fea:	075b      	lsls	r3, r3, #29
 8001fec:	d506      	bpl.n	8001ffc <UART_AdvFeatureConfig+0x3c>
 8001fee:	6802      	ldr	r2, [r0, #0]
 8001ff0:	6853      	ldr	r3, [r2, #4]
 8001ff2:	4924      	ldr	r1, [pc, #144]	; (8002084 <UART_AdvFeatureConfig+0xc4>)
 8001ff4:	400b      	ands	r3, r1
 8001ff6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8001ff8:	430b      	orrs	r3, r1
 8001ffa:	6053      	str	r3, [r2, #4]
 8001ffc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001ffe:	071b      	lsls	r3, r3, #28
 8002000:	d506      	bpl.n	8002010 <UART_AdvFeatureConfig+0x50>
 8002002:	6802      	ldr	r2, [r0, #0]
 8002004:	6853      	ldr	r3, [r2, #4]
 8002006:	4920      	ldr	r1, [pc, #128]	; (8002088 <UART_AdvFeatureConfig+0xc8>)
 8002008:	400b      	ands	r3, r1
 800200a:	6b41      	ldr	r1, [r0, #52]	; 0x34
 800200c:	430b      	orrs	r3, r1
 800200e:	6053      	str	r3, [r2, #4]
 8002010:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8002012:	06db      	lsls	r3, r3, #27
 8002014:	d506      	bpl.n	8002024 <UART_AdvFeatureConfig+0x64>
 8002016:	6802      	ldr	r2, [r0, #0]
 8002018:	6893      	ldr	r3, [r2, #8]
 800201a:	491c      	ldr	r1, [pc, #112]	; (800208c <UART_AdvFeatureConfig+0xcc>)
 800201c:	400b      	ands	r3, r1
 800201e:	6b81      	ldr	r1, [r0, #56]	; 0x38
 8002020:	430b      	orrs	r3, r1
 8002022:	6093      	str	r3, [r2, #8]
 8002024:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8002026:	069b      	lsls	r3, r3, #26
 8002028:	d506      	bpl.n	8002038 <UART_AdvFeatureConfig+0x78>
 800202a:	6802      	ldr	r2, [r0, #0]
 800202c:	6893      	ldr	r3, [r2, #8]
 800202e:	4918      	ldr	r1, [pc, #96]	; (8002090 <UART_AdvFeatureConfig+0xd0>)
 8002030:	400b      	ands	r3, r1
 8002032:	6bc1      	ldr	r1, [r0, #60]	; 0x3c
 8002034:	430b      	orrs	r3, r1
 8002036:	6093      	str	r3, [r2, #8]
 8002038:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800203a:	065b      	lsls	r3, r3, #25
 800203c:	d50b      	bpl.n	8002056 <UART_AdvFeatureConfig+0x96>
 800203e:	6802      	ldr	r2, [r0, #0]
 8002040:	6853      	ldr	r3, [r2, #4]
 8002042:	4914      	ldr	r1, [pc, #80]	; (8002094 <UART_AdvFeatureConfig+0xd4>)
 8002044:	400b      	ands	r3, r1
 8002046:	6c01      	ldr	r1, [r0, #64]	; 0x40
 8002048:	430b      	orrs	r3, r1
 800204a:	6053      	str	r3, [r2, #4]
 800204c:	2380      	movs	r3, #128	; 0x80
 800204e:	035b      	lsls	r3, r3, #13
 8002050:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8002052:	429a      	cmp	r2, r3
 8002054:	d00a      	beq.n	800206c <UART_AdvFeatureConfig+0xac>
 8002056:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8002058:	061b      	lsls	r3, r3, #24
 800205a:	d506      	bpl.n	800206a <UART_AdvFeatureConfig+0xaa>
 800205c:	6802      	ldr	r2, [r0, #0]
 800205e:	6853      	ldr	r3, [r2, #4]
 8002060:	490d      	ldr	r1, [pc, #52]	; (8002098 <UART_AdvFeatureConfig+0xd8>)
 8002062:	400b      	ands	r3, r1
 8002064:	6c81      	ldr	r1, [r0, #72]	; 0x48
 8002066:	430b      	orrs	r3, r1
 8002068:	6053      	str	r3, [r2, #4]
 800206a:	4770      	bx	lr
 800206c:	6802      	ldr	r2, [r0, #0]
 800206e:	6853      	ldr	r3, [r2, #4]
 8002070:	490a      	ldr	r1, [pc, #40]	; (800209c <UART_AdvFeatureConfig+0xdc>)
 8002072:	400b      	ands	r3, r1
 8002074:	6c41      	ldr	r1, [r0, #68]	; 0x44
 8002076:	430b      	orrs	r3, r1
 8002078:	6053      	str	r3, [r2, #4]
 800207a:	e7ec      	b.n	8002056 <UART_AdvFeatureConfig+0x96>
 800207c:	fffdffff 	.word	0xfffdffff
 8002080:	fffeffff 	.word	0xfffeffff
 8002084:	fffbffff 	.word	0xfffbffff
 8002088:	ffff7fff 	.word	0xffff7fff
 800208c:	ffffefff 	.word	0xffffefff
 8002090:	ffffdfff 	.word	0xffffdfff
 8002094:	ffefffff 	.word	0xffefffff
 8002098:	fff7ffff 	.word	0xfff7ffff
 800209c:	ff9fffff 	.word	0xff9fffff

080020a0 <UART_WaitOnFlagUntilTimeout>:
 80020a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80020a2:	46c6      	mov	lr, r8
 80020a4:	b500      	push	{lr}
 80020a6:	0005      	movs	r5, r0
 80020a8:	000c      	movs	r4, r1
 80020aa:	0017      	movs	r7, r2
 80020ac:	4698      	mov	r8, r3
 80020ae:	9e06      	ldr	r6, [sp, #24]
 80020b0:	682b      	ldr	r3, [r5, #0]
 80020b2:	69db      	ldr	r3, [r3, #28]
 80020b4:	4023      	ands	r3, r4
 80020b6:	1b1b      	subs	r3, r3, r4
 80020b8:	425a      	negs	r2, r3
 80020ba:	4153      	adcs	r3, r2
 80020bc:	42bb      	cmp	r3, r7
 80020be:	d13a      	bne.n	8002136 <UART_WaitOnFlagUntilTimeout+0x96>
 80020c0:	1c73      	adds	r3, r6, #1
 80020c2:	d0f5      	beq.n	80020b0 <UART_WaitOnFlagUntilTimeout+0x10>
 80020c4:	f7fe f8ee 	bl	80002a4 <HAL_GetTick>
 80020c8:	4643      	mov	r3, r8
 80020ca:	1ac0      	subs	r0, r0, r3
 80020cc:	42b0      	cmp	r0, r6
 80020ce:	d81f      	bhi.n	8002110 <UART_WaitOnFlagUntilTimeout+0x70>
 80020d0:	2e00      	cmp	r6, #0
 80020d2:	d01d      	beq.n	8002110 <UART_WaitOnFlagUntilTimeout+0x70>
 80020d4:	682b      	ldr	r3, [r5, #0]
 80020d6:	681a      	ldr	r2, [r3, #0]
 80020d8:	0752      	lsls	r2, r2, #29
 80020da:	d5e9      	bpl.n	80020b0 <UART_WaitOnFlagUntilTimeout+0x10>
 80020dc:	69da      	ldr	r2, [r3, #28]
 80020de:	0512      	lsls	r2, r2, #20
 80020e0:	d5e6      	bpl.n	80020b0 <UART_WaitOnFlagUntilTimeout+0x10>
 80020e2:	2280      	movs	r2, #128	; 0x80
 80020e4:	0112      	lsls	r2, r2, #4
 80020e6:	621a      	str	r2, [r3, #32]
 80020e8:	682a      	ldr	r2, [r5, #0]
 80020ea:	6813      	ldr	r3, [r2, #0]
 80020ec:	4914      	ldr	r1, [pc, #80]	; (8002140 <UART_WaitOnFlagUntilTimeout+0xa0>)
 80020ee:	400b      	ands	r3, r1
 80020f0:	6013      	str	r3, [r2, #0]
 80020f2:	682a      	ldr	r2, [r5, #0]
 80020f4:	6893      	ldr	r3, [r2, #8]
 80020f6:	31a3      	adds	r1, #163	; 0xa3
 80020f8:	31ff      	adds	r1, #255	; 0xff
 80020fa:	438b      	bics	r3, r1
 80020fc:	6093      	str	r3, [r2, #8]
 80020fe:	2320      	movs	r3, #32
 8002100:	676b      	str	r3, [r5, #116]	; 0x74
 8002102:	67ab      	str	r3, [r5, #120]	; 0x78
 8002104:	67eb      	str	r3, [r5, #124]	; 0x7c
 8002106:	3350      	adds	r3, #80	; 0x50
 8002108:	2200      	movs	r2, #0
 800210a:	54ea      	strb	r2, [r5, r3]
 800210c:	2003      	movs	r0, #3
 800210e:	e013      	b.n	8002138 <UART_WaitOnFlagUntilTimeout+0x98>
 8002110:	682a      	ldr	r2, [r5, #0]
 8002112:	6813      	ldr	r3, [r2, #0]
 8002114:	490a      	ldr	r1, [pc, #40]	; (8002140 <UART_WaitOnFlagUntilTimeout+0xa0>)
 8002116:	400b      	ands	r3, r1
 8002118:	6013      	str	r3, [r2, #0]
 800211a:	682a      	ldr	r2, [r5, #0]
 800211c:	6893      	ldr	r3, [r2, #8]
 800211e:	31a3      	adds	r1, #163	; 0xa3
 8002120:	31ff      	adds	r1, #255	; 0xff
 8002122:	438b      	bics	r3, r1
 8002124:	6093      	str	r3, [r2, #8]
 8002126:	2320      	movs	r3, #32
 8002128:	676b      	str	r3, [r5, #116]	; 0x74
 800212a:	67ab      	str	r3, [r5, #120]	; 0x78
 800212c:	3350      	adds	r3, #80	; 0x50
 800212e:	2200      	movs	r2, #0
 8002130:	54ea      	strb	r2, [r5, r3]
 8002132:	2003      	movs	r0, #3
 8002134:	e000      	b.n	8002138 <UART_WaitOnFlagUntilTimeout+0x98>
 8002136:	2000      	movs	r0, #0
 8002138:	bc04      	pop	{r2}
 800213a:	4690      	mov	r8, r2
 800213c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800213e:	46c0      	nop			; (mov r8, r8)
 8002140:	fffffe5f 	.word	0xfffffe5f

08002144 <UART_CheckIdleState>:
 8002144:	b530      	push	{r4, r5, lr}
 8002146:	b083      	sub	sp, #12
 8002148:	0004      	movs	r4, r0
 800214a:	2300      	movs	r3, #0
 800214c:	67c3      	str	r3, [r0, #124]	; 0x7c
 800214e:	f7fe f8a9 	bl	80002a4 <HAL_GetTick>
 8002152:	0005      	movs	r5, r0
 8002154:	6823      	ldr	r3, [r4, #0]
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	071b      	lsls	r3, r3, #28
 800215a:	d40c      	bmi.n	8002176 <UART_CheckIdleState+0x32>
 800215c:	6823      	ldr	r3, [r4, #0]
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	075b      	lsls	r3, r3, #29
 8002162:	d415      	bmi.n	8002190 <UART_CheckIdleState+0x4c>
 8002164:	2320      	movs	r3, #32
 8002166:	6763      	str	r3, [r4, #116]	; 0x74
 8002168:	67a3      	str	r3, [r4, #120]	; 0x78
 800216a:	3350      	adds	r3, #80	; 0x50
 800216c:	2200      	movs	r2, #0
 800216e:	54e2      	strb	r2, [r4, r3]
 8002170:	2000      	movs	r0, #0
 8002172:	b003      	add	sp, #12
 8002174:	bd30      	pop	{r4, r5, pc}
 8002176:	2180      	movs	r1, #128	; 0x80
 8002178:	4b0c      	ldr	r3, [pc, #48]	; (80021ac <UART_CheckIdleState+0x68>)
 800217a:	9300      	str	r3, [sp, #0]
 800217c:	0003      	movs	r3, r0
 800217e:	2200      	movs	r2, #0
 8002180:	0389      	lsls	r1, r1, #14
 8002182:	0020      	movs	r0, r4
 8002184:	f7ff ff8c 	bl	80020a0 <UART_WaitOnFlagUntilTimeout>
 8002188:	2800      	cmp	r0, #0
 800218a:	d0e7      	beq.n	800215c <UART_CheckIdleState+0x18>
 800218c:	2003      	movs	r0, #3
 800218e:	e7f0      	b.n	8002172 <UART_CheckIdleState+0x2e>
 8002190:	2180      	movs	r1, #128	; 0x80
 8002192:	4b06      	ldr	r3, [pc, #24]	; (80021ac <UART_CheckIdleState+0x68>)
 8002194:	9300      	str	r3, [sp, #0]
 8002196:	002b      	movs	r3, r5
 8002198:	2200      	movs	r2, #0
 800219a:	03c9      	lsls	r1, r1, #15
 800219c:	0020      	movs	r0, r4
 800219e:	f7ff ff7f 	bl	80020a0 <UART_WaitOnFlagUntilTimeout>
 80021a2:	2800      	cmp	r0, #0
 80021a4:	d0de      	beq.n	8002164 <UART_CheckIdleState+0x20>
 80021a6:	2003      	movs	r0, #3
 80021a8:	e7e3      	b.n	8002172 <UART_CheckIdleState+0x2e>
 80021aa:	46c0      	nop			; (mov r8, r8)
 80021ac:	01ffffff 	.word	0x01ffffff

080021b0 <HAL_RS485Ex_Init>:
 80021b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80021b2:	0004      	movs	r4, r0
 80021b4:	000f      	movs	r7, r1
 80021b6:	0016      	movs	r6, r2
 80021b8:	001d      	movs	r5, r3
 80021ba:	2800      	cmp	r0, #0
 80021bc:	d039      	beq.n	8002232 <HAL_RS485Ex_Init+0x82>
 80021be:	6f43      	ldr	r3, [r0, #116]	; 0x74
 80021c0:	2b00      	cmp	r3, #0
 80021c2:	d02c      	beq.n	800221e <HAL_RS485Ex_Init+0x6e>
 80021c4:	2324      	movs	r3, #36	; 0x24
 80021c6:	6763      	str	r3, [r4, #116]	; 0x74
 80021c8:	6822      	ldr	r2, [r4, #0]
 80021ca:	6813      	ldr	r3, [r2, #0]
 80021cc:	2101      	movs	r1, #1
 80021ce:	438b      	bics	r3, r1
 80021d0:	6013      	str	r3, [r2, #0]
 80021d2:	0020      	movs	r0, r4
 80021d4:	f7ff fe02 	bl	8001ddc <UART_SetConfig>
 80021d8:	2801      	cmp	r0, #1
 80021da:	d01f      	beq.n	800221c <HAL_RS485Ex_Init+0x6c>
 80021dc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d123      	bne.n	800222a <HAL_RS485Ex_Init+0x7a>
 80021e2:	6822      	ldr	r2, [r4, #0]
 80021e4:	6891      	ldr	r1, [r2, #8]
 80021e6:	2380      	movs	r3, #128	; 0x80
 80021e8:	01db      	lsls	r3, r3, #7
 80021ea:	430b      	orrs	r3, r1
 80021ec:	6093      	str	r3, [r2, #8]
 80021ee:	6822      	ldr	r2, [r4, #0]
 80021f0:	6893      	ldr	r3, [r2, #8]
 80021f2:	4911      	ldr	r1, [pc, #68]	; (8002238 <HAL_RS485Ex_Init+0x88>)
 80021f4:	400b      	ands	r3, r1
 80021f6:	431f      	orrs	r7, r3
 80021f8:	6097      	str	r7, [r2, #8]
 80021fa:	0576      	lsls	r6, r6, #21
 80021fc:	042d      	lsls	r5, r5, #16
 80021fe:	432e      	orrs	r6, r5
 8002200:	6823      	ldr	r3, [r4, #0]
 8002202:	681d      	ldr	r5, [r3, #0]
 8002204:	4a0d      	ldr	r2, [pc, #52]	; (800223c <HAL_RS485Ex_Init+0x8c>)
 8002206:	4015      	ands	r5, r2
 8002208:	432e      	orrs	r6, r5
 800220a:	601e      	str	r6, [r3, #0]
 800220c:	6822      	ldr	r2, [r4, #0]
 800220e:	6813      	ldr	r3, [r2, #0]
 8002210:	2101      	movs	r1, #1
 8002212:	430b      	orrs	r3, r1
 8002214:	6013      	str	r3, [r2, #0]
 8002216:	0020      	movs	r0, r4
 8002218:	f7ff ff94 	bl	8002144 <UART_CheckIdleState>
 800221c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800221e:	3370      	adds	r3, #112	; 0x70
 8002220:	2200      	movs	r2, #0
 8002222:	54c2      	strb	r2, [r0, r3]
 8002224:	f001 fc0a 	bl	8003a3c <HAL_UART_MspInit>
 8002228:	e7cc      	b.n	80021c4 <HAL_RS485Ex_Init+0x14>
 800222a:	0020      	movs	r0, r4
 800222c:	f7ff fec8 	bl	8001fc0 <UART_AdvFeatureConfig>
 8002230:	e7d7      	b.n	80021e2 <HAL_RS485Ex_Init+0x32>
 8002232:	2001      	movs	r0, #1
 8002234:	e7f2      	b.n	800221c <HAL_RS485Ex_Init+0x6c>
 8002236:	46c0      	nop			; (mov r8, r8)
 8002238:	ffff7fff 	.word	0xffff7fff
 800223c:	fc00ffff 	.word	0xfc00ffff

08002240 <tx1_en>:
MB_sType modbus1;
MB_sType modbus3;
/* Private function prototypes -----------------------------------------------*/
/* Exported functions --------------------------------------------------------*/
void tx1_en(void)
{
 8002240:	b570      	push	{r4, r5, r6, lr}
	HAL_GPIO_WritePin( GPIOA, GPIO_PIN_12, GPIO_PIN_SET );
 8002242:	2580      	movs	r5, #128	; 0x80
 8002244:	016d      	lsls	r5, r5, #5
 8002246:	2490      	movs	r4, #144	; 0x90
 8002248:	05e4      	lsls	r4, r4, #23
 800224a:	2201      	movs	r2, #1
 800224c:	0029      	movs	r1, r5
 800224e:	0020      	movs	r0, r4
 8002250:	f7fe f967 	bl	8000522 <HAL_GPIO_WritePin>
	HAL_UART_Transmit_IT(&huart1, modbus1.RspBuf, modbus1.ByteRsp);
 8002254:	4905      	ldr	r1, [pc, #20]	; (800226c <tx1_en+0x2c>)
 8002256:	884a      	ldrh	r2, [r1, #2]
 8002258:	31ff      	adds	r1, #255	; 0xff
 800225a:	4805      	ldr	r0, [pc, #20]	; (8002270 <tx1_en+0x30>)
 800225c:	f7ff fca2 	bl	8001ba4 <HAL_UART_Transmit_IT>
	HAL_GPIO_WritePin( GPIOA, GPIO_PIN_12, GPIO_PIN_RESET );
 8002260:	2200      	movs	r2, #0
 8002262:	0029      	movs	r1, r5
 8002264:	0020      	movs	r0, r4
 8002266:	f7fe f95c 	bl	8000522 <HAL_GPIO_WritePin>
}
 800226a:	bd70      	pop	{r4, r5, r6, pc}
 800226c:	20000280 	.word	0x20000280
 8002270:	200007e8 	.word	0x200007e8

08002274 <rx1_en>:
void rx1_en(void)
{
 8002274:	b510      	push	{r4, lr}
	HAL_GPIO_WritePin( GPIOA, GPIO_PIN_12, GPIO_PIN_RESET );
 8002276:	2180      	movs	r1, #128	; 0x80
 8002278:	2090      	movs	r0, #144	; 0x90
 800227a:	2200      	movs	r2, #0
 800227c:	0149      	lsls	r1, r1, #5
 800227e:	05c0      	lsls	r0, r0, #23
 8002280:	f7fe f94f 	bl	8000522 <HAL_GPIO_WritePin>
}
 8002284:	bd10      	pop	{r4, pc}

08002286 <register_address_rw>:

uint8_t register_address_rw(int16_t  address,uint16_t index_start,uint16_t length)
{
	if(address >= index_start && address  < index_start+length )
 8002286:	4288      	cmp	r0, r1
 8002288:	db04      	blt.n	8002294 <register_address_rw+0xe>
 800228a:	1852      	adds	r2, r2, r1
 800228c:	4290      	cmp	r0, r2
 800228e:	db03      	blt.n	8002298 <register_address_rw+0x12>
	{
		return 1;
	}
	return 0;
 8002290:	2000      	movs	r0, #0
 8002292:	e000      	b.n	8002296 <register_address_rw+0x10>
 8002294:	2000      	movs	r0, #0
}
 8002296:	4770      	bx	lr
		return 1;
 8002298:	2001      	movs	r0, #1
 800229a:	e7fc      	b.n	8002296 <register_address_rw+0x10>

0800229c <MODBUS_Nregs_Support_Write>:

uint8_t MODBUS_Nregs_Support_Write(int16_t  address,uint16_t index_start, uint16_t n, uint16_t length)
{
	if(address >= index_start && address+n  < index_start+length )
 800229c:	4288      	cmp	r0, r1
 800229e:	db05      	blt.n	80022ac <MODBUS_Nregs_Support_Write+0x10>
 80022a0:	1812      	adds	r2, r2, r0
 80022a2:	185b      	adds	r3, r3, r1
 80022a4:	429a      	cmp	r2, r3
 80022a6:	db03      	blt.n	80022b0 <MODBUS_Nregs_Support_Write+0x14>
	{
		return 1;
	}
	return 0;
 80022a8:	2000      	movs	r0, #0
 80022aa:	e000      	b.n	80022ae <MODBUS_Nregs_Support_Write+0x12>
 80022ac:	2000      	movs	r0, #0
}
 80022ae:	4770      	bx	lr
		return 1;
 80022b0:	2001      	movs	r0, #1
 80022b2:	e7fc      	b.n	80022ae <MODBUS_Nregs_Support_Write+0x12>

080022b4 <register_value_in_range>:
//		case REG_CH6_DP:
//			boolean=(value>=0&&value<=(analog_input(Value[5].INP) ? 3 : thermocouple_input_nodp(Value[5].INP) ? 0:1)) ? 1 : 0;
//			break;

		default:
			boolean = (value > (mb_table[address].max) || value < (mb_table[address].min)) ? 0 : 1;
 80022b4:	00c0      	lsls	r0, r0, #3
 80022b6:	1812      	adds	r2, r2, r0
 80022b8:	2004      	movs	r0, #4
 80022ba:	5e13      	ldrsh	r3, [r2, r0]
 80022bc:	428b      	cmp	r3, r1
 80022be:	db05      	blt.n	80022cc <register_value_in_range+0x18>
 80022c0:	2306      	movs	r3, #6
 80022c2:	5ed3      	ldrsh	r3, [r2, r3]
 80022c4:	428b      	cmp	r3, r1
 80022c6:	dd04      	ble.n	80022d2 <register_value_in_range+0x1e>
 80022c8:	2000      	movs	r0, #0
 80022ca:	e000      	b.n	80022ce <register_value_in_range+0x1a>
 80022cc:	2000      	movs	r0, #0
 80022ce:	b2c0      	uxtb	r0, r0
			break;
	}
	return boolean;
}
 80022d0:	4770      	bx	lr
			boolean = (value > (mb_table[address].max) || value < (mb_table[address].min)) ? 0 : 1;
 80022d2:	2001      	movs	r0, #1
 80022d4:	e7fb      	b.n	80022ce <register_value_in_range+0x1a>
	...

080022d8 <crc16>:
void crc16(MB_sType *modbus, uint8_t *dptr, uint8_t n)
{
 80022d8:	b570      	push	{r4, r5, r6, lr}
	uint8_t i, j;
	modbus->CrcHi = modbus->CrcLo = 0xFF;
 80022da:	23ff      	movs	r3, #255	; 0xff
 80022dc:	71c3      	strb	r3, [r0, #7]
 80022de:	7183      	strb	r3, [r0, #6]
	for (i = 0; i < n; i++, dptr++)
 80022e0:	2300      	movs	r3, #0
 80022e2:	e00d      	b.n	8002300 <crc16+0x28>
	{
		j = modbus->CrcHi ^ *dptr;
 80022e4:	7984      	ldrb	r4, [r0, #6]
 80022e6:	780d      	ldrb	r5, [r1, #0]
 80022e8:	406c      	eors	r4, r5
		modbus->CrcHi = modbus->CrcLo ^ CRCTableHigh[j];
 80022ea:	79c5      	ldrb	r5, [r0, #7]
 80022ec:	4e06      	ldr	r6, [pc, #24]	; (8002308 <crc16+0x30>)
 80022ee:	5d36      	ldrb	r6, [r6, r4]
 80022f0:	4075      	eors	r5, r6
 80022f2:	7185      	strb	r5, [r0, #6]
		modbus->CrcLo = CRCTableLow[j];
 80022f4:	4d05      	ldr	r5, [pc, #20]	; (800230c <crc16+0x34>)
 80022f6:	5d2c      	ldrb	r4, [r5, r4]
 80022f8:	71c4      	strb	r4, [r0, #7]
	for (i = 0; i < n; i++, dptr++)
 80022fa:	3301      	adds	r3, #1
 80022fc:	b2db      	uxtb	r3, r3
 80022fe:	3101      	adds	r1, #1
 8002300:	4293      	cmp	r3, r2
 8002302:	d3ef      	bcc.n	80022e4 <crc16+0xc>
	}
}
 8002304:	bd70      	pop	{r4, r5, r6, pc}
 8002306:	46c0      	nop			; (mov r8, r8)
 8002308:	08003ddc 	.word	0x08003ddc
 800230c:	08003cdc 	.word	0x08003cdc

08002310 <exeption_response>:
void exeption_response(uint8_t slave_address, uint8_t ExeptionCode,
		MB_sType *modbus, void (*tx_enable)(void))
{
 8002310:	b570      	push	{r4, r5, r6, lr}
 8002312:	0014      	movs	r4, r2
 8002314:	001d      	movs	r5, r3
	uint16_t i;

	if (modbus->ReqBuf[0] == slave_address)
 8002316:	7a13      	ldrb	r3, [r2, #8]
 8002318:	4283      	cmp	r3, r0
 800231a:	d000      	beq.n	800231e <exeption_response+0xe>
		modbus->FTX = 1;
		modbus->TxTimeOut = 0;

		tx_enable();
	}
}
 800231c:	bd70      	pop	{r4, r5, r6, pc}
		modbus->RspBuf[0] = modbus->ReqBuf[0];
 800231e:	22ff      	movs	r2, #255	; 0xff
 8002320:	54a3      	strb	r3, [r4, r2]
		modbus->RspBuf[1] = 0x80 | modbus->ReqBuf[1];
 8002322:	7a62      	ldrb	r2, [r4, #9]
 8002324:	2380      	movs	r3, #128	; 0x80
 8002326:	425b      	negs	r3, r3
 8002328:	4313      	orrs	r3, r2
 800232a:	2280      	movs	r2, #128	; 0x80
 800232c:	0052      	lsls	r2, r2, #1
 800232e:	54a3      	strb	r3, [r4, r2]
		modbus->RspBuf[2] = ExeptionCode;
 8002330:	2302      	movs	r3, #2
 8002332:	33ff      	adds	r3, #255	; 0xff
 8002334:	54e1      	strb	r1, [r4, r3]
		crc16(modbus, modbus->RspBuf, 3);
 8002336:	0026      	movs	r6, r4
 8002338:	36ff      	adds	r6, #255	; 0xff
 800233a:	3afd      	subs	r2, #253	; 0xfd
 800233c:	0031      	movs	r1, r6
 800233e:	0020      	movs	r0, r4
 8002340:	f7ff ffca 	bl	80022d8 <crc16>
		modbus->RspBuf[3] = modbus->CrcHi;
 8002344:	79a2      	ldrb	r2, [r4, #6]
 8002346:	2381      	movs	r3, #129	; 0x81
 8002348:	005b      	lsls	r3, r3, #1
 800234a:	54e2      	strb	r2, [r4, r3]
		modbus->RspBuf[4] = modbus->CrcLo;
 800234c:	79e2      	ldrb	r2, [r4, #7]
 800234e:	2304      	movs	r3, #4
 8002350:	33ff      	adds	r3, #255	; 0xff
 8002352:	54e2      	strb	r2, [r4, r3]
		for (i = 0; i < 8; i++)
 8002354:	2300      	movs	r3, #0
 8002356:	e004      	b.n	8002362 <exeption_response+0x52>
			modbus->ReqBuf[i] = 0x00;
 8002358:	18e2      	adds	r2, r4, r3
 800235a:	2100      	movs	r1, #0
 800235c:	7211      	strb	r1, [r2, #8]
		for (i = 0; i < 8; i++)
 800235e:	3301      	adds	r3, #1
 8002360:	b29b      	uxth	r3, r3
 8002362:	2b07      	cmp	r3, #7
 8002364:	d9f8      	bls.n	8002358 <exeption_response+0x48>
		modbus->ByteReq = 0;
 8002366:	2300      	movs	r3, #0
 8002368:	8023      	strh	r3, [r4, #0]
		modbus->MBdptr = modbus->RspBuf;
 800236a:	238c      	movs	r3, #140	; 0x8c
 800236c:	009b      	lsls	r3, r3, #2
 800236e:	50e6      	str	r6, [r4, r3]
		modbus->ByteRsp = 5;
 8002370:	2305      	movs	r3, #5
 8002372:	8063      	strh	r3, [r4, #2]
		modbus->FTX = 1;
 8002374:	4b03      	ldr	r3, [pc, #12]	; (8002384 <exeption_response+0x74>)
 8002376:	2201      	movs	r2, #1
 8002378:	54e2      	strb	r2, [r4, r3]
		modbus->TxTimeOut = 0;
 800237a:	2300      	movs	r3, #0
 800237c:	7163      	strb	r3, [r4, #5]
		tx_enable();
 800237e:	47a8      	blx	r5
}
 8002380:	e7cc      	b.n	800231c <exeption_response+0xc>
 8002382:	46c0      	nop			; (mov r8, r8)
 8002384:	0000022b 	.word	0x0000022b

08002388 <loop_back_diagnostic>:
void loop_back_diagnostic(uint8_t slave_address, MB_sType *modbus,
		void (*tx_enable)(void))
{
 8002388:	b570      	push	{r4, r5, r6, lr}
 800238a:	000c      	movs	r4, r1
 800238c:	0015      	movs	r5, r2
	uint8_t i;
	if (modbus->ReqBuf[0] != slave_address)
 800238e:	7a0b      	ldrb	r3, [r1, #8]
 8002390:	4283      	cmp	r3, r0
 8002392:	d000      	beq.n	8002396 <loop_back_diagnostic+0xe>
	modbus->ByteRsp = 8;
	modbus->FTX = 1;
	modbus->TxTimeOut = 0;
	tx_enable();

}
 8002394:	bd70      	pop	{r4, r5, r6, pc}
	if (modbus->ByteReq != 8)
 8002396:	880b      	ldrh	r3, [r1, #0]
 8002398:	2b08      	cmp	r3, #8
 800239a:	d1fb      	bne.n	8002394 <loop_back_diagnostic+0xc>
	crc16(modbus, modbus->ReqBuf, 6);
 800239c:	3108      	adds	r1, #8
 800239e:	2206      	movs	r2, #6
 80023a0:	0020      	movs	r0, r4
 80023a2:	f7ff ff99 	bl	80022d8 <crc16>
			|| modbus->CrcLo != modbus->ReqBuf[7])
 80023a6:	88e2      	ldrh	r2, [r4, #6]
 80023a8:	89e3      	ldrh	r3, [r4, #14]
	if (modbus->CrcHi != modbus->ReqBuf[6]
 80023aa:	429a      	cmp	r2, r3
 80023ac:	d1f2      	bne.n	8002394 <loop_back_diagnostic+0xc>
	for (i = 0; i < modbus->ByteReq; i++)
 80023ae:	2300      	movs	r3, #0
 80023b0:	e005      	b.n	80023be <loop_back_diagnostic+0x36>
		modbus->RspBuf[i] = modbus->ReqBuf[i];
 80023b2:	18e2      	adds	r2, r4, r3
 80023b4:	7a11      	ldrb	r1, [r2, #8]
 80023b6:	32ff      	adds	r2, #255	; 0xff
 80023b8:	7011      	strb	r1, [r2, #0]
	for (i = 0; i < modbus->ByteReq; i++)
 80023ba:	3301      	adds	r3, #1
 80023bc:	b2db      	uxtb	r3, r3
 80023be:	b29a      	uxth	r2, r3
 80023c0:	8821      	ldrh	r1, [r4, #0]
 80023c2:	428a      	cmp	r2, r1
 80023c4:	d3f5      	bcc.n	80023b2 <loop_back_diagnostic+0x2a>
	for (i = 0; i < 8; i++)
 80023c6:	2300      	movs	r3, #0
 80023c8:	e004      	b.n	80023d4 <loop_back_diagnostic+0x4c>
		modbus->ReqBuf[i] = 0x00;
 80023ca:	18e2      	adds	r2, r4, r3
 80023cc:	2100      	movs	r1, #0
 80023ce:	7211      	strb	r1, [r2, #8]
	for (i = 0; i < 8; i++)
 80023d0:	3301      	adds	r3, #1
 80023d2:	b2db      	uxtb	r3, r3
 80023d4:	2b07      	cmp	r3, #7
 80023d6:	d9f8      	bls.n	80023ca <loop_back_diagnostic+0x42>
	modbus->MBdptr = modbus->RspBuf;
 80023d8:	0022      	movs	r2, r4
 80023da:	32ff      	adds	r2, #255	; 0xff
 80023dc:	238c      	movs	r3, #140	; 0x8c
 80023de:	009b      	lsls	r3, r3, #2
 80023e0:	50e2      	str	r2, [r4, r3]
	modbus->ByteRsp = 8;
 80023e2:	2308      	movs	r3, #8
 80023e4:	8063      	strh	r3, [r4, #2]
	modbus->FTX = 1;
 80023e6:	4b03      	ldr	r3, [pc, #12]	; (80023f4 <loop_back_diagnostic+0x6c>)
 80023e8:	2201      	movs	r2, #1
 80023ea:	54e2      	strb	r2, [r4, r3]
	modbus->TxTimeOut = 0;
 80023ec:	2300      	movs	r3, #0
 80023ee:	7163      	strb	r3, [r4, #5]
	tx_enable();
 80023f0:	47a8      	blx	r5
 80023f2:	e7cf      	b.n	8002394 <loop_back_diagnostic+0xc>
 80023f4:	0000022b 	.word	0x0000022b

080023f8 <preset_a_single_register>:
int address ;
void preset_a_single_register(uint8_t slave_address, MB_sType *modbus,void (*tx_enable)(void))
{
 80023f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80023fa:	46ce      	mov	lr, r9
 80023fc:	4647      	mov	r7, r8
 80023fe:	b580      	push	{r7, lr}
 8002400:	b083      	sub	sp, #12
 8002402:	0005      	movs	r5, r0
 8002404:	000c      	movs	r4, r1
 8002406:	0016      	movs	r6, r2

	uint16_t DATA_BUFFER;
	u16_Type REGISTER_ADDR, REGISTER_VALUE;
	uint8_t *dptr, i;

	if (modbus->ReqBuf[0] == slave_address) //<< slave address
 8002408:	7a0b      	ldrb	r3, [r1, #8]
 800240a:	4283      	cmp	r3, r0
 800240c:	d004      	beq.n	8002418 <preset_a_single_register+0x20>
				exeption_response(slave_address, ILLEGAL_DATA_ADDRESS, modbus,
						tx_enable);
			}
		}
	}
}
 800240e:	b003      	add	sp, #12
 8002410:	bc0c      	pop	{r2, r3}
 8002412:	4690      	mov	r8, r2
 8002414:	4699      	mov	r9, r3
 8002416:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (modbus->ByteReq != 8)
 8002418:	880b      	ldrh	r3, [r1, #0]
 800241a:	2b08      	cmp	r3, #8
 800241c:	d1f7      	bne.n	800240e <preset_a_single_register+0x16>
		crc16(modbus, modbus->ReqBuf, 6);
 800241e:	3108      	adds	r1, #8
 8002420:	2206      	movs	r2, #6
 8002422:	0020      	movs	r0, r4
 8002424:	f7ff ff58 	bl	80022d8 <crc16>
		if (modbus->CrcHi != modbus->ReqBuf[6]|| modbus->CrcLo != modbus->ReqBuf[7])
 8002428:	88e2      	ldrh	r2, [r4, #6]
 800242a:	89e3      	ldrh	r3, [r4, #14]
 800242c:	429a      	cmp	r2, r3
 800242e:	d1ee      	bne.n	800240e <preset_a_single_register+0x16>
		REGISTER_ADDR.H = modbus->ReqBuf[2];
 8002430:	7aa0      	ldrb	r0, [r4, #10]
		REGISTER_ADDR.L = modbus->ReqBuf[3];
 8002432:	7ae3      	ldrb	r3, [r4, #11]
 8002434:	0200      	lsls	r0, r0, #8
		if (register_address_rw(REGISTER_ADDR.Word,0,get_size_Table()))
 8002436:	4318      	orrs	r0, r3
 8002438:	4680      	mov	r8, r0
 800243a:	b207      	sxth	r7, r0
 800243c:	f000 fa52 	bl	80028e4 <get_size_Table>
 8002440:	0002      	movs	r2, r0
 8002442:	2100      	movs	r1, #0
 8002444:	0038      	movs	r0, r7
 8002446:	f7ff ff1e 	bl	8002286 <register_address_rw>
 800244a:	2800      	cmp	r0, #0
 800244c:	d054      	beq.n	80024f8 <preset_a_single_register+0x100>
			REGISTER_VALUE.H = modbus->ReqBuf[4];
 800244e:	7b22      	ldrb	r2, [r4, #12]
 8002450:	ab01      	add	r3, sp, #4
 8002452:	705a      	strb	r2, [r3, #1]
			REGISTER_VALUE.L = modbus->ReqBuf[5];
 8002454:	7b62      	ldrb	r2, [r4, #13]
 8002456:	701a      	strb	r2, [r3, #0]
			if (register_value_in_range(REGISTER_ADDR.Word,REGISTER_VALUE.Word,modbus_table_reg))
 8002458:	2200      	movs	r2, #0
 800245a:	5e9b      	ldrsh	r3, [r3, r2]
 800245c:	4699      	mov	r9, r3
 800245e:	4a2c      	ldr	r2, [pc, #176]	; (8002510 <preset_a_single_register+0x118>)
 8002460:	0019      	movs	r1, r3
 8002462:	0038      	movs	r0, r7
 8002464:	f7ff ff26 	bl	80022b4 <register_value_in_range>
 8002468:	2800      	cmp	r0, #0
 800246a:	d109      	bne.n	8002480 <preset_a_single_register+0x88>
				if (modbus->ReqBuf[0])
 800246c:	7a23      	ldrb	r3, [r4, #8]
 800246e:	2b00      	cmp	r3, #0
 8002470:	d0cd      	beq.n	800240e <preset_a_single_register+0x16>
					exeption_response(slave_address, ILLEGAL_DATA_VALUE, modbus,
 8002472:	0033      	movs	r3, r6
 8002474:	0022      	movs	r2, r4
 8002476:	2103      	movs	r1, #3
 8002478:	0028      	movs	r0, r5
 800247a:	f7ff ff49 	bl	8002310 <exeption_response>
 800247e:	e7c6      	b.n	800240e <preset_a_single_register+0x16>
				*(modbus_table_reg[REGISTER_ADDR.Word].add_register) = REGISTER_VALUE.Word;
 8002480:	4643      	mov	r3, r8
 8002482:	00da      	lsls	r2, r3, #3
 8002484:	4b22      	ldr	r3, [pc, #136]	; (8002510 <preset_a_single_register+0x118>)
 8002486:	58d3      	ldr	r3, [r2, r3]
 8002488:	464a      	mov	r2, r9
 800248a:	801a      	strh	r2, [r3, #0]
				Save_single_value(REGISTER_ADDR.Word-4,&(REGISTER_VALUE.Word));
 800248c:	4643      	mov	r3, r8
 800248e:	1f18      	subs	r0, r3, #4
 8002490:	a901      	add	r1, sp, #4
 8002492:	f000 fe23 	bl	80030dc <Save_single_value>
				if (modbus->ReqBuf[0])
 8002496:	7a23      	ldrb	r3, [r4, #8]
 8002498:	2b00      	cmp	r3, #0
 800249a:	d0b8      	beq.n	800240e <preset_a_single_register+0x16>
					modbus->ByteRsp = 0;
 800249c:	2300      	movs	r3, #0
 800249e:	8063      	strh	r3, [r4, #2]
					for (i = 0; i < 6; i++)
 80024a0:	2200      	movs	r2, #0
 80024a2:	e009      	b.n	80024b8 <preset_a_single_register+0xc0>
						modbus->RspBuf[modbus->ByteRsp++] = modbus->ReqBuf[i];
 80024a4:	8863      	ldrh	r3, [r4, #2]
 80024a6:	1c59      	adds	r1, r3, #1
 80024a8:	8061      	strh	r1, [r4, #2]
 80024aa:	18a1      	adds	r1, r4, r2
 80024ac:	7a09      	ldrb	r1, [r1, #8]
 80024ae:	18e3      	adds	r3, r4, r3
 80024b0:	33ff      	adds	r3, #255	; 0xff
 80024b2:	7019      	strb	r1, [r3, #0]
					for (i = 0; i < 6; i++)
 80024b4:	3201      	adds	r2, #1
 80024b6:	b2d2      	uxtb	r2, r2
 80024b8:	2a05      	cmp	r2, #5
 80024ba:	d9f3      	bls.n	80024a4 <preset_a_single_register+0xac>
					crc16(modbus, modbus->RspBuf, modbus->ByteRsp);
 80024bc:	0025      	movs	r5, r4
 80024be:	35ff      	adds	r5, #255	; 0xff
 80024c0:	78a2      	ldrb	r2, [r4, #2]
 80024c2:	0029      	movs	r1, r5
 80024c4:	0020      	movs	r0, r4
 80024c6:	f7ff ff07 	bl	80022d8 <crc16>
					modbus->RspBuf[modbus->ByteRsp++] = modbus->CrcHi;
 80024ca:	8862      	ldrh	r2, [r4, #2]
 80024cc:	1c53      	adds	r3, r2, #1
 80024ce:	b29b      	uxth	r3, r3
 80024d0:	79a1      	ldrb	r1, [r4, #6]
 80024d2:	18a2      	adds	r2, r4, r2
 80024d4:	32ff      	adds	r2, #255	; 0xff
 80024d6:	7011      	strb	r1, [r2, #0]
					modbus->RspBuf[modbus->ByteRsp++] = modbus->CrcLo;
 80024d8:	1c5a      	adds	r2, r3, #1
 80024da:	8062      	strh	r2, [r4, #2]
 80024dc:	79e2      	ldrb	r2, [r4, #7]
 80024de:	18e3      	adds	r3, r4, r3
 80024e0:	33ff      	adds	r3, #255	; 0xff
 80024e2:	701a      	strb	r2, [r3, #0]
					modbus->MBdptr = modbus->RspBuf;
 80024e4:	238c      	movs	r3, #140	; 0x8c
 80024e6:	009b      	lsls	r3, r3, #2
 80024e8:	50e5      	str	r5, [r4, r3]
					modbus->FTX = 1;
 80024ea:	4b0a      	ldr	r3, [pc, #40]	; (8002514 <preset_a_single_register+0x11c>)
 80024ec:	2201      	movs	r2, #1
 80024ee:	54e2      	strb	r2, [r4, r3]
					modbus->TxTimeOut = 0;
 80024f0:	2300      	movs	r3, #0
 80024f2:	7163      	strb	r3, [r4, #5]
					tx_enable();
 80024f4:	47b0      	blx	r6
 80024f6:	e78a      	b.n	800240e <preset_a_single_register+0x16>
			if (modbus->ReqBuf[0])
 80024f8:	7a23      	ldrb	r3, [r4, #8]
 80024fa:	2b00      	cmp	r3, #0
 80024fc:	d100      	bne.n	8002500 <preset_a_single_register+0x108>
 80024fe:	e786      	b.n	800240e <preset_a_single_register+0x16>
				exeption_response(slave_address, ILLEGAL_DATA_ADDRESS, modbus,
 8002500:	0033      	movs	r3, r6
 8002502:	0022      	movs	r2, r4
 8002504:	2102      	movs	r1, #2
 8002506:	0028      	movs	r0, r5
 8002508:	f7ff ff02 	bl	8002310 <exeption_response>
 800250c:	e77f      	b.n	800240e <preset_a_single_register+0x16>
 800250e:	46c0      	nop			; (mov r8, r8)
 8002510:	2000000c 	.word	0x2000000c
 8002514:	0000022b 	.word	0x0000022b

08002518 <preset_multiple_register>:


void preset_multiple_register(uint8_t slave_address, MB_sType *modbus,void (*tx_enable)(void))
{
 8002518:	b5f0      	push	{r4, r5, r6, r7, lr}
 800251a:	46d6      	mov	lr, sl
 800251c:	464f      	mov	r7, r9
 800251e:	4646      	mov	r6, r8
 8002520:	b5c0      	push	{r6, r7, lr}
 8002522:	0005      	movs	r5, r0
 8002524:	000c      	movs	r4, r1
 8002526:	0016      	movs	r6, r2

	uint16_t DATA_BUFFER;
	i16_Type REGISTER_ADDR, REGISTER_VALUE, NDATA;
	uint8_t *dptr, i,j, BYTE_COUNT;

	if (modbus->ReqBuf[0] == slave_address) //<< slave address
 8002528:	7a0b      	ldrb	r3, [r1, #8]
 800252a:	4283      	cmp	r3, r0
 800252c:	d004      	beq.n	8002538 <preset_multiple_register+0x20>
				exeption_response(slave_address, ILLEGAL_DATA_ADDRESS, modbus,
						tx_enable);
			}
		}
	}
}
 800252e:	bc1c      	pop	{r2, r3, r4}
 8002530:	4690      	mov	r8, r2
 8002532:	4699      	mov	r9, r3
 8002534:	46a2      	mov	sl, r4
 8002536:	bdf0      	pop	{r4, r5, r6, r7, pc}
		if (modbus->ByteReq < 11)
 8002538:	880a      	ldrh	r2, [r1, #0]
 800253a:	2a0a      	cmp	r2, #10
 800253c:	d9f7      	bls.n	800252e <preset_multiple_register+0x16>
		crc16(modbus, modbus->ReqBuf, modbus->ByteReq-2);
 800253e:	3108      	adds	r1, #8
 8002540:	3a02      	subs	r2, #2
 8002542:	b2d2      	uxtb	r2, r2
 8002544:	0020      	movs	r0, r4
 8002546:	f7ff fec7 	bl	80022d8 <crc16>
		if (modbus->CrcHi != modbus->ReqBuf[modbus->ByteReq-2]|| modbus->CrcLo != modbus->ReqBuf[modbus->ByteReq-1])
 800254a:	79a1      	ldrb	r1, [r4, #6]
 800254c:	8822      	ldrh	r2, [r4, #0]
 800254e:	1e93      	subs	r3, r2, #2
 8002550:	18e3      	adds	r3, r4, r3
 8002552:	7a1b      	ldrb	r3, [r3, #8]
 8002554:	4299      	cmp	r1, r3
 8002556:	d1ea      	bne.n	800252e <preset_multiple_register+0x16>
 8002558:	79e1      	ldrb	r1, [r4, #7]
 800255a:	3a01      	subs	r2, #1
 800255c:	18a2      	adds	r2, r4, r2
 800255e:	7a13      	ldrb	r3, [r2, #8]
 8002560:	4299      	cmp	r1, r3
 8002562:	d1e4      	bne.n	800252e <preset_multiple_register+0x16>
		REGISTER_ADDR.H = modbus->ReqBuf[2];
 8002564:	7aa3      	ldrb	r3, [r4, #10]
 8002566:	021b      	lsls	r3, r3, #8
		REGISTER_ADDR.L = modbus->ReqBuf[3];
 8002568:	7ae2      	ldrb	r2, [r4, #11]
 800256a:	4313      	orrs	r3, r2
		NDATA.H = modbus->ReqBuf[4];
 800256c:	7b21      	ldrb	r1, [r4, #12]
		NDATA.L = modbus->ReqBuf[5];
 800256e:	7b62      	ldrb	r2, [r4, #13]
 8002570:	0209      	lsls	r1, r1, #8
 8002572:	430a      	orrs	r2, r1
		BYTE_COUNT = modbus->ReqBuf[6];
 8002574:	7ba1      	ldrb	r1, [r4, #14]
 8002576:	4689      	mov	r9, r1
		if (MODBUS_Nregs_Support_Write(REGISTER_ADDR.Word,0, NDATA.Word,get_size_Table()))
 8002578:	b21b      	sxth	r3, r3
 800257a:	4698      	mov	r8, r3
 800257c:	b213      	sxth	r3, r2
 800257e:	469a      	mov	sl, r3
 8002580:	f000 f9b0 	bl	80028e4 <get_size_Table>
 8002584:	0003      	movs	r3, r0
 8002586:	4652      	mov	r2, sl
 8002588:	b292      	uxth	r2, r2
 800258a:	2100      	movs	r1, #0
 800258c:	4640      	mov	r0, r8
 800258e:	f7ff fe85 	bl	800229c <MODBUS_Nregs_Support_Write>
 8002592:	2800      	cmp	r0, #0
 8002594:	d056      	beq.n	8002644 <preset_multiple_register+0x12c>
			FlagSetting = 1;
 8002596:	4b31      	ldr	r3, [pc, #196]	; (800265c <preset_multiple_register+0x144>)
 8002598:	2201      	movs	r2, #1
 800259a:	701a      	strb	r2, [r3, #0]
			for(i = 0,j=0; i < BYTE_COUNT; i=i+2, j++)
 800259c:	2100      	movs	r1, #0
 800259e:	2200      	movs	r2, #0
 80025a0:	e018      	b.n	80025d4 <preset_multiple_register+0xbc>
				REGISTER_VALUE.H = modbus->ReqBuf[i+7];
 80025a2:	1dd3      	adds	r3, r2, #7
 80025a4:	18e3      	adds	r3, r4, r3
 80025a6:	7a18      	ldrb	r0, [r3, #8]
 80025a8:	0200      	lsls	r0, r0, #8
 80025aa:	23ff      	movs	r3, #255	; 0xff
 80025ac:	401f      	ands	r7, r3
 80025ae:	4307      	orrs	r7, r0
				REGISTER_VALUE.L = modbus->ReqBuf[i+8];
 80025b0:	0013      	movs	r3, r2
 80025b2:	3308      	adds	r3, #8
 80025b4:	18e3      	adds	r3, r4, r3
 80025b6:	7a1b      	ldrb	r3, [r3, #8]
 80025b8:	20ff      	movs	r0, #255	; 0xff
 80025ba:	4387      	bics	r7, r0
 80025bc:	433b      	orrs	r3, r7
 80025be:	1c1f      	adds	r7, r3, #0
				*(modbus_table_reg[REGISTER_ADDR.Word+j].add_register) = REGISTER_VALUE.Word;
 80025c0:	4640      	mov	r0, r8
 80025c2:	1808      	adds	r0, r1, r0
 80025c4:	00c0      	lsls	r0, r0, #3
 80025c6:	4d26      	ldr	r5, [pc, #152]	; (8002660 <preset_multiple_register+0x148>)
 80025c8:	5940      	ldr	r0, [r0, r5]
 80025ca:	8003      	strh	r3, [r0, #0]
			for(i = 0,j=0; i < BYTE_COUNT; i=i+2, j++)
 80025cc:	3202      	adds	r2, #2
 80025ce:	b2d2      	uxtb	r2, r2
 80025d0:	3101      	adds	r1, #1
 80025d2:	b2c9      	uxtb	r1, r1
 80025d4:	454a      	cmp	r2, r9
 80025d6:	d3e4      	bcc.n	80025a2 <preset_multiple_register+0x8a>
			Save_single_value_byReg(REGISTER_ADDR.Word);
 80025d8:	4640      	mov	r0, r8
 80025da:	f000 fd86 	bl	80030ea <Save_single_value_byReg>
			FlagSetting = 0;
 80025de:	4b1f      	ldr	r3, [pc, #124]	; (800265c <preset_multiple_register+0x144>)
 80025e0:	2200      	movs	r2, #0
 80025e2:	701a      	strb	r2, [r3, #0]
			if (modbus->ReqBuf[0])
 80025e4:	7a23      	ldrb	r3, [r4, #8]
 80025e6:	2b00      	cmp	r3, #0
 80025e8:	d0a1      	beq.n	800252e <preset_multiple_register+0x16>
				modbus->ByteRsp = 0;
 80025ea:	2300      	movs	r3, #0
 80025ec:	8063      	strh	r3, [r4, #2]
				for (i = 0; i < 6; i++)
 80025ee:	e009      	b.n	8002604 <preset_multiple_register+0xec>
					modbus->RspBuf[modbus->ByteRsp++] = modbus->ReqBuf[i];
 80025f0:	8863      	ldrh	r3, [r4, #2]
 80025f2:	1c59      	adds	r1, r3, #1
 80025f4:	8061      	strh	r1, [r4, #2]
 80025f6:	18a1      	adds	r1, r4, r2
 80025f8:	7a09      	ldrb	r1, [r1, #8]
 80025fa:	18e3      	adds	r3, r4, r3
 80025fc:	33ff      	adds	r3, #255	; 0xff
 80025fe:	7019      	strb	r1, [r3, #0]
				for (i = 0; i < 6; i++)
 8002600:	3201      	adds	r2, #1
 8002602:	b2d2      	uxtb	r2, r2
 8002604:	2a05      	cmp	r2, #5
 8002606:	d9f3      	bls.n	80025f0 <preset_multiple_register+0xd8>
				crc16(modbus, modbus->RspBuf, modbus->ByteRsp);
 8002608:	0025      	movs	r5, r4
 800260a:	35ff      	adds	r5, #255	; 0xff
 800260c:	78a2      	ldrb	r2, [r4, #2]
 800260e:	0029      	movs	r1, r5
 8002610:	0020      	movs	r0, r4
 8002612:	f7ff fe61 	bl	80022d8 <crc16>
				modbus->RspBuf[modbus->ByteRsp++] = modbus->CrcHi;
 8002616:	8862      	ldrh	r2, [r4, #2]
 8002618:	1c53      	adds	r3, r2, #1
 800261a:	b29b      	uxth	r3, r3
 800261c:	79a1      	ldrb	r1, [r4, #6]
 800261e:	18a2      	adds	r2, r4, r2
 8002620:	32ff      	adds	r2, #255	; 0xff
 8002622:	7011      	strb	r1, [r2, #0]
				modbus->RspBuf[modbus->ByteRsp++] = modbus->CrcLo;
 8002624:	1c5a      	adds	r2, r3, #1
 8002626:	8062      	strh	r2, [r4, #2]
 8002628:	79e2      	ldrb	r2, [r4, #7]
 800262a:	18e3      	adds	r3, r4, r3
 800262c:	33ff      	adds	r3, #255	; 0xff
 800262e:	701a      	strb	r2, [r3, #0]
				modbus->MBdptr = modbus->RspBuf;
 8002630:	238c      	movs	r3, #140	; 0x8c
 8002632:	009b      	lsls	r3, r3, #2
 8002634:	50e5      	str	r5, [r4, r3]
				modbus->FTX = 1;
 8002636:	4b0b      	ldr	r3, [pc, #44]	; (8002664 <preset_multiple_register+0x14c>)
 8002638:	2201      	movs	r2, #1
 800263a:	54e2      	strb	r2, [r4, r3]
				modbus->TxTimeOut = 0;
 800263c:	2300      	movs	r3, #0
 800263e:	7163      	strb	r3, [r4, #5]
				tx_enable();
 8002640:	47b0      	blx	r6
 8002642:	e774      	b.n	800252e <preset_multiple_register+0x16>
			if (modbus->ReqBuf[0])
 8002644:	7a23      	ldrb	r3, [r4, #8]
 8002646:	2b00      	cmp	r3, #0
 8002648:	d100      	bne.n	800264c <preset_multiple_register+0x134>
 800264a:	e770      	b.n	800252e <preset_multiple_register+0x16>
				exeption_response(slave_address, ILLEGAL_DATA_ADDRESS, modbus,
 800264c:	0033      	movs	r3, r6
 800264e:	0022      	movs	r2, r4
 8002650:	2102      	movs	r1, #2
 8002652:	0028      	movs	r0, r5
 8002654:	f7ff fe5c 	bl	8002310 <exeption_response>
 8002658:	e769      	b.n	800252e <preset_multiple_register+0x16>
 800265a:	46c0      	nop			; (mov r8, r8)
 800265c:	20000560 	.word	0x20000560
 8002660:	2000000c 	.word	0x2000000c
 8002664:	0000022b 	.word	0x0000022b

08002668 <read_multi_registers>:
 * @param modbus
 * @param tx_enable
 */
MOBUS_Table_struct mod_A;
void read_multi_registers(uint8_t slave_add, MB_sType *modbus, void (*tx_enable)(void))
{
 8002668:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800266a:	46ce      	mov	lr, r9
 800266c:	4647      	mov	r7, r8
 800266e:	b580      	push	{r7, lr}
 8002670:	0005      	movs	r5, r0
 8002672:	000c      	movs	r4, r1
 8002674:	0016      	movs	r6, r2
	} u16_Type;
	uint16_t i;
	u16_Type REGISTER_ADDR, NRegs;
	uint8_t *dptr;

	if (modbus->ReqBuf[0] == slave_add)
 8002676:	7a0b      	ldrb	r3, [r1, #8]
 8002678:	4283      	cmp	r3, r0
 800267a:	d003      	beq.n	8002684 <read_multi_registers+0x1c>
			exeption_response(slave_add, ILLEGAL_DATA_ADDRESS, modbus,
					tx_enable);
		}
	}

}
 800267c:	bc0c      	pop	{r2, r3}
 800267e:	4690      	mov	r8, r2
 8002680:	4699      	mov	r9, r3
 8002682:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		crc16(modbus, modbus->ReqBuf, 6);
 8002684:	3108      	adds	r1, #8
 8002686:	2206      	movs	r2, #6
 8002688:	0020      	movs	r0, r4
 800268a:	f7ff fe25 	bl	80022d8 <crc16>
				|| modbus->CrcLo != modbus->ReqBuf[7])
 800268e:	88e2      	ldrh	r2, [r4, #6]
 8002690:	89e3      	ldrh	r3, [r4, #14]
		if (modbus->CrcHi != modbus->ReqBuf[6]
 8002692:	429a      	cmp	r2, r3
 8002694:	d1f2      	bne.n	800267c <read_multi_registers+0x14>
		NRegs.H = modbus->ReqBuf[4];
 8002696:	7b27      	ldrb	r7, [r4, #12]
 8002698:	023f      	lsls	r7, r7, #8
		NRegs.L = modbus->ReqBuf[5];
 800269a:	7b62      	ldrb	r2, [r4, #13]
		REGISTER_ADDR.H = modbus->ReqBuf[2];
 800269c:	7aa3      	ldrb	r3, [r4, #10]
		REGISTER_ADDR.L = modbus->ReqBuf[3];
 800269e:	7ae1      	ldrb	r1, [r4, #11]
 80026a0:	021b      	lsls	r3, r3, #8
 80026a2:	430b      	orrs	r3, r1
 80026a4:	4698      	mov	r8, r3
		if (NRegs.Word >= 1
 80026a6:	4317      	orrs	r7, r2
 80026a8:	d003      	beq.n	80026b2 <read_multi_registers+0x4a>
			&& NRegs.Word <= get_size_Table()
 80026aa:	f000 f91b 	bl	80028e4 <get_size_Table>
 80026ae:	4287      	cmp	r7, r0
 80026b0:	d906      	bls.n	80026c0 <read_multi_registers+0x58>
			exeption_response(slave_add, ILLEGAL_DATA_ADDRESS, modbus,
 80026b2:	0033      	movs	r3, r6
 80026b4:	0022      	movs	r2, r4
 80026b6:	2102      	movs	r1, #2
 80026b8:	0028      	movs	r0, r5
 80026ba:	f7ff fe29 	bl	8002310 <exeption_response>
 80026be:	e7dd      	b.n	800267c <read_multi_registers+0x14>
			&& REGISTER_ADDR.Word <= get_size_Table()
 80026c0:	4643      	mov	r3, r8
 80026c2:	b29b      	uxth	r3, r3
 80026c4:	4698      	mov	r8, r3
 80026c6:	f000 f90d 	bl	80028e4 <get_size_Table>
 80026ca:	4580      	cmp	r8, r0
 80026cc:	d8f1      	bhi.n	80026b2 <read_multi_registers+0x4a>
			&& (REGISTER_ADDR.Word + NRegs.Word) >= 1
 80026ce:	46c1      	mov	r9, r8
 80026d0:	44b8      	add	r8, r7
 80026d2:	4643      	mov	r3, r8
 80026d4:	2b00      	cmp	r3, #0
 80026d6:	ddec      	ble.n	80026b2 <read_multi_registers+0x4a>
			&& (REGISTER_ADDR.Word + NRegs.Word) <= get_size_Table()
 80026d8:	f000 f904 	bl	80028e4 <get_size_Table>
 80026dc:	4580      	cmp	r8, r0
 80026de:	dce8      	bgt.n	80026b2 <read_multi_registers+0x4a>
			modbus->RspBuf[modbus->ByteRsp++] = (uint8_t) slave_add;
 80026e0:	23ff      	movs	r3, #255	; 0xff
 80026e2:	54e5      	strb	r5, [r4, r3]
			modbus->RspBuf[modbus->ByteRsp++] = modbus->ReqBuf[1];
 80026e4:	7a62      	ldrb	r2, [r4, #9]
 80026e6:	3301      	adds	r3, #1
 80026e8:	54e2      	strb	r2, [r4, r3]
			modbus->RspBuf[modbus->ByteRsp++] = NRegs.Word << 1;
 80026ea:	3bfd      	subs	r3, #253	; 0xfd
 80026ec:	8063      	strh	r3, [r4, #2]
 80026ee:	007b      	lsls	r3, r7, #1
 80026f0:	2202      	movs	r2, #2
 80026f2:	32ff      	adds	r2, #255	; 0xff
 80026f4:	54a3      	strb	r3, [r4, r2]
			for (i = 0; i < (NRegs.Word); i++)
 80026f6:	2100      	movs	r1, #0
 80026f8:	e014      	b.n	8002724 <read_multi_registers+0xbc>
					dptr = (modbus_table_reg[i+REGISTER_ADDR.Word].add_register);
 80026fa:	464b      	mov	r3, r9
 80026fc:	18cb      	adds	r3, r1, r3
 80026fe:	00db      	lsls	r3, r3, #3
 8002700:	4a18      	ldr	r2, [pc, #96]	; (8002764 <read_multi_registers+0xfc>)
 8002702:	5898      	ldr	r0, [r3, r2]
					modbus->RspBuf[modbus->ByteRsp++] = *dptr--;
 8002704:	8862      	ldrh	r2, [r4, #2]
 8002706:	1c53      	adds	r3, r2, #1
 8002708:	b29b      	uxth	r3, r3
 800270a:	8063      	strh	r3, [r4, #2]
 800270c:	7845      	ldrb	r5, [r0, #1]
 800270e:	18a2      	adds	r2, r4, r2
 8002710:	32ff      	adds	r2, #255	; 0xff
 8002712:	7015      	strb	r5, [r2, #0]
					modbus->RspBuf[modbus->ByteRsp++] = *dptr--;
 8002714:	1c5a      	adds	r2, r3, #1
 8002716:	8062      	strh	r2, [r4, #2]
 8002718:	7802      	ldrb	r2, [r0, #0]
 800271a:	18e3      	adds	r3, r4, r3
 800271c:	33ff      	adds	r3, #255	; 0xff
 800271e:	701a      	strb	r2, [r3, #0]
			for (i = 0; i < (NRegs.Word); i++)
 8002720:	3101      	adds	r1, #1
 8002722:	b289      	uxth	r1, r1
 8002724:	428f      	cmp	r7, r1
 8002726:	d8e8      	bhi.n	80026fa <read_multi_registers+0x92>
			crc16(modbus, modbus->RspBuf, modbus->ByteRsp);
 8002728:	0025      	movs	r5, r4
 800272a:	35ff      	adds	r5, #255	; 0xff
 800272c:	78a2      	ldrb	r2, [r4, #2]
 800272e:	0029      	movs	r1, r5
 8002730:	0020      	movs	r0, r4
 8002732:	f7ff fdd1 	bl	80022d8 <crc16>
			modbus->RspBuf[modbus->ByteRsp++] = modbus->CrcHi;
 8002736:	8862      	ldrh	r2, [r4, #2]
 8002738:	1c53      	adds	r3, r2, #1
 800273a:	b29b      	uxth	r3, r3
 800273c:	79a1      	ldrb	r1, [r4, #6]
 800273e:	18a2      	adds	r2, r4, r2
 8002740:	32ff      	adds	r2, #255	; 0xff
 8002742:	7011      	strb	r1, [r2, #0]
			modbus->RspBuf[modbus->ByteRsp++] = modbus->CrcLo;
 8002744:	1c5a      	adds	r2, r3, #1
 8002746:	8062      	strh	r2, [r4, #2]
 8002748:	79e2      	ldrb	r2, [r4, #7]
 800274a:	18e3      	adds	r3, r4, r3
 800274c:	33ff      	adds	r3, #255	; 0xff
 800274e:	701a      	strb	r2, [r3, #0]
			modbus->MBdptr = modbus->RspBuf;
 8002750:	238c      	movs	r3, #140	; 0x8c
 8002752:	009b      	lsls	r3, r3, #2
 8002754:	50e5      	str	r5, [r4, r3]
			modbus->FTX = 1;
 8002756:	4b04      	ldr	r3, [pc, #16]	; (8002768 <read_multi_registers+0x100>)
 8002758:	2201      	movs	r2, #1
 800275a:	54e2      	strb	r2, [r4, r3]
			modbus->TxTimeOut = 0;
 800275c:	2300      	movs	r3, #0
 800275e:	7163      	strb	r3, [r4, #5]
			tx_enable();
 8002760:	47b0      	blx	r6
 8002762:	e78b      	b.n	800267c <read_multi_registers+0x14>
 8002764:	2000000c 	.word	0x2000000c
 8002768:	0000022b 	.word	0x0000022b

0800276c <modbus>:
int16_t status_cal_mode =0;
void modbus(uint8_t slave_add, MB_sType *modbus,void (*tx_enable)(void)
			,MOBUS_Table_struct table_reg[],MOBUS_Table_struct table_cal_mode[]
			,MOBUS_Table_struct table_cal_data[]
			,MOBUS_Table_struct table_hardware_interface[])
{
 800276c:	b570      	push	{r4, r5, r6, lr}
 800276e:	0005      	movs	r5, r0
 8002770:	000c      	movs	r4, r1
 8002772:	0016      	movs	r6, r2
	if (modbus->RxTimeOut >= 5 && modbus->ByteReq != 0)
 8002774:	790b      	ldrb	r3, [r1, #4]
 8002776:	2b04      	cmp	r3, #4
 8002778:	d93e      	bls.n	80027f8 <modbus+0x8c>
 800277a:	880a      	ldrh	r2, [r1, #0]
 800277c:	2a00      	cmp	r2, #0
 800277e:	d03b      	beq.n	80027f8 <modbus+0x8c>
	{
			switch (modbus->ReqBuf[1])
 8002780:	7a4b      	ldrb	r3, [r1, #9]
 8002782:	3b03      	subs	r3, #3
 8002784:	b2d9      	uxtb	r1, r3
 8002786:	290d      	cmp	r1, #13
 8002788:	d81b      	bhi.n	80027c2 <modbus+0x56>
 800278a:	008b      	lsls	r3, r1, #2
 800278c:	491c      	ldr	r1, [pc, #112]	; (8002800 <modbus+0x94>)
 800278e:	58cb      	ldr	r3, [r1, r3]
 8002790:	469f      	mov	pc, r3
			{
			case READ_HOLDING_REGISTERS:
			case READ_INPUT_REGISTERS:
				read_multi_registers(slave_add, modbus, tx_enable);
 8002792:	0032      	movs	r2, r6
 8002794:	0021      	movs	r1, r4
 8002796:	f7ff ff67 	bl	8002668 <read_multi_registers>
					break;
				exeption_response(slave_add, ILLEGAL_FUNCTION, modbus,
						tx_enable);
				break;
			}
		modbus->ByteReq = 0;
 800279a:	2300      	movs	r3, #0
 800279c:	8023      	strh	r3, [r4, #0]
		rx1_en();
 800279e:	f7ff fd69 	bl	8002274 <rx1_en>
 80027a2:	e02b      	b.n	80027fc <modbus+0x90>
				loop_back_diagnostic(slave_add, modbus, tx_enable);
 80027a4:	0032      	movs	r2, r6
 80027a6:	0021      	movs	r1, r4
 80027a8:	f7ff fdee 	bl	8002388 <loop_back_diagnostic>
				break;
 80027ac:	e7f5      	b.n	800279a <modbus+0x2e>
				preset_a_single_register(slave_add, modbus, tx_enable);
 80027ae:	0032      	movs	r2, r6
 80027b0:	0021      	movs	r1, r4
 80027b2:	f7ff fe21 	bl	80023f8 <preset_a_single_register>
				break;
 80027b6:	e7f0      	b.n	800279a <modbus+0x2e>
				preset_multiple_register(slave_add, modbus, tx_enable);
 80027b8:	0032      	movs	r2, r6
 80027ba:	0021      	movs	r1, r4
 80027bc:	f7ff feac 	bl	8002518 <preset_multiple_register>
				break;
 80027c0:	e7eb      	b.n	800279a <modbus+0x2e>
				crc16(modbus, modbus->ReqBuf, modbus->ByteReq - 2);
 80027c2:	0021      	movs	r1, r4
 80027c4:	3108      	adds	r1, #8
 80027c6:	3a02      	subs	r2, #2
 80027c8:	b2d2      	uxtb	r2, r2
 80027ca:	0020      	movs	r0, r4
 80027cc:	f7ff fd84 	bl	80022d8 <crc16>
				if (modbus->CrcHi != modbus->ReqBuf[modbus->ByteReq - 2]
 80027d0:	79a1      	ldrb	r1, [r4, #6]
 80027d2:	8822      	ldrh	r2, [r4, #0]
 80027d4:	1e93      	subs	r3, r2, #2
 80027d6:	18e3      	adds	r3, r4, r3
 80027d8:	7a1b      	ldrb	r3, [r3, #8]
 80027da:	4299      	cmp	r1, r3
 80027dc:	d1dd      	bne.n	800279a <modbus+0x2e>
						|| modbus->CrcLo != modbus->ReqBuf[modbus->ByteReq - 1])
 80027de:	79e1      	ldrb	r1, [r4, #7]
 80027e0:	3a01      	subs	r2, #1
 80027e2:	18a2      	adds	r2, r4, r2
 80027e4:	7a13      	ldrb	r3, [r2, #8]
 80027e6:	4299      	cmp	r1, r3
 80027e8:	d1d7      	bne.n	800279a <modbus+0x2e>
				exeption_response(slave_add, ILLEGAL_FUNCTION, modbus,
 80027ea:	0033      	movs	r3, r6
 80027ec:	0022      	movs	r2, r4
 80027ee:	2101      	movs	r1, #1
 80027f0:	0028      	movs	r0, r5
 80027f2:	f7ff fd8d 	bl	8002310 <exeption_response>
				break;
 80027f6:	e7d0      	b.n	800279a <modbus+0x2e>
		//	clear_modbus_buffer(modbus);

	}
	else
	{
		modbus->RxTimeOut++;
 80027f8:	3301      	adds	r3, #1
 80027fa:	7123      	strb	r3, [r4, #4]
	}
}
 80027fc:	bd70      	pop	{r4, r5, r6, pc}
 80027fe:	46c0      	nop			; (mov r8, r8)
 8002800:	08003ca4 	.word	0x08003ca4

08002804 <run_modbus>:
{
 8002804:	b500      	push	{lr}
 8002806:	b085      	sub	sp, #20
	if(Tick.Modbus < TIME_MODBUS) return;
 8002808:	4b1c      	ldr	r3, [pc, #112]	; (800287c <run_modbus+0x78>)
 800280a:	895a      	ldrh	r2, [r3, #10]
 800280c:	4b1c      	ldr	r3, [pc, #112]	; (8002880 <run_modbus+0x7c>)
 800280e:	881b      	ldrh	r3, [r3, #0]
 8002810:	429a      	cmp	r2, r3
 8002812:	d32d      	bcc.n	8002870 <run_modbus+0x6c>
	Tick.Modbus = 0;
 8002814:	4b19      	ldr	r3, [pc, #100]	; (800287c <run_modbus+0x78>)
 8002816:	2200      	movs	r2, #0
 8002818:	815a      	strh	r2, [r3, #10]
	if(nValue.Bandrate != bundrate || nValue.TypeCom != type_com )
 800281a:	4b1a      	ldr	r3, [pc, #104]	; (8002884 <run_modbus+0x80>)
 800281c:	8a18      	ldrh	r0, [r3, #16]
 800281e:	4b1a      	ldr	r3, [pc, #104]	; (8002888 <run_modbus+0x84>)
 8002820:	2200      	movs	r2, #0
 8002822:	5e9b      	ldrsh	r3, [r3, r2]
 8002824:	4298      	cmp	r0, r3
 8002826:	d106      	bne.n	8002836 <run_modbus+0x32>
 8002828:	4b16      	ldr	r3, [pc, #88]	; (8002884 <run_modbus+0x80>)
 800282a:	8a9a      	ldrh	r2, [r3, #20]
 800282c:	4b16      	ldr	r3, [pc, #88]	; (8002888 <run_modbus+0x84>)
 800282e:	2102      	movs	r1, #2
 8002830:	5e5b      	ldrsh	r3, [r3, r1]
 8002832:	429a      	cmp	r2, r3
 8002834:	d012      	beq.n	800285c <run_modbus+0x58>
		bundrate = nValue.Bandrate;
 8002836:	4b14      	ldr	r3, [pc, #80]	; (8002888 <run_modbus+0x84>)
 8002838:	8018      	strh	r0, [r3, #0]
		type_com = nValue.TypeCom;
 800283a:	4a12      	ldr	r2, [pc, #72]	; (8002884 <run_modbus+0x80>)
 800283c:	8a91      	ldrh	r1, [r2, #20]
 800283e:	8059      	strh	r1, [r3, #2]
		Uart1_Init(nValue.Bandrate,nValue.TypeCom);
 8002840:	f001 f930 	bl	8003aa4 <Uart1_Init>
		__HAL_UART_ENABLE_IT(&huart1, UART_IT_RXNE);
 8002844:	4811      	ldr	r0, [pc, #68]	; (800288c <run_modbus+0x88>)
 8002846:	6802      	ldr	r2, [r0, #0]
 8002848:	6813      	ldr	r3, [r2, #0]
 800284a:	2120      	movs	r1, #32
 800284c:	430b      	orrs	r3, r1
 800284e:	6013      	str	r3, [r2, #0]
		if (HAL_UART_Receive_IT(&huart1, (uint8_t *)&rxBuffer_modbus1, 1)!= HAL_OK)
 8002850:	2201      	movs	r2, #1
 8002852:	490f      	ldr	r1, [pc, #60]	; (8002890 <run_modbus+0x8c>)
 8002854:	f7ff f9ee 	bl	8001c34 <HAL_UART_Receive_IT>
 8002858:	2800      	cmp	r0, #0
 800285a:	d10b      	bne.n	8002874 <run_modbus+0x70>
	modbus(nValue.Address, &modbus1, &tx1_en,modbus_table_reg
 800285c:	4b0d      	ldr	r3, [pc, #52]	; (8002894 <run_modbus+0x90>)
 800285e:	4a09      	ldr	r2, [pc, #36]	; (8002884 <run_modbus+0x80>)
 8002860:	7c90      	ldrb	r0, [r2, #18]
 8002862:	9302      	str	r3, [sp, #8]
 8002864:	9301      	str	r3, [sp, #4]
 8002866:	9300      	str	r3, [sp, #0]
 8002868:	4a0b      	ldr	r2, [pc, #44]	; (8002898 <run_modbus+0x94>)
 800286a:	490c      	ldr	r1, [pc, #48]	; (800289c <run_modbus+0x98>)
 800286c:	f7ff ff7e 	bl	800276c <modbus>
}
 8002870:	b005      	add	sp, #20
 8002872:	bd00      	pop	{pc}
			Error_Handler();
 8002874:	f000 fce2 	bl	800323c <Error_Handler>
 8002878:	e7f0      	b.n	800285c <run_modbus+0x58>
 800287a:	46c0      	nop			; (mov r8, r8)
 800287c:	20000568 	.word	0x20000568
 8002880:	20000008 	.word	0x20000008
 8002884:	20000594 	.word	0x20000594
 8002888:	20000034 	.word	0x20000034
 800288c:	200007e8 	.word	0x200007e8
 8002890:	200004b4 	.word	0x200004b4
 8002894:	2000000c 	.word	0x2000000c
 8002898:	08002241 	.word	0x08002241
 800289c:	20000280 	.word	0x20000280

080028a0 <MODBUS1_IT>:

void MODBUS1_IT(void){
	if(!modbus1.FRX)
 80028a0:	4a0e      	ldr	r2, [pc, #56]	; (80028dc <MODBUS1_IT+0x3c>)
 80028a2:	238b      	movs	r3, #139	; 0x8b
 80028a4:	009b      	lsls	r3, r3, #2
 80028a6:	5cd3      	ldrb	r3, [r2, r3]
 80028a8:	2b00      	cmp	r3, #0
 80028aa:	d106      	bne.n	80028ba <MODBUS1_IT+0x1a>
	{
		modbus1.FRX=1;
 80028ac:	0013      	movs	r3, r2
 80028ae:	228b      	movs	r2, #139	; 0x8b
 80028b0:	0092      	lsls	r2, r2, #2
 80028b2:	2101      	movs	r1, #1
 80028b4:	5499      	strb	r1, [r3, r2]
		modbus1.ByteReq=0;
 80028b6:	2200      	movs	r2, #0
 80028b8:	801a      	strh	r2, [r3, #0]
	}
	modbus1.RxTimeOut=0;
 80028ba:	4b08      	ldr	r3, [pc, #32]	; (80028dc <MODBUS1_IT+0x3c>)
 80028bc:	2200      	movs	r2, #0
 80028be:	711a      	strb	r2, [r3, #4]
	modbus1.ReqBuf[modbus1.ByteReq++]=rxBuffer_modbus1;
 80028c0:	8819      	ldrh	r1, [r3, #0]
 80028c2:	1c4a      	adds	r2, r1, #1
 80028c4:	b292      	uxth	r2, r2
 80028c6:	801a      	strh	r2, [r3, #0]
 80028c8:	185b      	adds	r3, r3, r1
 80028ca:	4905      	ldr	r1, [pc, #20]	; (80028e0 <MODBUS1_IT+0x40>)
 80028cc:	7809      	ldrb	r1, [r1, #0]
 80028ce:	7219      	strb	r1, [r3, #8]
	if(modbus1.ByteReq>=247)
 80028d0:	2af6      	cmp	r2, #246	; 0xf6
 80028d2:	d902      	bls.n	80028da <MODBUS1_IT+0x3a>
	{
		modbus1.ByteReq=0;
 80028d4:	4b01      	ldr	r3, [pc, #4]	; (80028dc <MODBUS1_IT+0x3c>)
 80028d6:	2200      	movs	r2, #0
 80028d8:	801a      	strh	r2, [r3, #0]
	}
}
 80028da:	4770      	bx	lr
 80028dc:	20000280 	.word	0x20000280
 80028e0:	200004b4 	.word	0x200004b4

080028e4 <get_size_Table>:
/**  Address  Calibrate Register storage **/

uint16_t get_size_Table()
{
	return (sizeof(modbus_table_reg) / sizeof((modbus_table_reg)[0]));
}
 80028e4:	2001      	movs	r0, #1
 80028e6:	4770      	bx	lr

080028e8 <get_Switch_Status>:
Count_sType trig_H2[2];
Count_sType halsensor[2][2];
Encoder_Type Encoder[2];

/* Private user code ---------------------------------------------------------*/
void get_Switch_Status(void) {
 80028e8:	b570      	push	{r4, r5, r6, lr}
	sInput.Even.status.Bit.SW_DN = SWDOWN;
 80028ea:	2180      	movs	r1, #128	; 0x80
 80028ec:	4e18      	ldr	r6, [pc, #96]	; (8002950 <get_Switch_Status+0x68>)
 80028ee:	0109      	lsls	r1, r1, #4
 80028f0:	0030      	movs	r0, r6
 80028f2:	f7fd fe0f 	bl	8000514 <HAL_GPIO_ReadPin>
 80028f6:	2501      	movs	r5, #1
 80028f8:	4c16      	ldr	r4, [pc, #88]	; (8002954 <get_Switch_Status+0x6c>)
 80028fa:	0003      	movs	r3, r0
 80028fc:	402b      	ands	r3, r5
 80028fe:	7820      	ldrb	r0, [r4, #0]
 8002900:	2201      	movs	r2, #1
 8002902:	4390      	bics	r0, r2
 8002904:	4318      	orrs	r0, r3
 8002906:	7020      	strb	r0, [r4, #0]
	sInput.Even.status.Bit.SW_UP = SWUP;
 8002908:	2180      	movs	r1, #128	; 0x80
 800290a:	00c9      	lsls	r1, r1, #3
 800290c:	0030      	movs	r0, r6
 800290e:	f7fd fe01 	bl	8000514 <HAL_GPIO_ReadPin>
 8002912:	4028      	ands	r0, r5
 8002914:	0043      	lsls	r3, r0, #1
 8002916:	7820      	ldrb	r0, [r4, #0]
 8002918:	2202      	movs	r2, #2
 800291a:	4390      	bics	r0, r2
 800291c:	4318      	orrs	r0, r3
 800291e:	7020      	strb	r0, [r4, #0]
	sInput.Even.status.Bit.SW_F0 = SWF0;
 8002920:	2120      	movs	r1, #32
 8002922:	0030      	movs	r0, r6
 8002924:	f7fd fdf6 	bl	8000514 <HAL_GPIO_ReadPin>
 8002928:	4028      	ands	r0, r5
 800292a:	0083      	lsls	r3, r0, #2
 800292c:	7820      	ldrb	r0, [r4, #0]
 800292e:	2204      	movs	r2, #4
 8002930:	4390      	bics	r0, r2
 8002932:	4318      	orrs	r0, r3
 8002934:	7020      	strb	r0, [r4, #0]
	sInput.Even.status.Bit.SW_F1 = SWF1;
 8002936:	2140      	movs	r1, #64	; 0x40
 8002938:	0030      	movs	r0, r6
 800293a:	f7fd fdeb 	bl	8000514 <HAL_GPIO_ReadPin>
 800293e:	4005      	ands	r5, r0
 8002940:	00ed      	lsls	r5, r5, #3
 8002942:	7820      	ldrb	r0, [r4, #0]
 8002944:	2308      	movs	r3, #8
 8002946:	4398      	bics	r0, r3
 8002948:	4305      	orrs	r5, r0
 800294a:	7025      	strb	r5, [r4, #0]
}
 800294c:	bd70      	pop	{r4, r5, r6, pc}
 800294e:	46c0      	nop			; (mov r8, r8)
 8002950:	48000800 	.word	0x48000800
 8002954:	20000574 	.word	0x20000574

08002958 <get_Limit_Status>:
void get_Limit_Status(void) {
 8002958:	b570      	push	{r4, r5, r6, lr}
	sInput.Even.status.Bit.LIMIT_TP_1 = LT_1;
 800295a:	2180      	movs	r1, #128	; 0x80
 800295c:	4e18      	ldr	r6, [pc, #96]	; (80029c0 <get_Limit_Status+0x68>)
 800295e:	0049      	lsls	r1, r1, #1
 8002960:	0030      	movs	r0, r6
 8002962:	f7fd fdd7 	bl	8000514 <HAL_GPIO_ReadPin>
 8002966:	2501      	movs	r5, #1
 8002968:	4c16      	ldr	r4, [pc, #88]	; (80029c4 <get_Limit_Status+0x6c>)
 800296a:	4028      	ands	r0, r5
 800296c:	0103      	lsls	r3, r0, #4
 800296e:	7820      	ldrb	r0, [r4, #0]
 8002970:	2210      	movs	r2, #16
 8002972:	4390      	bics	r0, r2
 8002974:	4318      	orrs	r0, r3
 8002976:	7020      	strb	r0, [r4, #0]
	sInput.Even.status.Bit.LIMIT_BM_1 = LB_1;
 8002978:	2180      	movs	r1, #128	; 0x80
 800297a:	0089      	lsls	r1, r1, #2
 800297c:	0030      	movs	r0, r6
 800297e:	f7fd fdc9 	bl	8000514 <HAL_GPIO_ReadPin>
 8002982:	4028      	ands	r0, r5
 8002984:	0143      	lsls	r3, r0, #5
 8002986:	7820      	ldrb	r0, [r4, #0]
 8002988:	2220      	movs	r2, #32
 800298a:	4390      	bics	r0, r2
 800298c:	4318      	orrs	r0, r3
 800298e:	7020      	strb	r0, [r4, #0]
	sInput.Even.status.Bit.LIMIT_TP_2 = LT_2;
 8002990:	4e0d      	ldr	r6, [pc, #52]	; (80029c8 <get_Limit_Status+0x70>)
 8002992:	2104      	movs	r1, #4
 8002994:	0030      	movs	r0, r6
 8002996:	f7fd fdbd 	bl	8000514 <HAL_GPIO_ReadPin>
 800299a:	4028      	ands	r0, r5
 800299c:	0183      	lsls	r3, r0, #6
 800299e:	7820      	ldrb	r0, [r4, #0]
 80029a0:	2240      	movs	r2, #64	; 0x40
 80029a2:	4390      	bics	r0, r2
 80029a4:	4318      	orrs	r0, r3
 80029a6:	7020      	strb	r0, [r4, #0]
	sInput.Even.status.Bit.LIMIT_BM_2 = LB_2;
 80029a8:	2108      	movs	r1, #8
 80029aa:	0030      	movs	r0, r6
 80029ac:	f7fd fdb2 	bl	8000514 <HAL_GPIO_ReadPin>
 80029b0:	4005      	ands	r5, r0
 80029b2:	01ed      	lsls	r5, r5, #7
 80029b4:	7823      	ldrb	r3, [r4, #0]
 80029b6:	207f      	movs	r0, #127	; 0x7f
 80029b8:	4018      	ands	r0, r3
 80029ba:	4305      	orrs	r5, r0
 80029bc:	7025      	strb	r5, [r4, #0]
}
 80029be:	bd70      	pop	{r4, r5, r6, pc}
 80029c0:	48000400 	.word	0x48000400
 80029c4:	20000574 	.word	0x20000574
 80029c8:	48000800 	.word	0x48000800

080029cc <get_dipSwitch_Status>:
	}
	else if(DIP_SW_LEVEL_3){
		sInput.highest_position = LINEAR_HIGHT_LEVEL_3;
	}
	else if(DIP_SW_LEVEL_4){
		sInput.highest_position = LINEAR_HIGHT_LEVEL_4;
 80029cc:	4b02      	ldr	r3, [pc, #8]	; (80029d8 <get_dipSwitch_Status+0xc>)
 80029ce:	22fa      	movs	r2, #250	; 0xfa
 80029d0:	0092      	lsls	r2, r2, #2
 80029d2:	839a      	strh	r2, [r3, #28]
	}
	else{
		sInput.highest_position = LINEAR_HIGHT_LEVEL_0;
	}
}
 80029d4:	4770      	bx	lr
 80029d6:	46c0      	nop			; (mov r8, r8)
 80029d8:	20000574 	.word	0x20000574

080029dc <trig_input>:
		En->Status = 0;
		break;
	}
}
void trig_input(Trig_sType *trig, int in, int delay) {
	switch (trig->Status) {
 80029dc:	78c3      	ldrb	r3, [r0, #3]
 80029de:	2b01      	cmp	r3, #1
 80029e0:	d00f      	beq.n	8002a02 <trig_input+0x26>
 80029e2:	2b00      	cmp	r3, #0
 80029e4:	d002      	beq.n	80029ec <trig_input+0x10>
 80029e6:	2b02      	cmp	r3, #2
 80029e8:	d01e      	beq.n	8002a28 <trig_input+0x4c>
			trig->Active = HOLDTRIG;
			/*trig hold*/
		}
		break;
	}
}
 80029ea:	4770      	bx	lr
		if (in) {
 80029ec:	2900      	cmp	r1, #0
 80029ee:	d003      	beq.n	80029f8 <trig_input+0x1c>
			trig->Active = BEFORETRIG;
 80029f0:	2301      	movs	r3, #1
 80029f2:	7043      	strb	r3, [r0, #1]
			trig->Status = DEBOUNCE;
 80029f4:	70c3      	strb	r3, [r0, #3]
 80029f6:	e7f8      	b.n	80029ea <trig_input+0xe>
			trig->Active = NONETRIG;
 80029f8:	2300      	movs	r3, #0
 80029fa:	7043      	strb	r3, [r0, #1]
			trig->HoldTime = 0;
 80029fc:	7003      	strb	r3, [r0, #0]
			trig->Status = TRIG;
 80029fe:	70c3      	strb	r3, [r0, #3]
 8002a00:	e7f3      	b.n	80029ea <trig_input+0xe>
		if (in) {
 8002a02:	2900      	cmp	r1, #0
 8002a04:	d00b      	beq.n	8002a1e <trig_input+0x42>
			if (++trig->HoldTime >= delay) {
 8002a06:	7803      	ldrb	r3, [r0, #0]
 8002a08:	3301      	adds	r3, #1
 8002a0a:	b2db      	uxtb	r3, r3
 8002a0c:	7003      	strb	r3, [r0, #0]
 8002a0e:	4293      	cmp	r3, r2
 8002a10:	dbeb      	blt.n	80029ea <trig_input+0xe>
				trig->Active = ONETRIG;
 8002a12:	2302      	movs	r3, #2
 8002a14:	7043      	strb	r3, [r0, #1]
				trig->HoldTime = 0;
 8002a16:	2200      	movs	r2, #0
 8002a18:	7002      	strb	r2, [r0, #0]
				trig->Status = RELEASE;
 8002a1a:	70c3      	strb	r3, [r0, #3]
 8002a1c:	e7e5      	b.n	80029ea <trig_input+0xe>
			trig->Active = NOTRIG;
 8002a1e:	2303      	movs	r3, #3
 8002a20:	7043      	strb	r3, [r0, #1]
			trig->Status = RELEASE;
 8002a22:	3b01      	subs	r3, #1
 8002a24:	70c3      	strb	r3, [r0, #3]
 8002a26:	e7e0      	b.n	80029ea <trig_input+0xe>
		if (!in) {
 8002a28:	2900      	cmp	r1, #0
 8002a2a:	d002      	beq.n	8002a32 <trig_input+0x56>
			trig->Active = HOLDTRIG;
 8002a2c:	2304      	movs	r3, #4
 8002a2e:	7043      	strb	r3, [r0, #1]
}
 8002a30:	e7db      	b.n	80029ea <trig_input+0xe>
			trig->Status = TRIG;
 8002a32:	2300      	movs	r3, #0
 8002a34:	70c3      	strb	r3, [r0, #3]
 8002a36:	e7d8      	b.n	80029ea <trig_input+0xe>

08002a38 <trig_Count>:
void trig_Count(Count_sType *trig, int in, int mode) {
	switch (trig->Status) {
 8002a38:	7803      	ldrb	r3, [r0, #0]
 8002a3a:	2b00      	cmp	r3, #0
 8002a3c:	d002      	beq.n	8002a44 <trig_Count+0xc>
 8002a3e:	2b02      	cmp	r3, #2
 8002a40:	d00e      	beq.n	8002a60 <trig_Count+0x28>
			trig->Active = HOLDTRIG;
			/*trig hold*/
		}
		break;
	}
}
 8002a42:	4770      	bx	lr
		if (in) {
 8002a44:	2900      	cmp	r1, #0
 8002a46:	d007      	beq.n	8002a58 <trig_Count+0x20>
			trig->Active = ONETRIG;
 8002a48:	2302      	movs	r3, #2
 8002a4a:	7203      	strb	r3, [r0, #8]
			trig->Counter += mode;
 8002a4c:	6841      	ldr	r1, [r0, #4]
 8002a4e:	468c      	mov	ip, r1
 8002a50:	4462      	add	r2, ip
 8002a52:	6042      	str	r2, [r0, #4]
			trig->Status = RELEASE;
 8002a54:	7003      	strb	r3, [r0, #0]
 8002a56:	e7f4      	b.n	8002a42 <trig_Count+0xa>
			trig->Active = NONETRIG;
 8002a58:	2300      	movs	r3, #0
 8002a5a:	7203      	strb	r3, [r0, #8]
			trig->Status = TRIG;
 8002a5c:	7003      	strb	r3, [r0, #0]
 8002a5e:	e7f0      	b.n	8002a42 <trig_Count+0xa>
		if (!in) {
 8002a60:	2900      	cmp	r1, #0
 8002a62:	d002      	beq.n	8002a6a <trig_Count+0x32>
			trig->Active = HOLDTRIG;
 8002a64:	2304      	movs	r3, #4
 8002a66:	7203      	strb	r3, [r0, #8]
}
 8002a68:	e7eb      	b.n	8002a42 <trig_Count+0xa>
			trig->Active = AFTERTRIG;
 8002a6a:	2305      	movs	r3, #5
 8002a6c:	7203      	strb	r3, [r0, #8]
			trig->Status = TRIG;
 8002a6e:	2300      	movs	r3, #0
 8002a70:	7003      	strb	r3, [r0, #0]
 8002a72:	e7e6      	b.n	8002a42 <trig_Count+0xa>

08002a74 <run_Input>:
void run_Input(void) {
 8002a74:	b510      	push	{r4, lr}
	/* Get Input SW */
	get_Switch_Status();
 8002a76:	f7ff ff37 	bl	80028e8 <get_Switch_Status>
	get_Limit_Status();
 8002a7a:	f7ff ff6d 	bl	8002958 <get_Limit_Status>
	get_dipSwitch_Status();
 8002a7e:	f7ff ffa5 	bl	80029cc <get_dipSwitch_Status>
	trig_input(&trig_up, sInput.Even.status.Bit.SW_UP, 2);
 8002a82:	4c0f      	ldr	r4, [pc, #60]	; (8002ac0 <run_Input+0x4c>)
 8002a84:	7821      	ldrb	r1, [r4, #0]
 8002a86:	0789      	lsls	r1, r1, #30
 8002a88:	0fc9      	lsrs	r1, r1, #31
 8002a8a:	2202      	movs	r2, #2
 8002a8c:	480d      	ldr	r0, [pc, #52]	; (8002ac4 <run_Input+0x50>)
 8002a8e:	f7ff ffa5 	bl	80029dc <trig_input>
	trig_input(&trig_dw, sInput.Even.status.Bit.SW_DN, 2);
 8002a92:	7821      	ldrb	r1, [r4, #0]
 8002a94:	07c9      	lsls	r1, r1, #31
 8002a96:	0fc9      	lsrs	r1, r1, #31
 8002a98:	2202      	movs	r2, #2
 8002a9a:	480b      	ldr	r0, [pc, #44]	; (8002ac8 <run_Input+0x54>)
 8002a9c:	f7ff ff9e 	bl	80029dc <trig_input>
	trig_input(&trig_f0, sInput.Even.status.Bit.SW_F0, 2);
 8002aa0:	7821      	ldrb	r1, [r4, #0]
 8002aa2:	0749      	lsls	r1, r1, #29
 8002aa4:	0fc9      	lsrs	r1, r1, #31
 8002aa6:	2202      	movs	r2, #2
 8002aa8:	4808      	ldr	r0, [pc, #32]	; (8002acc <run_Input+0x58>)
 8002aaa:	f7ff ff97 	bl	80029dc <trig_input>
	trig_input(&trig_f1, sInput.Even.status.Bit.SW_F1, 2);
 8002aae:	7821      	ldrb	r1, [r4, #0]
 8002ab0:	0709      	lsls	r1, r1, #28
 8002ab2:	0fc9      	lsrs	r1, r1, #31
 8002ab4:	2202      	movs	r2, #2
 8002ab6:	4806      	ldr	r0, [pc, #24]	; (8002ad0 <run_Input+0x5c>)
 8002ab8:	f7ff ff90 	bl	80029dc <trig_input>
}
 8002abc:	bd10      	pop	{r4, pc}
 8002abe:	46c0      	nop			; (mov r8, r8)
 8002ac0:	20000574 	.word	0x20000574
 8002ac4:	20000538 	.word	0x20000538
 8002ac8:	200004ec 	.word	0x200004ec
 8002acc:	20000554 	.word	0x20000554
 8002ad0:	200004b8 	.word	0x200004b8

08002ad4 <run_Count>:
void run_Count(void){
 8002ad4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
//	get_Encoder_Status(HAL1_1, HAL2_1, &Encoder[0]);
//	get_Encoder_Status(HAL1_2, HAL2_2, &Encoder[1]);

	if(trig_up.Active == HOLDTRIG){
 8002ad6:	4b30      	ldr	r3, [pc, #192]	; (8002b98 <run_Count+0xc4>)
 8002ad8:	785b      	ldrb	r3, [r3, #1]
 8002ada:	2b04      	cmp	r3, #4
 8002adc:	d004      	beq.n	8002ae8 <run_Count+0x14>
		trig_Count(&trig_H1[1], HAL2_1, 1);

		trig_Count(&trig_H2[0], HAL1_2, 1);
		trig_Count(&trig_H2[1], HAL2_2, 1);
	}
	else if(trig_dw.Active == HOLDTRIG){
 8002ade:	4b2f      	ldr	r3, [pc, #188]	; (8002b9c <run_Count+0xc8>)
 8002ae0:	785b      	ldrb	r3, [r3, #1]
 8002ae2:	2b04      	cmp	r3, #4
 8002ae4:	d02b      	beq.n	8002b3e <run_Count+0x6a>
		trig_Count(&trig_H2[0], HAL1_2, -1);

		trig_Count(&trig_H1[1], HAL2_1, -1);
		trig_Count(&trig_H2[1], HAL2_2, -1);
	}
}
 8002ae6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		trig_Count(&trig_H1[0], HAL1_1, 1);
 8002ae8:	4d2d      	ldr	r5, [pc, #180]	; (8002ba0 <run_Count+0xcc>)
 8002aea:	2140      	movs	r1, #64	; 0x40
 8002aec:	0028      	movs	r0, r5
 8002aee:	f7fd fd11 	bl	8000514 <HAL_GPIO_ReadPin>
 8002af2:	0001      	movs	r1, r0
 8002af4:	4c2b      	ldr	r4, [pc, #172]	; (8002ba4 <run_Count+0xd0>)
 8002af6:	2201      	movs	r2, #1
 8002af8:	0020      	movs	r0, r4
 8002afa:	f7ff ff9d 	bl	8002a38 <trig_Count>
		trig_Count(&trig_H1[1], HAL2_1, 1);
 8002afe:	2180      	movs	r1, #128	; 0x80
 8002b00:	0028      	movs	r0, r5
 8002b02:	f7fd fd07 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b06:	0001      	movs	r1, r0
 8002b08:	0020      	movs	r0, r4
 8002b0a:	300c      	adds	r0, #12
 8002b0c:	2201      	movs	r2, #1
 8002b0e:	f7ff ff93 	bl	8002a38 <trig_Count>
		trig_Count(&trig_H2[0], HAL1_2, 1);
 8002b12:	4d25      	ldr	r5, [pc, #148]	; (8002ba8 <run_Count+0xd4>)
 8002b14:	2101      	movs	r1, #1
 8002b16:	0028      	movs	r0, r5
 8002b18:	f7fd fcfc 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b1c:	0001      	movs	r1, r0
 8002b1e:	4c23      	ldr	r4, [pc, #140]	; (8002bac <run_Count+0xd8>)
 8002b20:	2201      	movs	r2, #1
 8002b22:	0020      	movs	r0, r4
 8002b24:	f7ff ff88 	bl	8002a38 <trig_Count>
		trig_Count(&trig_H2[1], HAL2_2, 1);
 8002b28:	2102      	movs	r1, #2
 8002b2a:	0028      	movs	r0, r5
 8002b2c:	f7fd fcf2 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b30:	0001      	movs	r1, r0
 8002b32:	0020      	movs	r0, r4
 8002b34:	300c      	adds	r0, #12
 8002b36:	2201      	movs	r2, #1
 8002b38:	f7ff ff7e 	bl	8002a38 <trig_Count>
 8002b3c:	e7d3      	b.n	8002ae6 <run_Count+0x12>
		trig_Count(&trig_H1[0], HAL1_1, -1);
 8002b3e:	4f18      	ldr	r7, [pc, #96]	; (8002ba0 <run_Count+0xcc>)
 8002b40:	2140      	movs	r1, #64	; 0x40
 8002b42:	0038      	movs	r0, r7
 8002b44:	f7fd fce6 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b48:	0001      	movs	r1, r0
 8002b4a:	2501      	movs	r5, #1
 8002b4c:	426d      	negs	r5, r5
 8002b4e:	4e15      	ldr	r6, [pc, #84]	; (8002ba4 <run_Count+0xd0>)
 8002b50:	002a      	movs	r2, r5
 8002b52:	0030      	movs	r0, r6
 8002b54:	f7ff ff70 	bl	8002a38 <trig_Count>
		trig_Count(&trig_H2[0], HAL1_2, -1);
 8002b58:	2101      	movs	r1, #1
 8002b5a:	4813      	ldr	r0, [pc, #76]	; (8002ba8 <run_Count+0xd4>)
 8002b5c:	f7fd fcda 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b60:	0001      	movs	r1, r0
 8002b62:	4c12      	ldr	r4, [pc, #72]	; (8002bac <run_Count+0xd8>)
 8002b64:	002a      	movs	r2, r5
 8002b66:	0020      	movs	r0, r4
 8002b68:	f7ff ff66 	bl	8002a38 <trig_Count>
		trig_Count(&trig_H1[1], HAL2_1, -1);
 8002b6c:	2180      	movs	r1, #128	; 0x80
 8002b6e:	0038      	movs	r0, r7
 8002b70:	f7fd fcd0 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b74:	0001      	movs	r1, r0
 8002b76:	0030      	movs	r0, r6
 8002b78:	300c      	adds	r0, #12
 8002b7a:	002a      	movs	r2, r5
 8002b7c:	f7ff ff5c 	bl	8002a38 <trig_Count>
		trig_Count(&trig_H2[1], HAL2_2, -1);
 8002b80:	2102      	movs	r1, #2
 8002b82:	4809      	ldr	r0, [pc, #36]	; (8002ba8 <run_Count+0xd4>)
 8002b84:	f7fd fcc6 	bl	8000514 <HAL_GPIO_ReadPin>
 8002b88:	0001      	movs	r1, r0
 8002b8a:	0020      	movs	r0, r4
 8002b8c:	300c      	adds	r0, #12
 8002b8e:	002a      	movs	r2, r5
 8002b90:	f7ff ff52 	bl	8002a38 <trig_Count>
}
 8002b94:	e7a7      	b.n	8002ae6 <run_Count+0x12>
 8002b96:	46c0      	nop			; (mov r8, r8)
 8002b98:	20000538 	.word	0x20000538
 8002b9c:	200004ec 	.word	0x200004ec
 8002ba0:	48000400 	.word	0x48000400
 8002ba4:	200004bc 	.word	0x200004bc
 8002ba8:	48000800 	.word	0x48000800
 8002bac:	2000053c 	.word	0x2000053c

08002bb0 <run_Output>:
//#include "driver_Button.h"
#include "driver_Input.h"
#include "driver_Output.h"
//#include "driver_display.h"

void run_Output(sOutput_sType *Out) {
 8002bb0:	b570      	push	{r4, r5, r6, lr}
 8002bb2:	0005      	movs	r5, r0

//	Out->bit.Out_SEL1 = 1;
//	Out->bit.Out_SEL2 = 1;

	OUTPUT_A1(Out->bit.Out_A1);
 8002bb4:	7802      	ldrb	r2, [r0, #0]
 8002bb6:	07d2      	lsls	r2, r2, #31
 8002bb8:	0fd2      	lsrs	r2, r2, #31
 8002bba:	2180      	movs	r1, #128	; 0x80
 8002bbc:	4c0e      	ldr	r4, [pc, #56]	; (8002bf8 <run_Output+0x48>)
 8002bbe:	00c9      	lsls	r1, r1, #3
 8002bc0:	0020      	movs	r0, r4
 8002bc2:	f7fd fcae 	bl	8000522 <HAL_GPIO_WritePin>
	OUTPUT_B1(Out->bit.Out_B1);
 8002bc6:	782a      	ldrb	r2, [r5, #0]
 8002bc8:	0792      	lsls	r2, r2, #30
 8002bca:	0fd2      	lsrs	r2, r2, #31
 8002bcc:	2180      	movs	r1, #128	; 0x80
 8002bce:	0109      	lsls	r1, r1, #4
 8002bd0:	0020      	movs	r0, r4
 8002bd2:	f7fd fca6 	bl	8000522 <HAL_GPIO_WritePin>
//	OUTPUT_SEL1(Out->bit.Out_SEL1);

	OUTPUT_A2(Out->bit.Out_A2);
 8002bd6:	782a      	ldrb	r2, [r5, #0]
 8002bd8:	0752      	lsls	r2, r2, #29
 8002bda:	0fd2      	lsrs	r2, r2, #31
 8002bdc:	2180      	movs	r1, #128	; 0x80
 8002bde:	0189      	lsls	r1, r1, #6
 8002be0:	0020      	movs	r0, r4
 8002be2:	f7fd fc9e 	bl	8000522 <HAL_GPIO_WritePin>
	OUTPUT_B2(Out->bit.Out_B2);
 8002be6:	782a      	ldrb	r2, [r5, #0]
 8002be8:	0712      	lsls	r2, r2, #28
 8002bea:	0fd2      	lsrs	r2, r2, #31
 8002bec:	2180      	movs	r1, #128	; 0x80
 8002bee:	01c9      	lsls	r1, r1, #7
 8002bf0:	0020      	movs	r0, r4
 8002bf2:	f7fd fc96 	bl	8000522 <HAL_GPIO_WritePin>
//	OUTPUT_SEL2(Out->bit.Out_SEL2);
}
 8002bf6:	bd70      	pop	{r4, r5, r6, pc}
 8002bf8:	48000400 	.word	0x48000400

08002bfc <FM25LXX_WriteByteSPI>:
 8002bfc:	b500      	push	{lr}
 8002bfe:	b083      	sub	sp, #12
 8002c00:	466b      	mov	r3, sp
 8002c02:	1dd9      	adds	r1, r3, #7
 8002c04:	7008      	strb	r0, [r1, #0]
 8002c06:	2301      	movs	r3, #1
 8002c08:	425b      	negs	r3, r3
 8002c0a:	2201      	movs	r2, #1
 8002c0c:	4802      	ldr	r0, [pc, #8]	; (8002c18 <FM25LXX_WriteByteSPI+0x1c>)
 8002c0e:	f7fe f989 	bl	8000f24 <HAL_SPI_Transmit>
 8002c12:	b003      	add	sp, #12
 8002c14:	bd00      	pop	{pc}
 8002c16:	46c0      	nop			; (mov r8, r8)
 8002c18:	200005c4 	.word	0x200005c4

08002c1c <FM25LXX_EnableWrite>:
 8002c1c:	b510      	push	{r4, lr}
 8002c1e:	2490      	movs	r4, #144	; 0x90
 8002c20:	05e4      	lsls	r4, r4, #23
 8002c22:	2200      	movs	r2, #0
 8002c24:	2110      	movs	r1, #16
 8002c26:	0020      	movs	r0, r4
 8002c28:	f7fd fc7b 	bl	8000522 <HAL_GPIO_WritePin>
 8002c2c:	2006      	movs	r0, #6
 8002c2e:	f7ff ffe5 	bl	8002bfc <FM25LXX_WriteByteSPI>
 8002c32:	2201      	movs	r2, #1
 8002c34:	2110      	movs	r1, #16
 8002c36:	0020      	movs	r0, r4
 8002c38:	f7fd fc73 	bl	8000522 <HAL_GPIO_WritePin>
 8002c3c:	bd10      	pop	{r4, pc}

08002c3e <FM25LXX_WriteMemory>:
 8002c3e:	b570      	push	{r4, r5, r6, lr}
 8002c40:	0004      	movs	r4, r0
 8002c42:	000e      	movs	r6, r1
 8002c44:	2590      	movs	r5, #144	; 0x90
 8002c46:	05ed      	lsls	r5, r5, #23
 8002c48:	2200      	movs	r2, #0
 8002c4a:	2110      	movs	r1, #16
 8002c4c:	0028      	movs	r0, r5
 8002c4e:	f7fd fc68 	bl	8000522 <HAL_GPIO_WritePin>
 8002c52:	2005      	movs	r0, #5
 8002c54:	f7fd fb2c 	bl	80002b0 <HAL_Delay>
 8002c58:	2002      	movs	r0, #2
 8002c5a:	f7ff ffcf 	bl	8002bfc <FM25LXX_WriteByteSPI>
 8002c5e:	0a23      	lsrs	r3, r4, #8
 8002c60:	2007      	movs	r0, #7
 8002c62:	4018      	ands	r0, r3
 8002c64:	f7ff ffca 	bl	8002bfc <FM25LXX_WriteByteSPI>
 8002c68:	b2e0      	uxtb	r0, r4
 8002c6a:	f7ff ffc7 	bl	8002bfc <FM25LXX_WriteByteSPI>
 8002c6e:	0030      	movs	r0, r6
 8002c70:	f7ff ffc4 	bl	8002bfc <FM25LXX_WriteByteSPI>
 8002c74:	2005      	movs	r0, #5
 8002c76:	f7fd fb1b 	bl	80002b0 <HAL_Delay>
 8002c7a:	2201      	movs	r2, #1
 8002c7c:	2110      	movs	r1, #16
 8002c7e:	0028      	movs	r0, r5
 8002c80:	f7fd fc4f 	bl	8000522 <HAL_GPIO_WritePin>
 8002c84:	bd70      	pop	{r4, r5, r6, pc}

08002c86 <FM25LXX_SaveData>:
 8002c86:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002c88:	0007      	movs	r7, r0
 8002c8a:	000e      	movs	r6, r1
 8002c8c:	0015      	movs	r5, r2
 8002c8e:	2400      	movs	r4, #0
 8002c90:	e009      	b.n	8002ca6 <FM25LXX_SaveData+0x20>
 8002c92:	f7ff ffc3 	bl	8002c1c <FM25LXX_EnableWrite>
 8002c96:	7831      	ldrb	r1, [r6, #0]
 8002c98:	19e0      	adds	r0, r4, r7
 8002c9a:	b280      	uxth	r0, r0
 8002c9c:	f7ff ffcf 	bl	8002c3e <FM25LXX_WriteMemory>
 8002ca0:	3401      	adds	r4, #1
 8002ca2:	b2a4      	uxth	r4, r4
 8002ca4:	3601      	adds	r6, #1
 8002ca6:	b2ab      	uxth	r3, r5
 8002ca8:	42a3      	cmp	r3, r4
 8002caa:	d8f2      	bhi.n	8002c92 <FM25LXX_SaveData+0xc>
 8002cac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08002cb0 <Reset_default_position>:
{
	return (trig_H1[2].Counter > 200 && trig_H1[2].Counter < 800) ? 1:0;
}

void Reset_default_position(void)
{
 8002cb0:	b570      	push	{r4, r5, r6, lr}
	uint8_t speed_1 =0, speed_2 = 0;
	nValue.LastStatus[0] = Move_down;
 8002cb2:	4b2a      	ldr	r3, [pc, #168]	; (8002d5c <Reset_default_position+0xac>)
 8002cb4:	2202      	movs	r2, #2
 8002cb6:	809a      	strh	r2, [r3, #4]
	nValue.LastStatus[1] = Move_down;
 8002cb8:	80da      	strh	r2, [r3, #6]
	uint8_t speed_1 =0, speed_2 = 0;
 8002cba:	2400      	movs	r4, #0
 8002cbc:	2500      	movs	r5, #0
	while (BUTTOM_LIMIT_1 == GPIO_PIN_RESET || BUTTOM_LIMIT_2 == GPIO_PIN_RESET)
 8002cbe:	e014      	b.n	8002cea <Reset_default_position+0x3a>
	{
		sOutput.bit.Out_B1 = 1;
		sOutput.bit.Out_B2 = 1;

		if (speed_1 < DUTY_MAX/2) {
			speed_1 += ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 2 : 1);
 8002cc0:	2301      	movs	r3, #1
 8002cc2:	18ed      	adds	r5, r5, r3
 8002cc4:	b2ed      	uxtb	r5, r5
		}else{
			speed_1 -= ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 1 : 2);
		}
		if (speed_2 < DUTY_MAX/2) {
 8002cc6:	2c31      	cmp	r4, #49	; 0x31
 8002cc8:	d838      	bhi.n	8002d3c <Reset_default_position+0x8c>
			speed_2 += 1;
 8002cca:	3401      	adds	r4, #1
 8002ccc:	b2e4      	uxtb	r4, r4
		}else{
			speed_2 -= 1;
		}
		user_pwm_setvalue(speed_1, PWM_CH_1);
 8002cce:	b2a8      	uxth	r0, r5
 8002cd0:	2100      	movs	r1, #0
 8002cd2:	f000 fa0b 	bl	80030ec <user_pwm_setvalue>
		user_pwm_setvalue(speed_2, PWM_CH_2);
 8002cd6:	b2a0      	uxth	r0, r4
 8002cd8:	2101      	movs	r1, #1
 8002cda:	f000 fa07 	bl	80030ec <user_pwm_setvalue>
		run_Output(&sOutput);
 8002cde:	4820      	ldr	r0, [pc, #128]	; (8002d60 <Reset_default_position+0xb0>)
 8002ce0:	f7ff ff66 	bl	8002bb0 <run_Output>
		HAL_Delay(50);
 8002ce4:	2032      	movs	r0, #50	; 0x32
 8002ce6:	f7fd fae3 	bl	80002b0 <HAL_Delay>
	while (BUTTOM_LIMIT_1 == GPIO_PIN_RESET || BUTTOM_LIMIT_2 == GPIO_PIN_RESET)
 8002cea:	2140      	movs	r1, #64	; 0x40
 8002cec:	481d      	ldr	r0, [pc, #116]	; (8002d64 <Reset_default_position+0xb4>)
 8002cee:	f7fd fc11 	bl	8000514 <HAL_GPIO_ReadPin>
 8002cf2:	2800      	cmp	r0, #0
 8002cf4:	d005      	beq.n	8002d02 <Reset_default_position+0x52>
 8002cf6:	2108      	movs	r1, #8
 8002cf8:	481b      	ldr	r0, [pc, #108]	; (8002d68 <Reset_default_position+0xb8>)
 8002cfa:	f7fd fc0b 	bl	8000514 <HAL_GPIO_ReadPin>
 8002cfe:	2800      	cmp	r0, #0
 8002d00:	d11f      	bne.n	8002d42 <Reset_default_position+0x92>
		sOutput.bit.Out_B1 = 1;
 8002d02:	4a17      	ldr	r2, [pc, #92]	; (8002d60 <Reset_default_position+0xb0>)
 8002d04:	7813      	ldrb	r3, [r2, #0]
		sOutput.bit.Out_B2 = 1;
 8002d06:	2102      	movs	r1, #2
 8002d08:	430b      	orrs	r3, r1
 8002d0a:	2108      	movs	r1, #8
 8002d0c:	430b      	orrs	r3, r1
 8002d0e:	7013      	strb	r3, [r2, #0]
		if (speed_1 < DUTY_MAX/2) {
 8002d10:	2d31      	cmp	r5, #49	; 0x31
 8002d12:	d807      	bhi.n	8002d24 <Reset_default_position+0x74>
			speed_1 += ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 2 : 1);
 8002d14:	4a15      	ldr	r2, [pc, #84]	; (8002d6c <Reset_default_position+0xbc>)
 8002d16:	6853      	ldr	r3, [r2, #4]
 8002d18:	69d2      	ldr	r2, [r2, #28]
 8002d1a:	1a9b      	subs	r3, r3, r2
 8002d1c:	2b00      	cmp	r3, #0
 8002d1e:	ddcf      	ble.n	8002cc0 <Reset_default_position+0x10>
 8002d20:	2302      	movs	r3, #2
 8002d22:	e7ce      	b.n	8002cc2 <Reset_default_position+0x12>
			speed_1 -= ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 1 : 2);
 8002d24:	4a11      	ldr	r2, [pc, #68]	; (8002d6c <Reset_default_position+0xbc>)
 8002d26:	6853      	ldr	r3, [r2, #4]
 8002d28:	69d2      	ldr	r2, [r2, #28]
 8002d2a:	1a9b      	subs	r3, r3, r2
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	dd03      	ble.n	8002d38 <Reset_default_position+0x88>
 8002d30:	2301      	movs	r3, #1
 8002d32:	1aed      	subs	r5, r5, r3
 8002d34:	b2ed      	uxtb	r5, r5
 8002d36:	e7c6      	b.n	8002cc6 <Reset_default_position+0x16>
 8002d38:	2302      	movs	r3, #2
 8002d3a:	e7fa      	b.n	8002d32 <Reset_default_position+0x82>
			speed_2 -= 1;
 8002d3c:	3c01      	subs	r4, #1
 8002d3e:	b2e4      	uxtb	r4, r4
 8002d40:	e7c5      	b.n	8002cce <Reset_default_position+0x1e>
	}
	nValue.LastStatus[0] = 0;
 8002d42:	4b06      	ldr	r3, [pc, #24]	; (8002d5c <Reset_default_position+0xac>)
 8002d44:	2200      	movs	r2, #0
 8002d46:	809a      	strh	r2, [r3, #4]
	nValue.LastStatus[1] = 0;
 8002d48:	80da      	strh	r2, [r3, #6]
	user_pwm_setvalue(0, PWM_CH_1);
 8002d4a:	2100      	movs	r1, #0
 8002d4c:	2000      	movs	r0, #0
 8002d4e:	f000 f9cd 	bl	80030ec <user_pwm_setvalue>
	user_pwm_setvalue(0, PWM_CH_2);
 8002d52:	2101      	movs	r1, #1
 8002d54:	2000      	movs	r0, #0
 8002d56:	f000 f9c9 	bl	80030ec <user_pwm_setvalue>
}
 8002d5a:	bd70      	pop	{r4, r5, r6, pc}
 8002d5c:	20000594 	.word	0x20000594
 8002d60:	20000564 	.word	0x20000564
 8002d64:	48000400 	.word	0x48000400
 8002d68:	48000800 	.word	0x48000800
 8002d6c:	200004f0 	.word	0x200004f0

08002d70 <set_stop_motor>:

void set_stop_motor(void)
{
	if(nValue.motor_id == 0){
 8002d70:	4b0e      	ldr	r3, [pc, #56]	; (8002dac <set_stop_motor+0x3c>)
 8002d72:	7f1b      	ldrb	r3, [r3, #28]
 8002d74:	2b00      	cmp	r3, #0
 8002d76:	d011      	beq.n	8002d9c <set_stop_motor+0x2c>
		sOutput.bit.Out_A1 = 0;
		sOutput.bit.Out_B1 = 0;
	}
	else{
		sOutput.bit.Out_A2 = 0;
 8002d78:	4a0d      	ldr	r2, [pc, #52]	; (8002db0 <set_stop_motor+0x40>)
 8002d7a:	7813      	ldrb	r3, [r2, #0]
		sOutput.bit.Out_B2 = 0;
 8002d7c:	2104      	movs	r1, #4
 8002d7e:	438b      	bics	r3, r1
 8002d80:	3104      	adds	r1, #4
 8002d82:	438b      	bics	r3, r1
 8002d84:	7013      	strb	r3, [r2, #0]
	}
	nValue.pwmValue[nValue.motor_id] = DUTY_MIN;
 8002d86:	4b09      	ldr	r3, [pc, #36]	; (8002dac <set_stop_motor+0x3c>)
 8002d88:	7f1a      	ldrb	r2, [r3, #28]
 8002d8a:	1d10      	adds	r0, r2, #4
 8002d8c:	0040      	lsls	r0, r0, #1
 8002d8e:	2100      	movs	r1, #0
 8002d90:	52c1      	strh	r1, [r0, r3]
	nValue.Status[nValue.motor_id] = 0;
 8002d92:	0052      	lsls	r2, r2, #1
 8002d94:	52d1      	strh	r1, [r2, r3]
	nValue.LastStatus[nValue.motor_id] = 0;
 8002d96:	189b      	adds	r3, r3, r2
 8002d98:	8099      	strh	r1, [r3, #4]
}
 8002d9a:	4770      	bx	lr
		sOutput.bit.Out_A1 = 0;
 8002d9c:	4a04      	ldr	r2, [pc, #16]	; (8002db0 <set_stop_motor+0x40>)
 8002d9e:	7813      	ldrb	r3, [r2, #0]
		sOutput.bit.Out_B1 = 0;
 8002da0:	2101      	movs	r1, #1
 8002da2:	438b      	bics	r3, r1
 8002da4:	3101      	adds	r1, #1
 8002da6:	438b      	bics	r3, r1
 8002da8:	7013      	strb	r3, [r2, #0]
 8002daa:	e7ec      	b.n	8002d86 <set_stop_motor+0x16>
 8002dac:	20000594 	.word	0x20000594
 8002db0:	20000564 	.word	0x20000564

08002db4 <set_motor_direction>:

void set_motor_direction(void)
{
 8002db4:	b510      	push	{r4, lr}
	if (trig_up.Active == HOLDTRIG && trig_dw.Active == HOLDTRIG) {
 8002db6:	4b1c      	ldr	r3, [pc, #112]	; (8002e28 <set_motor_direction+0x74>)
 8002db8:	785b      	ldrb	r3, [r3, #1]
 8002dba:	2b04      	cmp	r3, #4
 8002dbc:	d006      	beq.n	8002dcc <set_motor_direction+0x18>
		set_stop_motor();
	}
	else if (trig_up.Active == HOLDTRIG) {
 8002dbe:	2b04      	cmp	r3, #4
 8002dc0:	d00b      	beq.n	8002dda <set_motor_direction+0x26>
		}
		else{
			sOutput.bit.Out_A2 = 1;
		}
	}
	else if (trig_dw.Active == HOLDTRIG) {
 8002dc2:	4b1a      	ldr	r3, [pc, #104]	; (8002e2c <set_motor_direction+0x78>)
 8002dc4:	785b      	ldrb	r3, [r3, #1]
 8002dc6:	2b04      	cmp	r3, #4
 8002dc8:	d01a      	beq.n	8002e00 <set_motor_direction+0x4c>
			sOutput.bit.Out_B2 = 1;
		}
		nValue.Status[nValue.motor_id] = Move_down;
	} else{
	}
}
 8002dca:	bd10      	pop	{r4, pc}
	if (trig_up.Active == HOLDTRIG && trig_dw.Active == HOLDTRIG) {
 8002dcc:	4a17      	ldr	r2, [pc, #92]	; (8002e2c <set_motor_direction+0x78>)
 8002dce:	7852      	ldrb	r2, [r2, #1]
 8002dd0:	2a04      	cmp	r2, #4
 8002dd2:	d1f4      	bne.n	8002dbe <set_motor_direction+0xa>
		set_stop_motor();
 8002dd4:	f7ff ffcc 	bl	8002d70 <set_stop_motor>
 8002dd8:	e7f7      	b.n	8002dca <set_motor_direction+0x16>
		nValue.Status[nValue.motor_id] = Move_up;
 8002dda:	4a15      	ldr	r2, [pc, #84]	; (8002e30 <set_motor_direction+0x7c>)
 8002ddc:	7f13      	ldrb	r3, [r2, #28]
 8002dde:	0059      	lsls	r1, r3, #1
 8002de0:	2001      	movs	r0, #1
 8002de2:	5288      	strh	r0, [r1, r2]
		if(nValue.motor_id == 0){
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d105      	bne.n	8002df4 <set_motor_direction+0x40>
			sOutput.bit.Out_A1 = 1;
 8002de8:	4a12      	ldr	r2, [pc, #72]	; (8002e34 <set_motor_direction+0x80>)
 8002dea:	7813      	ldrb	r3, [r2, #0]
 8002dec:	2101      	movs	r1, #1
 8002dee:	430b      	orrs	r3, r1
 8002df0:	7013      	strb	r3, [r2, #0]
 8002df2:	e7ea      	b.n	8002dca <set_motor_direction+0x16>
			sOutput.bit.Out_A2 = 1;
 8002df4:	4a0f      	ldr	r2, [pc, #60]	; (8002e34 <set_motor_direction+0x80>)
 8002df6:	7813      	ldrb	r3, [r2, #0]
 8002df8:	2104      	movs	r1, #4
 8002dfa:	430b      	orrs	r3, r1
 8002dfc:	7013      	strb	r3, [r2, #0]
 8002dfe:	e7e4      	b.n	8002dca <set_motor_direction+0x16>
		if(nValue.motor_id == 0){
 8002e00:	4b0b      	ldr	r3, [pc, #44]	; (8002e30 <set_motor_direction+0x7c>)
 8002e02:	7f1b      	ldrb	r3, [r3, #28]
 8002e04:	2b00      	cmp	r3, #0
 8002e06:	d109      	bne.n	8002e1c <set_motor_direction+0x68>
			sOutput.bit.Out_B1 = 1;
 8002e08:	490a      	ldr	r1, [pc, #40]	; (8002e34 <set_motor_direction+0x80>)
 8002e0a:	780a      	ldrb	r2, [r1, #0]
 8002e0c:	2002      	movs	r0, #2
 8002e0e:	4302      	orrs	r2, r0
 8002e10:	700a      	strb	r2, [r1, #0]
		nValue.Status[nValue.motor_id] = Move_down;
 8002e12:	005b      	lsls	r3, r3, #1
 8002e14:	4a06      	ldr	r2, [pc, #24]	; (8002e30 <set_motor_direction+0x7c>)
 8002e16:	2102      	movs	r1, #2
 8002e18:	5299      	strh	r1, [r3, r2]
}
 8002e1a:	e7d6      	b.n	8002dca <set_motor_direction+0x16>
			sOutput.bit.Out_B2 = 1;
 8002e1c:	4905      	ldr	r1, [pc, #20]	; (8002e34 <set_motor_direction+0x80>)
 8002e1e:	780a      	ldrb	r2, [r1, #0]
 8002e20:	2008      	movs	r0, #8
 8002e22:	4302      	orrs	r2, r0
 8002e24:	700a      	strb	r2, [r1, #0]
 8002e26:	e7f4      	b.n	8002e12 <set_motor_direction+0x5e>
 8002e28:	20000538 	.word	0x20000538
 8002e2c:	200004ec 	.word	0x200004ec
 8002e30:	20000594 	.word	0x20000594
 8002e34:	20000564 	.word	0x20000564

08002e38 <run_motor>:

void run_motor(uint8_t id)
{
 8002e38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	nValue.motor_id = id;
 8002e3a:	4c74      	ldr	r4, [pc, #464]	; (800300c <run_motor+0x1d4>)
 8002e3c:	7720      	strb	r0, [r4, #28]
	set_motor_direction();
 8002e3e:	f7ff ffb9 	bl	8002db4 <set_motor_direction>
	//run
	int16_t dif = 0;
	dif = (halsensor[nValue.motor_id][0].Counter - halsensor[!nValue.motor_id][0].Counter) * (nValue.Status[nValue.motor_id] == Move_down? -1 : 1);
 8002e42:	7f23      	ldrb	r3, [r4, #28]
 8002e44:	4a72      	ldr	r2, [pc, #456]	; (8003010 <run_motor+0x1d8>)
 8002e46:	005d      	lsls	r5, r3, #1
 8002e48:	18e8      	adds	r0, r5, r3
 8002e4a:	00c1      	lsls	r1, r0, #3
 8002e4c:	1851      	adds	r1, r2, r1
 8002e4e:	6848      	ldr	r0, [r1, #4]
 8002e50:	425e      	negs	r6, r3
 8002e52:	415e      	adcs	r6, r3
 8002e54:	0071      	lsls	r1, r6, #1
 8002e56:	1989      	adds	r1, r1, r6
 8002e58:	00cf      	lsls	r7, r1, #3
 8002e5a:	19d2      	adds	r2, r2, r7
 8002e5c:	6852      	ldr	r2, [r2, #4]
 8002e5e:	1a82      	subs	r2, r0, r2
 8002e60:	b292      	uxth	r2, r2
 8002e62:	5f2c      	ldrsh	r4, [r5, r4]
 8002e64:	2c02      	cmp	r4, #2
 8002e66:	d05d      	beq.n	8002f24 <run_motor+0xec>
 8002e68:	2101      	movs	r1, #1
 8002e6a:	434a      	muls	r2, r1
 8002e6c:	b212      	sxth	r2, r2


	if(nValue.Status[nValue.motor_id] && !nValue.LastStatus[nValue.motor_id])
 8002e6e:	2c00      	cmp	r4, #0
 8002e70:	d00a      	beq.n	8002e88 <run_motor+0x50>
 8002e72:	005d      	lsls	r5, r3, #1
 8002e74:	4965      	ldr	r1, [pc, #404]	; (800300c <run_motor+0x1d4>)
 8002e76:	1949      	adds	r1, r1, r5
 8002e78:	2504      	movs	r5, #4
 8002e7a:	5f49      	ldrsh	r1, [r1, r5]
 8002e7c:	2900      	cmp	r1, #0
 8002e7e:	d103      	bne.n	8002e88 <run_motor+0x50>
		nValue.LastStatus[nValue.motor_id] = nValue.Status[nValue.motor_id];
 8002e80:	005d      	lsls	r5, r3, #1
 8002e82:	4962      	ldr	r1, [pc, #392]	; (800300c <run_motor+0x1d4>)
 8002e84:	1949      	adds	r1, r1, r5
 8002e86:	808c      	strh	r4, [r1, #4]

	if(halsensor[nValue.motor_id][0].Counter < LINEAR_RESET_ZONE && trig_dw.Active == HOLDTRIG){
 8002e88:	2863      	cmp	r0, #99	; 0x63
 8002e8a:	dc03      	bgt.n	8002e94 <run_motor+0x5c>
 8002e8c:	4961      	ldr	r1, [pc, #388]	; (8003014 <run_motor+0x1dc>)
 8002e8e:	7849      	ldrb	r1, [r1, #1]
 8002e90:	2904      	cmp	r1, #4
 8002e92:	d049      	beq.n	8002f28 <run_motor+0xf0>
		nValue.rundowntoreset[nValue.motor_id] = 1;
		nValue.rundowntoreset[!nValue.motor_id] = 1;
	}

	if(halsensor[nValue.motor_id][0].Counter != 0 && nValue.rundowntoreset[nValue.motor_id] == 1){
 8002e94:	2800      	cmp	r0, #0
 8002e96:	d004      	beq.n	8002ea2 <run_motor+0x6a>
 8002e98:	495c      	ldr	r1, [pc, #368]	; (800300c <run_motor+0x1d4>)
 8002e9a:	18c9      	adds	r1, r1, r3
 8002e9c:	7e89      	ldrb	r1, [r1, #26]
 8002e9e:	2901      	cmp	r1, #1
 8002ea0:	d049      	beq.n	8002f36 <run_motor+0xfe>
		}else{
			nValue.pwmValue[nValue.motor_id] -= ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 1 : 2);
		}
	}
	else{
			nValue.rundowntoreset[nValue.motor_id] = 0;
 8002ea2:	495a      	ldr	r1, [pc, #360]	; (800300c <run_motor+0x1d4>)
 8002ea4:	18c9      	adds	r1, r1, r3
 8002ea6:	2400      	movs	r4, #0
 8002ea8:	768c      	strb	r4, [r1, #26]
			if ((trig_dw.Active == HOLDTRIG || (trig_up.Active == HOLDTRIG && halsensor[nValue.motor_id][0].Counter < sInput.highest_position))
 8002eaa:	495a      	ldr	r1, [pc, #360]	; (8003014 <run_motor+0x1dc>)
 8002eac:	7849      	ldrb	r1, [r1, #1]
 8002eae:	2904      	cmp	r1, #4
 8002eb0:	d100      	bne.n	8002eb4 <run_motor+0x7c>
 8002eb2:	e06b      	b.n	8002f8c <run_motor+0x154>
 8002eb4:	4958      	ldr	r1, [pc, #352]	; (8003018 <run_motor+0x1e0>)
 8002eb6:	7849      	ldrb	r1, [r1, #1]
 8002eb8:	2904      	cmp	r1, #4
 8002eba:	d062      	beq.n	8002f82 <run_motor+0x14a>
				}


			}else {

				if (nValue.pwmValue[nValue.motor_id] > DUTY_MIN) {
 8002ebc:	1d19      	adds	r1, r3, #4
 8002ebe:	0049      	lsls	r1, r1, #1
 8002ec0:	4852      	ldr	r0, [pc, #328]	; (800300c <run_motor+0x1d4>)
 8002ec2:	5e09      	ldrsh	r1, [r1, r0]
 8002ec4:	2900      	cmp	r1, #0
 8002ec6:	dc00      	bgt.n	8002eca <run_motor+0x92>
 8002ec8:	e08c      	b.n	8002fe4 <run_motor+0x1ac>
					nValue.pwmValue[nValue.motor_id] -= (dif > 0 ? 5:4);
 8002eca:	b289      	uxth	r1, r1
 8002ecc:	2a00      	cmp	r2, #0
 8002ece:	dc00      	bgt.n	8002ed2 <run_motor+0x9a>
 8002ed0:	e086      	b.n	8002fe0 <run_motor+0x1a8>
 8002ed2:	2205      	movs	r2, #5
 8002ed4:	3304      	adds	r3, #4
 8002ed6:	005b      	lsls	r3, r3, #1
 8002ed8:	1a89      	subs	r1, r1, r2
 8002eda:	4a4c      	ldr	r2, [pc, #304]	; (800300c <run_motor+0x1d4>)
 8002edc:	5299      	strh	r1, [r3, r2]
					set_stop_motor();
				}
			}
	}

	if(HAL_GPIO_ReadPin(LB02_GPIO_Port, LB02_Pin) == GPIO_PIN_SET){
 8002ede:	2108      	movs	r1, #8
 8002ee0:	484e      	ldr	r0, [pc, #312]	; (800301c <run_motor+0x1e4>)
 8002ee2:	f7fd fb17 	bl	8000514 <HAL_GPIO_ReadPin>
 8002ee6:	2801      	cmp	r0, #1
 8002ee8:	d100      	bne.n	8002eec <run_motor+0xb4>
 8002eea:	e07e      	b.n	8002fea <run_motor+0x1b2>
		halsensor[1][0].Counter = 0;
	}

	if(HAL_GPIO_ReadPin(HAL11_GPIO_Port, HAL11_Pin) == GPIO_PIN_SET){
 8002eec:	2140      	movs	r1, #64	; 0x40
 8002eee:	484c      	ldr	r0, [pc, #304]	; (8003020 <run_motor+0x1e8>)
 8002ef0:	f7fd fb10 	bl	8000514 <HAL_GPIO_ReadPin>
 8002ef4:	2801      	cmp	r0, #1
 8002ef6:	d100      	bne.n	8002efa <run_motor+0xc2>
 8002ef8:	e07b      	b.n	8002ff2 <run_motor+0x1ba>
		halsensor[0][0].Counter = 0;
	}


		if(nValue.pwmValue[0] < DUTY_MIN)
 8002efa:	4b44      	ldr	r3, [pc, #272]	; (800300c <run_motor+0x1d4>)
 8002efc:	2208      	movs	r2, #8
 8002efe:	5e9b      	ldrsh	r3, [r3, r2]
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	da00      	bge.n	8002f06 <run_motor+0xce>
 8002f04:	e079      	b.n	8002ffa <run_motor+0x1c2>
			nValue.pwmValue[0] = DUTY_MIN;

		if(nValue.pwmValue[1] < DUTY_MIN)
 8002f06:	4b41      	ldr	r3, [pc, #260]	; (800300c <run_motor+0x1d4>)
 8002f08:	220a      	movs	r2, #10
 8002f0a:	5e9b      	ldrsh	r3, [r3, r2]
 8002f0c:	2b00      	cmp	r3, #0
 8002f0e:	da00      	bge.n	8002f12 <run_motor+0xda>
 8002f10:	e077      	b.n	8003002 <run_motor+0x1ca>
			nValue.pwmValue[1] = DUTY_MIN;

		user_pwm_setvalue(nValue.pwmValue[nValue.motor_id], nValue.motor_id);
 8002f12:	4a3e      	ldr	r2, [pc, #248]	; (800300c <run_motor+0x1d4>)
 8002f14:	7f11      	ldrb	r1, [r2, #28]
 8002f16:	1d0b      	adds	r3, r1, #4
 8002f18:	005b      	lsls	r3, r3, #1
 8002f1a:	b289      	uxth	r1, r1
 8002f1c:	5ad0      	ldrh	r0, [r2, r3]
 8002f1e:	f000 f8e5 	bl	80030ec <user_pwm_setvalue>

}
 8002f22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	dif = (halsensor[nValue.motor_id][0].Counter - halsensor[!nValue.motor_id][0].Counter) * (nValue.Status[nValue.motor_id] == Move_down? -1 : 1);
 8002f24:	493f      	ldr	r1, [pc, #252]	; (8003024 <run_motor+0x1ec>)
 8002f26:	e7a0      	b.n	8002e6a <run_motor+0x32>
		nValue.rundowntoreset[nValue.motor_id] = 1;
 8002f28:	4938      	ldr	r1, [pc, #224]	; (800300c <run_motor+0x1d4>)
 8002f2a:	18cd      	adds	r5, r1, r3
 8002f2c:	2401      	movs	r4, #1
 8002f2e:	76ac      	strb	r4, [r5, #26]
		nValue.rundowntoreset[!nValue.motor_id] = 1;
 8002f30:	1989      	adds	r1, r1, r6
 8002f32:	768c      	strb	r4, [r1, #26]
 8002f34:	e7ae      	b.n	8002e94 <run_motor+0x5c>
		if (nValue.pwmValue[nValue.motor_id] < DUTY_MAX/2) {
 8002f36:	1d1a      	adds	r2, r3, #4
 8002f38:	0052      	lsls	r2, r2, #1
 8002f3a:	4934      	ldr	r1, [pc, #208]	; (800300c <run_motor+0x1d4>)
 8002f3c:	5e52      	ldrsh	r2, [r2, r1]
 8002f3e:	2a31      	cmp	r2, #49	; 0x31
 8002f40:	dc0f      	bgt.n	8002f62 <run_motor+0x12a>
			nValue.pwmValue[nValue.motor_id] += ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 2 : 1);
 8002f42:	b292      	uxth	r2, r2
 8002f44:	4832      	ldr	r0, [pc, #200]	; (8003010 <run_motor+0x1d8>)
 8002f46:	6841      	ldr	r1, [r0, #4]
 8002f48:	69c0      	ldr	r0, [r0, #28]
 8002f4a:	1a09      	subs	r1, r1, r0
 8002f4c:	2900      	cmp	r1, #0
 8002f4e:	dd06      	ble.n	8002f5e <run_motor+0x126>
 8002f50:	2102      	movs	r1, #2
 8002f52:	3304      	adds	r3, #4
 8002f54:	005b      	lsls	r3, r3, #1
 8002f56:	1852      	adds	r2, r2, r1
 8002f58:	492c      	ldr	r1, [pc, #176]	; (800300c <run_motor+0x1d4>)
 8002f5a:	525a      	strh	r2, [r3, r1]
 8002f5c:	e7bf      	b.n	8002ede <run_motor+0xa6>
 8002f5e:	2101      	movs	r1, #1
 8002f60:	e7f7      	b.n	8002f52 <run_motor+0x11a>
			nValue.pwmValue[nValue.motor_id] -= ((halsensor[0][0].Counter - halsensor[1][0].Counter) > 0 ? 1 : 2);
 8002f62:	b292      	uxth	r2, r2
 8002f64:	482a      	ldr	r0, [pc, #168]	; (8003010 <run_motor+0x1d8>)
 8002f66:	6841      	ldr	r1, [r0, #4]
 8002f68:	69c0      	ldr	r0, [r0, #28]
 8002f6a:	1a09      	subs	r1, r1, r0
 8002f6c:	2900      	cmp	r1, #0
 8002f6e:	dd06      	ble.n	8002f7e <run_motor+0x146>
 8002f70:	2101      	movs	r1, #1
 8002f72:	3304      	adds	r3, #4
 8002f74:	005b      	lsls	r3, r3, #1
 8002f76:	1a52      	subs	r2, r2, r1
 8002f78:	4924      	ldr	r1, [pc, #144]	; (800300c <run_motor+0x1d4>)
 8002f7a:	525a      	strh	r2, [r3, r1]
 8002f7c:	e7af      	b.n	8002ede <run_motor+0xa6>
 8002f7e:	2102      	movs	r1, #2
 8002f80:	e7f7      	b.n	8002f72 <run_motor+0x13a>
			if ((trig_dw.Active == HOLDTRIG || (trig_up.Active == HOLDTRIG && halsensor[nValue.motor_id][0].Counter < sInput.highest_position))
 8002f82:	4929      	ldr	r1, [pc, #164]	; (8003028 <run_motor+0x1f0>)
 8002f84:	8b89      	ldrh	r1, [r1, #28]
 8002f86:	4288      	cmp	r0, r1
 8002f88:	db00      	blt.n	8002f8c <run_motor+0x154>
 8002f8a:	e797      	b.n	8002ebc <run_motor+0x84>
					&& (nValue.Status[nValue.motor_id] == nValue.LastStatus[nValue.motor_id])
 8002f8c:	491f      	ldr	r1, [pc, #124]	; (800300c <run_motor+0x1d4>)
 8002f8e:	0058      	lsls	r0, r3, #1
 8002f90:	5e44      	ldrsh	r4, [r0, r1]
 8002f92:	1809      	adds	r1, r1, r0
 8002f94:	2004      	movs	r0, #4
 8002f96:	5e09      	ldrsh	r1, [r1, r0]
 8002f98:	428c      	cmp	r4, r1
 8002f9a:	d000      	beq.n	8002f9e <run_motor+0x166>
 8002f9c:	e78e      	b.n	8002ebc <run_motor+0x84>
				if (nValue.pwmValue[nValue.motor_id] < DUTY_MAX - 1) {
 8002f9e:	1d19      	adds	r1, r3, #4
 8002fa0:	0049      	lsls	r1, r1, #1
 8002fa2:	481a      	ldr	r0, [pc, #104]	; (800300c <run_motor+0x1d4>)
 8002fa4:	5e09      	ldrsh	r1, [r1, r0]
 8002fa6:	2962      	cmp	r1, #98	; 0x62
 8002fa8:	dc0b      	bgt.n	8002fc2 <run_motor+0x18a>
					nValue.pwmValue[nValue.motor_id] += (dif > 0 ? 1:2);
 8002faa:	b289      	uxth	r1, r1
 8002fac:	2a00      	cmp	r2, #0
 8002fae:	dd06      	ble.n	8002fbe <run_motor+0x186>
 8002fb0:	2201      	movs	r2, #1
 8002fb2:	3304      	adds	r3, #4
 8002fb4:	005b      	lsls	r3, r3, #1
 8002fb6:	1889      	adds	r1, r1, r2
 8002fb8:	4a14      	ldr	r2, [pc, #80]	; (800300c <run_motor+0x1d4>)
 8002fba:	5299      	strh	r1, [r3, r2]
 8002fbc:	e78f      	b.n	8002ede <run_motor+0xa6>
 8002fbe:	2202      	movs	r2, #2
 8002fc0:	e7f7      	b.n	8002fb2 <run_motor+0x17a>
					if( dif > 0){
 8002fc2:	2a00      	cmp	r2, #0
 8002fc4:	dd05      	ble.n	8002fd2 <run_motor+0x19a>
						nValue.pwmValue[nValue.motor_id] -= 1;
 8002fc6:	3304      	adds	r3, #4
 8002fc8:	005b      	lsls	r3, r3, #1
 8002fca:	3901      	subs	r1, #1
 8002fcc:	4a0f      	ldr	r2, [pc, #60]	; (800300c <run_motor+0x1d4>)
 8002fce:	5299      	strh	r1, [r3, r2]
 8002fd0:	e785      	b.n	8002ede <run_motor+0xa6>
						nValue.pwmValue[!nValue.motor_id] -= 1;
 8002fd2:	4a0e      	ldr	r2, [pc, #56]	; (800300c <run_motor+0x1d4>)
 8002fd4:	3604      	adds	r6, #4
 8002fd6:	0076      	lsls	r6, r6, #1
 8002fd8:	5ab3      	ldrh	r3, [r6, r2]
 8002fda:	3b01      	subs	r3, #1
 8002fdc:	52b3      	strh	r3, [r6, r2]
 8002fde:	e77e      	b.n	8002ede <run_motor+0xa6>
					nValue.pwmValue[nValue.motor_id] -= (dif > 0 ? 5:4);
 8002fe0:	2204      	movs	r2, #4
 8002fe2:	e777      	b.n	8002ed4 <run_motor+0x9c>
					set_stop_motor();
 8002fe4:	f7ff fec4 	bl	8002d70 <set_stop_motor>
 8002fe8:	e779      	b.n	8002ede <run_motor+0xa6>
		halsensor[1][0].Counter = 0;
 8002fea:	4b09      	ldr	r3, [pc, #36]	; (8003010 <run_motor+0x1d8>)
 8002fec:	2200      	movs	r2, #0
 8002fee:	61da      	str	r2, [r3, #28]
 8002ff0:	e77c      	b.n	8002eec <run_motor+0xb4>
		halsensor[0][0].Counter = 0;
 8002ff2:	4b07      	ldr	r3, [pc, #28]	; (8003010 <run_motor+0x1d8>)
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	605a      	str	r2, [r3, #4]
 8002ff8:	e77f      	b.n	8002efa <run_motor+0xc2>
			nValue.pwmValue[0] = DUTY_MIN;
 8002ffa:	4b04      	ldr	r3, [pc, #16]	; (800300c <run_motor+0x1d4>)
 8002ffc:	2200      	movs	r2, #0
 8002ffe:	811a      	strh	r2, [r3, #8]
 8003000:	e781      	b.n	8002f06 <run_motor+0xce>
			nValue.pwmValue[1] = DUTY_MIN;
 8003002:	4b02      	ldr	r3, [pc, #8]	; (800300c <run_motor+0x1d4>)
 8003004:	2200      	movs	r2, #0
 8003006:	815a      	strh	r2, [r3, #10]
 8003008:	e783      	b.n	8002f12 <run_motor+0xda>
 800300a:	46c0      	nop			; (mov r8, r8)
 800300c:	20000594 	.word	0x20000594
 8003010:	200004f0 	.word	0x200004f0
 8003014:	200004ec 	.word	0x200004ec
 8003018:	20000538 	.word	0x20000538
 800301c:	48000800 	.word	0x48000800
 8003020:	48000400 	.word	0x48000400
 8003024:	0000ffff 	.word	0x0000ffff
 8003028:	20000574 	.word	0x20000574

0800302c <MX_GPIO_Init>:
 800302c:	b570      	push	{r4, r5, r6, lr}
 800302e:	b08a      	sub	sp, #40	; 0x28
 8003030:	2214      	movs	r2, #20
 8003032:	2100      	movs	r1, #0
 8003034:	a805      	add	r0, sp, #20
 8003036:	f000 fe11 	bl	8003c5c <memset>
 800303a:	4b24      	ldr	r3, [pc, #144]	; (80030cc <MX_GPIO_Init+0xa0>)
 800303c:	6959      	ldr	r1, [r3, #20]
 800303e:	2080      	movs	r0, #128	; 0x80
 8003040:	03c0      	lsls	r0, r0, #15
 8003042:	4301      	orrs	r1, r0
 8003044:	6159      	str	r1, [r3, #20]
 8003046:	695a      	ldr	r2, [r3, #20]
 8003048:	4002      	ands	r2, r0
 800304a:	9201      	str	r2, [sp, #4]
 800304c:	9a01      	ldr	r2, [sp, #4]
 800304e:	6959      	ldr	r1, [r3, #20]
 8003050:	2080      	movs	r0, #128	; 0x80
 8003052:	0300      	lsls	r0, r0, #12
 8003054:	4301      	orrs	r1, r0
 8003056:	6159      	str	r1, [r3, #20]
 8003058:	695a      	ldr	r2, [r3, #20]
 800305a:	4002      	ands	r2, r0
 800305c:	9202      	str	r2, [sp, #8]
 800305e:	9a02      	ldr	r2, [sp, #8]
 8003060:	6959      	ldr	r1, [r3, #20]
 8003062:	2080      	movs	r0, #128	; 0x80
 8003064:	0280      	lsls	r0, r0, #10
 8003066:	4301      	orrs	r1, r0
 8003068:	6159      	str	r1, [r3, #20]
 800306a:	695a      	ldr	r2, [r3, #20]
 800306c:	4002      	ands	r2, r0
 800306e:	9203      	str	r2, [sp, #12]
 8003070:	9a03      	ldr	r2, [sp, #12]
 8003072:	695a      	ldr	r2, [r3, #20]
 8003074:	2180      	movs	r1, #128	; 0x80
 8003076:	02c9      	lsls	r1, r1, #11
 8003078:	430a      	orrs	r2, r1
 800307a:	615a      	str	r2, [r3, #20]
 800307c:	695b      	ldr	r3, [r3, #20]
 800307e:	400b      	ands	r3, r1
 8003080:	9304      	str	r3, [sp, #16]
 8003082:	9b04      	ldr	r3, [sp, #16]
 8003084:	26fc      	movs	r6, #252	; 0xfc
 8003086:	0236      	lsls	r6, r6, #8
 8003088:	4d11      	ldr	r5, [pc, #68]	; (80030d0 <MX_GPIO_Init+0xa4>)
 800308a:	2200      	movs	r2, #0
 800308c:	0031      	movs	r1, r6
 800308e:	0028      	movs	r0, r5
 8003090:	f7fd fa47 	bl	8000522 <HAL_GPIO_WritePin>
 8003094:	4b0f      	ldr	r3, [pc, #60]	; (80030d4 <MX_GPIO_Init+0xa8>)
 8003096:	9305      	str	r3, [sp, #20]
 8003098:	2400      	movs	r4, #0
 800309a:	9406      	str	r4, [sp, #24]
 800309c:	9407      	str	r4, [sp, #28]
 800309e:	a905      	add	r1, sp, #20
 80030a0:	480d      	ldr	r0, [pc, #52]	; (80030d8 <MX_GPIO_Init+0xac>)
 80030a2:	f7fd f971 	bl	8000388 <HAL_GPIO_Init>
 80030a6:	9605      	str	r6, [sp, #20]
 80030a8:	2301      	movs	r3, #1
 80030aa:	9306      	str	r3, [sp, #24]
 80030ac:	9407      	str	r4, [sp, #28]
 80030ae:	9408      	str	r4, [sp, #32]
 80030b0:	a905      	add	r1, sp, #20
 80030b2:	0028      	movs	r0, r5
 80030b4:	f7fd f968 	bl	8000388 <HAL_GPIO_Init>
 80030b8:	23c0      	movs	r3, #192	; 0xc0
 80030ba:	9305      	str	r3, [sp, #20]
 80030bc:	9406      	str	r4, [sp, #24]
 80030be:	9407      	str	r4, [sp, #28]
 80030c0:	a905      	add	r1, sp, #20
 80030c2:	0028      	movs	r0, r5
 80030c4:	f7fd f960 	bl	8000388 <HAL_GPIO_Init>
 80030c8:	b00a      	add	sp, #40	; 0x28
 80030ca:	bd70      	pop	{r4, r5, r6, pc}
 80030cc:	40021000 	.word	0x40021000
 80030d0:	48000400 	.word	0x48000400
 80030d4:	00000c6f 	.word	0x00000c6f
 80030d8:	48000800 	.word	0x48000800

080030dc <Save_single_value>:
 * @param 	address - Index of address
 * @param 	value - pointer value
 * @retval  none
 */
void Save_single_value(int16_t address, uint16_t *value)
{
 80030dc:	b510      	push	{r4, lr}
	WRITE_PARAMETER(address*2, (uint8_t *)value, 2);
 80030de:	0040      	lsls	r0, r0, #1
 80030e0:	b280      	uxth	r0, r0
 80030e2:	2202      	movs	r2, #2
 80030e4:	f7ff fdcf 	bl	8002c86 <FM25LXX_SaveData>
}
 80030e8:	bd10      	pop	{r4, pc}

080030ea <Save_single_value_byReg>:
//		if(nValue.ENCdiv.Word > LIMIT_MAX_ENC_DIV) nValue.ENCdiv.Word = LIMIT_MAX_ENC_DIV;
//		else if(nValue.ENCdiv.Word < LIMIT_MIN_ENC_DIV) nValue.ENCdiv.Word = LIMIT_MIN_ENC_DIV;
//		WRITE_PARAMETER(EEP_ENCDIV	* 2, (uint8_t *)&nValue.ENCdiv.Word,	4);
//		break;
//	}
}
 80030ea:	4770      	bx	lr

080030ec <user_pwm_setvalue>:

/* Private user code ---------------------------------------------------------*/
/* USER CODE BEGIN 0 */

void user_pwm_setvalue(uint16_t value, uint16_t channel)
{
 80030ec:	b530      	push	{r4, r5, lr}
 80030ee:	b089      	sub	sp, #36	; 0x24
    TIM_OC_InitTypeDef sConfigOC;

    sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80030f0:	2360      	movs	r3, #96	; 0x60
 80030f2:	9301      	str	r3, [sp, #4]
    sConfigOC.Pulse = value;
 80030f4:	9002      	str	r0, [sp, #8]
    sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80030f6:	2300      	movs	r3, #0
 80030f8:	9303      	str	r3, [sp, #12]
    sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80030fa:	9305      	str	r3, [sp, #20]
    HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, !channel? TIM_CHANNEL_1 : TIM_CHANNEL_2);
 80030fc:	2900      	cmp	r1, #0
 80030fe:	d00c      	beq.n	800311a <user_pwm_setvalue+0x2e>
 8003100:	2504      	movs	r5, #4
 8003102:	4c07      	ldr	r4, [pc, #28]	; (8003120 <user_pwm_setvalue+0x34>)
 8003104:	002a      	movs	r2, r5
 8003106:	a901      	add	r1, sp, #4
 8003108:	0020      	movs	r0, r4
 800310a:	f7fe fae3 	bl	80016d4 <HAL_TIM_PWM_ConfigChannel>
    HAL_TIM_PWM_Start(&htim3,  !channel? TIM_CHANNEL_1 : TIM_CHANNEL_2);
 800310e:	0029      	movs	r1, r5
 8003110:	0020      	movs	r0, r4
 8003112:	f7fe fc71 	bl	80019f8 <HAL_TIM_PWM_Start>
}
 8003116:	b009      	add	sp, #36	; 0x24
 8003118:	bd30      	pop	{r4, r5, pc}
    HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, !channel? TIM_CHANNEL_1 : TIM_CHANNEL_2);
 800311a:	2500      	movs	r5, #0
 800311c:	e7f1      	b.n	8003102 <user_pwm_setvalue+0x16>
 800311e:	46c0      	nop			; (mov r8, r8)
 8003120:	200006a8 	.word	0x200006a8

08003124 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003124:	b530      	push	{r4, r5, lr}
 8003126:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003128:	2228      	movs	r2, #40	; 0x28
 800312a:	2100      	movs	r1, #0
 800312c:	a80a      	add	r0, sp, #40	; 0x28
 800312e:	f000 fd95 	bl	8003c5c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003132:	2210      	movs	r2, #16
 8003134:	2100      	movs	r1, #0
 8003136:	a804      	add	r0, sp, #16
 8003138:	f000 fd90 	bl	8003c5c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 800313c:	2210      	movs	r2, #16
 800313e:	2100      	movs	r1, #0
 8003140:	4668      	mov	r0, sp
 8003142:	f000 fd8b 	bl	8003c5c <memset>

  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8003146:	2501      	movs	r5, #1
 8003148:	9508      	str	r5, [sp, #32]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800314a:	9509      	str	r5, [sp, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800314c:	2402      	movs	r4, #2
 800314e:	9410      	str	r4, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8003150:	2380      	movs	r3, #128	; 0x80
 8003152:	025b      	lsls	r3, r3, #9
 8003154:	9311      	str	r3, [sp, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL6;
 8003156:	2380      	movs	r3, #128	; 0x80
 8003158:	035b      	lsls	r3, r3, #13
 800315a:	9312      	str	r3, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PREDIV = RCC_PREDIV_DIV1;
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800315c:	a808      	add	r0, sp, #32
 800315e:	f7fd f9e7 	bl	8000530 <HAL_RCC_OscConfig>
  {
    Error_Handler();
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003162:	2307      	movs	r3, #7
 8003164:	9304      	str	r3, [sp, #16]
                              |RCC_CLOCKTYPE_PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003166:	9405      	str	r4, [sp, #20]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003168:	2400      	movs	r4, #0
 800316a:	9406      	str	r4, [sp, #24]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800316c:	9407      	str	r4, [sp, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 800316e:	2101      	movs	r1, #1
 8003170:	a804      	add	r0, sp, #16
 8003172:	f7fd fc61 	bl	8000a38 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8003176:	9500      	str	r5, [sp, #0]
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 8003178:	9402      	str	r4, [sp, #8]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800317a:	4668      	mov	r0, sp
 800317c:	f7fd fd0a 	bl	8000b94 <HAL_RCCEx_PeriphCLKConfig>
  {
    Error_Handler();
  }
}
 8003180:	b015      	add	sp, #84	; 0x54
 8003182:	bd30      	pop	{r4, r5, pc}

08003184 <main>:
{
 8003184:	b510      	push	{r4, lr}
  HAL_Init();
 8003186:	f7fd f871 	bl	800026c <HAL_Init>
  SystemClock_Config();
 800318a:	f7ff ffcb 	bl	8003124 <SystemClock_Config>
  MX_GPIO_Init();
 800318e:	f7ff ff4d 	bl	800302c <MX_GPIO_Init>
  MX_SPI1_Init();
 8003192:	f000 f855 	bl	8003240 <MX_SPI1_Init>
  MX_TIM3_Init();
 8003196:	f000 fbc9 	bl	800392c <MX_TIM3_Init>
  MX_USART1_UART_Init();
 800319a:	f000 fc2f 	bl	80039fc <MX_USART1_UART_Init>
  MX_TIM6_Init();
 800319e:	f000 f99b 	bl	80034d8 <MX_TIM6_Init>
  MX_TIM14_Init();
 80031a2:	f000 f9b1 	bl	8003508 <MX_TIM14_Init>
  MX_TIM1_Init();
 80031a6:	f000 f949 	bl	800343c <MX_TIM1_Init>
  MX_TIM15_Init();
 80031aa:	f000 f9c5 	bl	8003538 <MX_TIM15_Init>
  MX_TIM16_Init();
 80031ae:	f000 fa11 	bl	80035d4 <MX_TIM16_Init>
  MX_TIM17_Init();
 80031b2:	f000 fa49 	bl	8003648 <MX_TIM17_Init>
  HAL_Delay(1000);
 80031b6:	20fa      	movs	r0, #250	; 0xfa
 80031b8:	0080      	lsls	r0, r0, #2
 80031ba:	f7fd f879 	bl	80002b0 <HAL_Delay>
  HAL_TIM_Base_Start_IT(&htim3);
 80031be:	4817      	ldr	r0, [pc, #92]	; (800321c <main+0x98>)
 80031c0:	f7fe f8e8 	bl	8001394 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim6);
 80031c4:	4816      	ldr	r0, [pc, #88]	; (8003220 <main+0x9c>)
 80031c6:	f7fe f8e5 	bl	8001394 <HAL_TIM_Base_Start_IT>
  HAL_TIM_Base_Start_IT(&htim14);
 80031ca:	4816      	ldr	r0, [pc, #88]	; (8003224 <main+0xa0>)
 80031cc:	f7fe f8e2 	bl	8001394 <HAL_TIM_Base_Start_IT>
  HAL_TIM_IC_Start_IT(&htim16, TIM_CHANNEL_1);
 80031d0:	2100      	movs	r1, #0
 80031d2:	4815      	ldr	r0, [pc, #84]	; (8003228 <main+0xa4>)
 80031d4:	f7fe fc3c 	bl	8001a50 <HAL_TIM_IC_Start_IT>
  HAL_TIM_IC_Start_IT(&htim17, TIM_CHANNEL_1);
 80031d8:	2100      	movs	r1, #0
 80031da:	4814      	ldr	r0, [pc, #80]	; (800322c <main+0xa8>)
 80031dc:	f7fe fc38 	bl	8001a50 <HAL_TIM_IC_Start_IT>
  __HAL_UART_ENABLE_IT(&huart1, UART_IT_RXNE);
 80031e0:	4b13      	ldr	r3, [pc, #76]	; (8003230 <main+0xac>)
 80031e2:	681a      	ldr	r2, [r3, #0]
 80031e4:	6813      	ldr	r3, [r2, #0]
 80031e6:	2120      	movs	r1, #32
 80031e8:	430b      	orrs	r3, r1
 80031ea:	6013      	str	r3, [r2, #0]
  while (HAL_UART_Receive_IT(&huart1, (uint8_t *)&rxBuffer_modbus1, 1)!= HAL_OK)
 80031ec:	2201      	movs	r2, #1
 80031ee:	4911      	ldr	r1, [pc, #68]	; (8003234 <main+0xb0>)
 80031f0:	480f      	ldr	r0, [pc, #60]	; (8003230 <main+0xac>)
 80031f2:	f7fe fd1f 	bl	8001c34 <HAL_UART_Receive_IT>
 80031f6:	2800      	cmp	r0, #0
 80031f8:	d1f8      	bne.n	80031ec <main+0x68>
  Reset_default_position();
 80031fa:	f7ff fd59 	bl	8002cb0 <Reset_default_position>
		run_Input();
 80031fe:	f7ff fc39 	bl	8002a74 <run_Input>
		run_motor(0);
 8003202:	2000      	movs	r0, #0
 8003204:	f7ff fe18 	bl	8002e38 <run_motor>
		run_motor(1);
 8003208:	2001      	movs	r0, #1
 800320a:	f7ff fe15 	bl	8002e38 <run_motor>
		run_Output(&sOutput);
 800320e:	480a      	ldr	r0, [pc, #40]	; (8003238 <main+0xb4>)
 8003210:	f7ff fcce 	bl	8002bb0 <run_Output>
	 HAL_Delay(50);
 8003214:	2032      	movs	r0, #50	; 0x32
 8003216:	f7fd f84b 	bl	80002b0 <HAL_Delay>
 800321a:	e7f0      	b.n	80031fe <main+0x7a>
 800321c:	200006a8 	.word	0x200006a8
 8003220:	200006e8 	.word	0x200006e8
 8003224:	20000768 	.word	0x20000768
 8003228:	200007a8 	.word	0x200007a8
 800322c:	20000668 	.word	0x20000668
 8003230:	200007e8 	.word	0x200007e8
 8003234:	200004b4 	.word	0x200004b4
 8003238:	20000564 	.word	0x20000564

0800323c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800323c:	4770      	bx	lr
	...

08003240 <MX_SPI1_Init>:
 8003240:	b510      	push	{r4, lr}
 8003242:	4811      	ldr	r0, [pc, #68]	; (8003288 <MX_SPI1_Init+0x48>)
 8003244:	4b11      	ldr	r3, [pc, #68]	; (800328c <MX_SPI1_Init+0x4c>)
 8003246:	6003      	str	r3, [r0, #0]
 8003248:	2382      	movs	r3, #130	; 0x82
 800324a:	005b      	lsls	r3, r3, #1
 800324c:	6043      	str	r3, [r0, #4]
 800324e:	2300      	movs	r3, #0
 8003250:	6083      	str	r3, [r0, #8]
 8003252:	22c0      	movs	r2, #192	; 0xc0
 8003254:	0092      	lsls	r2, r2, #2
 8003256:	60c2      	str	r2, [r0, #12]
 8003258:	6103      	str	r3, [r0, #16]
 800325a:	6143      	str	r3, [r0, #20]
 800325c:	2280      	movs	r2, #128	; 0x80
 800325e:	02d2      	lsls	r2, r2, #11
 8003260:	6182      	str	r2, [r0, #24]
 8003262:	2218      	movs	r2, #24
 8003264:	61c2      	str	r2, [r0, #28]
 8003266:	6203      	str	r3, [r0, #32]
 8003268:	6243      	str	r3, [r0, #36]	; 0x24
 800326a:	6283      	str	r3, [r0, #40]	; 0x28
 800326c:	3a11      	subs	r2, #17
 800326e:	62c2      	str	r2, [r0, #44]	; 0x2c
 8003270:	6303      	str	r3, [r0, #48]	; 0x30
 8003272:	3308      	adds	r3, #8
 8003274:	6343      	str	r3, [r0, #52]	; 0x34
 8003276:	f7fd fdef 	bl	8000e58 <HAL_SPI_Init>
 800327a:	2800      	cmp	r0, #0
 800327c:	d100      	bne.n	8003280 <MX_SPI1_Init+0x40>
 800327e:	bd10      	pop	{r4, pc}
 8003280:	f7ff ffdc 	bl	800323c <Error_Handler>
 8003284:	e7fb      	b.n	800327e <MX_SPI1_Init+0x3e>
 8003286:	46c0      	nop			; (mov r8, r8)
 8003288:	200005c4 	.word	0x200005c4
 800328c:	40013000 	.word	0x40013000

08003290 <HAL_SPI_MspInit>:
 8003290:	b510      	push	{r4, lr}
 8003292:	b088      	sub	sp, #32
 8003294:	0004      	movs	r4, r0
 8003296:	2214      	movs	r2, #20
 8003298:	2100      	movs	r1, #0
 800329a:	a803      	add	r0, sp, #12
 800329c:	f000 fcde 	bl	8003c5c <memset>
 80032a0:	6822      	ldr	r2, [r4, #0]
 80032a2:	4b12      	ldr	r3, [pc, #72]	; (80032ec <HAL_SPI_MspInit+0x5c>)
 80032a4:	429a      	cmp	r2, r3
 80032a6:	d001      	beq.n	80032ac <HAL_SPI_MspInit+0x1c>
 80032a8:	b008      	add	sp, #32
 80032aa:	bd10      	pop	{r4, pc}
 80032ac:	4b10      	ldr	r3, [pc, #64]	; (80032f0 <HAL_SPI_MspInit+0x60>)
 80032ae:	6999      	ldr	r1, [r3, #24]
 80032b0:	2080      	movs	r0, #128	; 0x80
 80032b2:	0140      	lsls	r0, r0, #5
 80032b4:	4301      	orrs	r1, r0
 80032b6:	6199      	str	r1, [r3, #24]
 80032b8:	699a      	ldr	r2, [r3, #24]
 80032ba:	4002      	ands	r2, r0
 80032bc:	9201      	str	r2, [sp, #4]
 80032be:	9a01      	ldr	r2, [sp, #4]
 80032c0:	695a      	ldr	r2, [r3, #20]
 80032c2:	2180      	movs	r1, #128	; 0x80
 80032c4:	0289      	lsls	r1, r1, #10
 80032c6:	430a      	orrs	r2, r1
 80032c8:	615a      	str	r2, [r3, #20]
 80032ca:	695b      	ldr	r3, [r3, #20]
 80032cc:	400b      	ands	r3, r1
 80032ce:	9302      	str	r3, [sp, #8]
 80032d0:	9b02      	ldr	r3, [sp, #8]
 80032d2:	23f0      	movs	r3, #240	; 0xf0
 80032d4:	9303      	str	r3, [sp, #12]
 80032d6:	3bee      	subs	r3, #238	; 0xee
 80032d8:	9304      	str	r3, [sp, #16]
 80032da:	3301      	adds	r3, #1
 80032dc:	9306      	str	r3, [sp, #24]
 80032de:	2090      	movs	r0, #144	; 0x90
 80032e0:	a903      	add	r1, sp, #12
 80032e2:	05c0      	lsls	r0, r0, #23
 80032e4:	f7fd f850 	bl	8000388 <HAL_GPIO_Init>
 80032e8:	e7de      	b.n	80032a8 <HAL_SPI_MspInit+0x18>
 80032ea:	46c0      	nop			; (mov r8, r8)
 80032ec:	40013000 	.word	0x40013000
 80032f0:	40021000 	.word	0x40021000

080032f4 <HAL_MspInit>:
 80032f4:	b500      	push	{lr}
 80032f6:	b083      	sub	sp, #12
 80032f8:	4b0d      	ldr	r3, [pc, #52]	; (8003330 <HAL_MspInit+0x3c>)
 80032fa:	6999      	ldr	r1, [r3, #24]
 80032fc:	2201      	movs	r2, #1
 80032fe:	4311      	orrs	r1, r2
 8003300:	6199      	str	r1, [r3, #24]
 8003302:	6999      	ldr	r1, [r3, #24]
 8003304:	400a      	ands	r2, r1
 8003306:	9200      	str	r2, [sp, #0]
 8003308:	9a00      	ldr	r2, [sp, #0]
 800330a:	69da      	ldr	r2, [r3, #28]
 800330c:	2180      	movs	r1, #128	; 0x80
 800330e:	0549      	lsls	r1, r1, #21
 8003310:	430a      	orrs	r2, r1
 8003312:	61da      	str	r2, [r3, #28]
 8003314:	69db      	ldr	r3, [r3, #28]
 8003316:	400b      	ands	r3, r1
 8003318:	9301      	str	r3, [sp, #4]
 800331a:	9b01      	ldr	r3, [sp, #4]
 800331c:	2200      	movs	r2, #0
 800331e:	2100      	movs	r1, #0
 8003320:	2004      	movs	r0, #4
 8003322:	f7fc ffd7 	bl	80002d4 <HAL_NVIC_SetPriority>
 8003326:	2004      	movs	r0, #4
 8003328:	f7fd f806 	bl	8000338 <HAL_NVIC_EnableIRQ>
 800332c:	b003      	add	sp, #12
 800332e:	bd00      	pop	{pc}
 8003330:	40021000 	.word	0x40021000

08003334 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8003334:	4770      	bx	lr

08003336 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003336:	e7fe      	b.n	8003336 <HardFault_Handler>

08003338 <SVC_Handler>:

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8003338:	4770      	bx	lr

0800333a <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800333a:	4770      	bx	lr

0800333c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800333c:	b510      	push	{r4, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800333e:	f7fc ffa5 	bl	800028c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003342:	bd10      	pop	{r4, pc}

08003344 <RCC_IRQHandler>:

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 8003344:	4770      	bx	lr
	...

08003348 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 8003348:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 800334a:	4802      	ldr	r0, [pc, #8]	; (8003354 <TIM1_CC_IRQHandler+0xc>)
 800334c:	f7fe f838 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 8003350:	bd10      	pop	{r4, pc}
 8003352:	46c0      	nop			; (mov r8, r8)
 8003354:	20000728 	.word	0x20000728

08003358 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8003358:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 800335a:	4803      	ldr	r0, [pc, #12]	; (8003368 <TIM3_IRQHandler+0x10>)
 800335c:	f7fe f830 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */
  run_modbus();
 8003360:	f7ff fa50 	bl	8002804 <run_modbus>
  /* USER CODE END TIM3_IRQn 1 */
}
 8003364:	bd10      	pop	{r4, pc}
 8003366:	46c0      	nop			; (mov r8, r8)
 8003368:	200006a8 	.word	0x200006a8

0800336c <TIM6_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt.
  */
void TIM6_IRQHandler(void)
{
 800336c:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM6_IRQn 0 */

  /* USER CODE END TIM6_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 800336e:	4802      	ldr	r0, [pc, #8]	; (8003378 <TIM6_IRQHandler+0xc>)
 8003370:	f7fe f826 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_IRQn 1 */

  /* USER CODE END TIM6_IRQn 1 */
}
 8003374:	bd10      	pop	{r4, pc}
 8003376:	46c0      	nop			; (mov r8, r8)
 8003378:	200006e8 	.word	0x200006e8

0800337c <TIM14_IRQHandler>:

/**
  * @brief This function handles TIM14 global interrupt.
  */
void TIM14_IRQHandler(void)
{
 800337c:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM14_IRQn 0 */
  /* USER CODE END TIM14_IRQn 0 */
  HAL_TIM_IRQHandler(&htim14);
 800337e:	4803      	ldr	r0, [pc, #12]	; (800338c <TIM14_IRQHandler+0x10>)
 8003380:	f7fe f81e 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM14_IRQn 1 */

  run_Count();
 8003384:	f7ff fba6 	bl	8002ad4 <run_Count>

  /* USER CODE END TIM14_IRQn 1 */
}
 8003388:	bd10      	pop	{r4, pc}
 800338a:	46c0      	nop			; (mov r8, r8)
 800338c:	20000768 	.word	0x20000768

08003390 <TIM15_IRQHandler>:

/**
  * @brief This function handles TIM15 global interrupt.
  */
void TIM15_IRQHandler(void)
{
 8003390:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM15_IRQn 0 */

  /* USER CODE END TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim15);
 8003392:	4802      	ldr	r0, [pc, #8]	; (800339c <TIM15_IRQHandler+0xc>)
 8003394:	f7fe f814 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM15_IRQn 1 */

  /* USER CODE END TIM15_IRQn 1 */
}
 8003398:	bd10      	pop	{r4, pc}
 800339a:	46c0      	nop			; (mov r8, r8)
 800339c:	20000628 	.word	0x20000628

080033a0 <TIM16_IRQHandler>:

/**
  * @brief This function handles TIM16 global interrupt.
  */
void TIM16_IRQHandler(void)
{
 80033a0:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM16_IRQn 0 */

  /* USER CODE END TIM16_IRQn 0 */
  HAL_TIM_IRQHandler(&htim16);
 80033a2:	480a      	ldr	r0, [pc, #40]	; (80033cc <TIM16_IRQHandler+0x2c>)
 80033a4:	f7fe f80c 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM16_IRQn 1 */
	if(nValue.LastStatus[1] == Move_up)
 80033a8:	4b09      	ldr	r3, [pc, #36]	; (80033d0 <TIM16_IRQHandler+0x30>)
 80033aa:	2206      	movs	r2, #6
 80033ac:	5e9b      	ldrsh	r3, [r3, r2]
 80033ae:	2b01      	cmp	r3, #1
 80033b0:	d002      	beq.n	80033b8 <TIM16_IRQHandler+0x18>
//		trig_H2[2].Counter += 1;
		halsensor[1][0].Counter += 1;
	else if(nValue.LastStatus[1] == Move_down)
 80033b2:	2b02      	cmp	r3, #2
 80033b4:	d005      	beq.n	80033c2 <TIM16_IRQHandler+0x22>
		halsensor[1][0].Counter -= 1;
  /* USER CODE END TIM16_IRQn 1 */
}
 80033b6:	bd10      	pop	{r4, pc}
		halsensor[1][0].Counter += 1;
 80033b8:	4a06      	ldr	r2, [pc, #24]	; (80033d4 <TIM16_IRQHandler+0x34>)
 80033ba:	69d3      	ldr	r3, [r2, #28]
 80033bc:	3301      	adds	r3, #1
 80033be:	61d3      	str	r3, [r2, #28]
 80033c0:	e7f9      	b.n	80033b6 <TIM16_IRQHandler+0x16>
		halsensor[1][0].Counter -= 1;
 80033c2:	4a04      	ldr	r2, [pc, #16]	; (80033d4 <TIM16_IRQHandler+0x34>)
 80033c4:	69d3      	ldr	r3, [r2, #28]
 80033c6:	3b01      	subs	r3, #1
 80033c8:	61d3      	str	r3, [r2, #28]
}
 80033ca:	e7f4      	b.n	80033b6 <TIM16_IRQHandler+0x16>
 80033cc:	200007a8 	.word	0x200007a8
 80033d0:	20000594 	.word	0x20000594
 80033d4:	200004f0 	.word	0x200004f0

080033d8 <TIM17_IRQHandler>:

/**
  * @brief This function handles TIM17 global interrupt.
  */
void TIM17_IRQHandler(void)
{
 80033d8:	b510      	push	{r4, lr}
  /* USER CODE BEGIN TIM17_IRQn 0 */

  /* USER CODE END TIM17_IRQn 0 */
  HAL_TIM_IRQHandler(&htim17);
 80033da:	480a      	ldr	r0, [pc, #40]	; (8003404 <TIM17_IRQHandler+0x2c>)
 80033dc:	f7fd fff0 	bl	80013c0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM17_IRQn 1 */
	if(nValue.LastStatus[0] == Move_up)
 80033e0:	4b09      	ldr	r3, [pc, #36]	; (8003408 <TIM17_IRQHandler+0x30>)
 80033e2:	2204      	movs	r2, #4
 80033e4:	5e9b      	ldrsh	r3, [r3, r2]
 80033e6:	2b01      	cmp	r3, #1
 80033e8:	d002      	beq.n	80033f0 <TIM17_IRQHandler+0x18>
//		trig_H2[2].Counter += 1;
		halsensor[0][0].Counter += 1;
	else if(nValue.LastStatus[0] == Move_down)
 80033ea:	2b02      	cmp	r3, #2
 80033ec:	d005      	beq.n	80033fa <TIM17_IRQHandler+0x22>
		halsensor[0][0].Counter -= 1;
  /* USER CODE END TIM17_IRQn 1 */
}
 80033ee:	bd10      	pop	{r4, pc}
		halsensor[0][0].Counter += 1;
 80033f0:	4a06      	ldr	r2, [pc, #24]	; (800340c <TIM17_IRQHandler+0x34>)
 80033f2:	6853      	ldr	r3, [r2, #4]
 80033f4:	3301      	adds	r3, #1
 80033f6:	6053      	str	r3, [r2, #4]
 80033f8:	e7f9      	b.n	80033ee <TIM17_IRQHandler+0x16>
		halsensor[0][0].Counter -= 1;
 80033fa:	4a04      	ldr	r2, [pc, #16]	; (800340c <TIM17_IRQHandler+0x34>)
 80033fc:	6853      	ldr	r3, [r2, #4]
 80033fe:	3b01      	subs	r3, #1
 8003400:	6053      	str	r3, [r2, #4]
}
 8003402:	e7f4      	b.n	80033ee <TIM17_IRQHandler+0x16>
 8003404:	20000668 	.word	0x20000668
 8003408:	20000594 	.word	0x20000594
 800340c:	200004f0 	.word	0x200004f0

08003410 <HAL_UART_RxCpltCallback>:

/* USER CODE BEGIN 1 */
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 8003410:	b510      	push	{r4, lr}
//	__HAL_UART_FLUSH_DRREGISTER(huart); // Clear the buffer to prevent overrun
	if (huart->Instance == USART1){
 8003412:	6802      	ldr	r2, [r0, #0]
 8003414:	4b05      	ldr	r3, [pc, #20]	; (800342c <HAL_UART_RxCpltCallback+0x1c>)
 8003416:	429a      	cmp	r2, r3
 8003418:	d000      	beq.n	800341c <HAL_UART_RxCpltCallback+0xc>
		if (HAL_UART_Receive_IT(&huart1, (uint8_t *)&rxBuffer_modbus1, 1)!= HAL_OK)
		{
//			Error_UART_Handler();
		}
	}
}
 800341a:	bd10      	pop	{r4, pc}
		MODBUS1_IT();
 800341c:	f7ff fa40 	bl	80028a0 <MODBUS1_IT>
		if (HAL_UART_Receive_IT(&huart1, (uint8_t *)&rxBuffer_modbus1, 1)!= HAL_OK)
 8003420:	2201      	movs	r2, #1
 8003422:	4903      	ldr	r1, [pc, #12]	; (8003430 <HAL_UART_RxCpltCallback+0x20>)
 8003424:	4803      	ldr	r0, [pc, #12]	; (8003434 <HAL_UART_RxCpltCallback+0x24>)
 8003426:	f7fe fc05 	bl	8001c34 <HAL_UART_Receive_IT>
}
 800342a:	e7f6      	b.n	800341a <HAL_UART_RxCpltCallback+0xa>
 800342c:	40013800 	.word	0x40013800
 8003430:	200004b4 	.word	0x200004b4
 8003434:	200007e8 	.word	0x200007e8

08003438 <HAL_TIM_IC_CaptureCallback>:
//			Frequency = HAL_RCC_GetPCLK1Freq()/Difference;  // calculate frequency
//			fFrequency = Frequency/10.0;
//			Is_First_Captured = 0;  // reset the first captured
//		}
//	}
}
 8003438:	4770      	bx	lr

0800343a <SystemInit>:
 800343a:	4770      	bx	lr

0800343c <MX_TIM1_Init>:
 800343c:	b500      	push	{lr}
 800343e:	b087      	sub	sp, #28
 8003440:	2208      	movs	r2, #8
 8003442:	2100      	movs	r1, #0
 8003444:	a804      	add	r0, sp, #16
 8003446:	f000 fc09 	bl	8003c5c <memset>
 800344a:	2210      	movs	r2, #16
 800344c:	2100      	movs	r1, #0
 800344e:	4668      	mov	r0, sp
 8003450:	f000 fc04 	bl	8003c5c <memset>
 8003454:	481d      	ldr	r0, [pc, #116]	; (80034cc <MX_TIM1_Init+0x90>)
 8003456:	4b1e      	ldr	r3, [pc, #120]	; (80034d0 <MX_TIM1_Init+0x94>)
 8003458:	6003      	str	r3, [r0, #0]
 800345a:	2301      	movs	r3, #1
 800345c:	6043      	str	r3, [r0, #4]
 800345e:	2300      	movs	r3, #0
 8003460:	6083      	str	r3, [r0, #8]
 8003462:	4a1c      	ldr	r2, [pc, #112]	; (80034d4 <MX_TIM1_Init+0x98>)
 8003464:	60c2      	str	r2, [r0, #12]
 8003466:	6103      	str	r3, [r0, #16]
 8003468:	6143      	str	r3, [r0, #20]
 800346a:	6183      	str	r3, [r0, #24]
 800346c:	f7fe f8d4 	bl	8001618 <HAL_TIM_IC_Init>
 8003470:	2800      	cmp	r0, #0
 8003472:	d11e      	bne.n	80034b2 <MX_TIM1_Init+0x76>
 8003474:	2300      	movs	r3, #0
 8003476:	9304      	str	r3, [sp, #16]
 8003478:	9305      	str	r3, [sp, #20]
 800347a:	a904      	add	r1, sp, #16
 800347c:	4813      	ldr	r0, [pc, #76]	; (80034cc <MX_TIM1_Init+0x90>)
 800347e:	f7fe fb19 	bl	8001ab4 <HAL_TIMEx_MasterConfigSynchronization>
 8003482:	2800      	cmp	r0, #0
 8003484:	d118      	bne.n	80034b8 <MX_TIM1_Init+0x7c>
 8003486:	2300      	movs	r3, #0
 8003488:	9300      	str	r3, [sp, #0]
 800348a:	2201      	movs	r2, #1
 800348c:	9201      	str	r2, [sp, #4]
 800348e:	9302      	str	r3, [sp, #8]
 8003490:	9303      	str	r3, [sp, #12]
 8003492:	2200      	movs	r2, #0
 8003494:	4669      	mov	r1, sp
 8003496:	480d      	ldr	r0, [pc, #52]	; (80034cc <MX_TIM1_Init+0x90>)
 8003498:	f7fe f9bc 	bl	8001814 <HAL_TIM_IC_ConfigChannel>
 800349c:	2800      	cmp	r0, #0
 800349e:	d10e      	bne.n	80034be <MX_TIM1_Init+0x82>
 80034a0:	220c      	movs	r2, #12
 80034a2:	4669      	mov	r1, sp
 80034a4:	4809      	ldr	r0, [pc, #36]	; (80034cc <MX_TIM1_Init+0x90>)
 80034a6:	f7fe f9b5 	bl	8001814 <HAL_TIM_IC_ConfigChannel>
 80034aa:	2800      	cmp	r0, #0
 80034ac:	d10a      	bne.n	80034c4 <MX_TIM1_Init+0x88>
 80034ae:	b007      	add	sp, #28
 80034b0:	bd00      	pop	{pc}
 80034b2:	f7ff fec3 	bl	800323c <Error_Handler>
 80034b6:	e7dd      	b.n	8003474 <MX_TIM1_Init+0x38>
 80034b8:	f7ff fec0 	bl	800323c <Error_Handler>
 80034bc:	e7e3      	b.n	8003486 <MX_TIM1_Init+0x4a>
 80034be:	f7ff febd 	bl	800323c <Error_Handler>
 80034c2:	e7ed      	b.n	80034a0 <MX_TIM1_Init+0x64>
 80034c4:	f7ff feba 	bl	800323c <Error_Handler>
 80034c8:	e7f1      	b.n	80034ae <MX_TIM1_Init+0x72>
 80034ca:	46c0      	nop			; (mov r8, r8)
 80034cc:	20000728 	.word	0x20000728
 80034d0:	40012c00 	.word	0x40012c00
 80034d4:	0000ffff 	.word	0x0000ffff

080034d8 <MX_TIM6_Init>:
 80034d8:	b510      	push	{r4, lr}
 80034da:	4809      	ldr	r0, [pc, #36]	; (8003500 <MX_TIM6_Init+0x28>)
 80034dc:	4b09      	ldr	r3, [pc, #36]	; (8003504 <MX_TIM6_Init+0x2c>)
 80034de:	6003      	str	r3, [r0, #0]
 80034e0:	2330      	movs	r3, #48	; 0x30
 80034e2:	6043      	str	r3, [r0, #4]
 80034e4:	2300      	movs	r3, #0
 80034e6:	6083      	str	r3, [r0, #8]
 80034e8:	2263      	movs	r2, #99	; 0x63
 80034ea:	60c2      	str	r2, [r0, #12]
 80034ec:	6183      	str	r3, [r0, #24]
 80034ee:	f7fe f85f 	bl	80015b0 <HAL_TIM_Base_Init>
 80034f2:	2800      	cmp	r0, #0
 80034f4:	d100      	bne.n	80034f8 <MX_TIM6_Init+0x20>
 80034f6:	bd10      	pop	{r4, pc}
 80034f8:	f7ff fea0 	bl	800323c <Error_Handler>
 80034fc:	e7fb      	b.n	80034f6 <MX_TIM6_Init+0x1e>
 80034fe:	46c0      	nop			; (mov r8, r8)
 8003500:	200006e8 	.word	0x200006e8
 8003504:	40001000 	.word	0x40001000

08003508 <MX_TIM14_Init>:
 8003508:	b510      	push	{r4, lr}
 800350a:	4809      	ldr	r0, [pc, #36]	; (8003530 <MX_TIM14_Init+0x28>)
 800350c:	4b09      	ldr	r3, [pc, #36]	; (8003534 <MX_TIM14_Init+0x2c>)
 800350e:	6003      	str	r3, [r0, #0]
 8003510:	2330      	movs	r3, #48	; 0x30
 8003512:	6043      	str	r3, [r0, #4]
 8003514:	2300      	movs	r3, #0
 8003516:	6083      	str	r3, [r0, #8]
 8003518:	2209      	movs	r2, #9
 800351a:	60c2      	str	r2, [r0, #12]
 800351c:	6103      	str	r3, [r0, #16]
 800351e:	6183      	str	r3, [r0, #24]
 8003520:	f7fe f846 	bl	80015b0 <HAL_TIM_Base_Init>
 8003524:	2800      	cmp	r0, #0
 8003526:	d100      	bne.n	800352a <MX_TIM14_Init+0x22>
 8003528:	bd10      	pop	{r4, pc}
 800352a:	f7ff fe87 	bl	800323c <Error_Handler>
 800352e:	e7fb      	b.n	8003528 <MX_TIM14_Init+0x20>
 8003530:	20000768 	.word	0x20000768
 8003534:	40002000 	.word	0x40002000

08003538 <MX_TIM15_Init>:
 8003538:	b500      	push	{lr}
 800353a:	b087      	sub	sp, #28
 800353c:	2208      	movs	r2, #8
 800353e:	2100      	movs	r1, #0
 8003540:	a804      	add	r0, sp, #16
 8003542:	f000 fb8b 	bl	8003c5c <memset>
 8003546:	2210      	movs	r2, #16
 8003548:	2100      	movs	r1, #0
 800354a:	4668      	mov	r0, sp
 800354c:	f000 fb86 	bl	8003c5c <memset>
 8003550:	481d      	ldr	r0, [pc, #116]	; (80035c8 <MX_TIM15_Init+0x90>)
 8003552:	4b1e      	ldr	r3, [pc, #120]	; (80035cc <MX_TIM15_Init+0x94>)
 8003554:	6003      	str	r3, [r0, #0]
 8003556:	2301      	movs	r3, #1
 8003558:	6043      	str	r3, [r0, #4]
 800355a:	2300      	movs	r3, #0
 800355c:	6083      	str	r3, [r0, #8]
 800355e:	4a1c      	ldr	r2, [pc, #112]	; (80035d0 <MX_TIM15_Init+0x98>)
 8003560:	60c2      	str	r2, [r0, #12]
 8003562:	6103      	str	r3, [r0, #16]
 8003564:	6143      	str	r3, [r0, #20]
 8003566:	6183      	str	r3, [r0, #24]
 8003568:	f7fe f856 	bl	8001618 <HAL_TIM_IC_Init>
 800356c:	2800      	cmp	r0, #0
 800356e:	d11e      	bne.n	80035ae <MX_TIM15_Init+0x76>
 8003570:	2300      	movs	r3, #0
 8003572:	9304      	str	r3, [sp, #16]
 8003574:	9305      	str	r3, [sp, #20]
 8003576:	a904      	add	r1, sp, #16
 8003578:	4813      	ldr	r0, [pc, #76]	; (80035c8 <MX_TIM15_Init+0x90>)
 800357a:	f7fe fa9b 	bl	8001ab4 <HAL_TIMEx_MasterConfigSynchronization>
 800357e:	2800      	cmp	r0, #0
 8003580:	d118      	bne.n	80035b4 <MX_TIM15_Init+0x7c>
 8003582:	2300      	movs	r3, #0
 8003584:	9300      	str	r3, [sp, #0]
 8003586:	2201      	movs	r2, #1
 8003588:	9201      	str	r2, [sp, #4]
 800358a:	9302      	str	r3, [sp, #8]
 800358c:	9303      	str	r3, [sp, #12]
 800358e:	2200      	movs	r2, #0
 8003590:	4669      	mov	r1, sp
 8003592:	480d      	ldr	r0, [pc, #52]	; (80035c8 <MX_TIM15_Init+0x90>)
 8003594:	f7fe f93e 	bl	8001814 <HAL_TIM_IC_ConfigChannel>
 8003598:	2800      	cmp	r0, #0
 800359a:	d10e      	bne.n	80035ba <MX_TIM15_Init+0x82>
 800359c:	2204      	movs	r2, #4
 800359e:	4669      	mov	r1, sp
 80035a0:	4809      	ldr	r0, [pc, #36]	; (80035c8 <MX_TIM15_Init+0x90>)
 80035a2:	f7fe f937 	bl	8001814 <HAL_TIM_IC_ConfigChannel>
 80035a6:	2800      	cmp	r0, #0
 80035a8:	d10a      	bne.n	80035c0 <MX_TIM15_Init+0x88>
 80035aa:	b007      	add	sp, #28
 80035ac:	bd00      	pop	{pc}
 80035ae:	f7ff fe45 	bl	800323c <Error_Handler>
 80035b2:	e7dd      	b.n	8003570 <MX_TIM15_Init+0x38>
 80035b4:	f7ff fe42 	bl	800323c <Error_Handler>
 80035b8:	e7e3      	b.n	8003582 <MX_TIM15_Init+0x4a>
 80035ba:	f7ff fe3f 	bl	800323c <Error_Handler>
 80035be:	e7ed      	b.n	800359c <MX_TIM15_Init+0x64>
 80035c0:	f7ff fe3c 	bl	800323c <Error_Handler>
 80035c4:	e7f1      	b.n	80035aa <MX_TIM15_Init+0x72>
 80035c6:	46c0      	nop			; (mov r8, r8)
 80035c8:	20000628 	.word	0x20000628
 80035cc:	40014000 	.word	0x40014000
 80035d0:	0000ffff 	.word	0x0000ffff

080035d4 <MX_TIM16_Init>:
 80035d4:	b500      	push	{lr}
 80035d6:	b085      	sub	sp, #20
 80035d8:	2210      	movs	r2, #16
 80035da:	2100      	movs	r1, #0
 80035dc:	4668      	mov	r0, sp
 80035de:	f000 fb3d 	bl	8003c5c <memset>
 80035e2:	4816      	ldr	r0, [pc, #88]	; (800363c <MX_TIM16_Init+0x68>)
 80035e4:	4b16      	ldr	r3, [pc, #88]	; (8003640 <MX_TIM16_Init+0x6c>)
 80035e6:	6003      	str	r3, [r0, #0]
 80035e8:	2301      	movs	r3, #1
 80035ea:	6043      	str	r3, [r0, #4]
 80035ec:	2300      	movs	r3, #0
 80035ee:	6083      	str	r3, [r0, #8]
 80035f0:	4a14      	ldr	r2, [pc, #80]	; (8003644 <MX_TIM16_Init+0x70>)
 80035f2:	60c2      	str	r2, [r0, #12]
 80035f4:	6103      	str	r3, [r0, #16]
 80035f6:	6143      	str	r3, [r0, #20]
 80035f8:	6183      	str	r3, [r0, #24]
 80035fa:	f7fd ffd9 	bl	80015b0 <HAL_TIM_Base_Init>
 80035fe:	2800      	cmp	r0, #0
 8003600:	d113      	bne.n	800362a <MX_TIM16_Init+0x56>
 8003602:	480e      	ldr	r0, [pc, #56]	; (800363c <MX_TIM16_Init+0x68>)
 8003604:	f7fe f808 	bl	8001618 <HAL_TIM_IC_Init>
 8003608:	2800      	cmp	r0, #0
 800360a:	d111      	bne.n	8003630 <MX_TIM16_Init+0x5c>
 800360c:	2300      	movs	r3, #0
 800360e:	9300      	str	r3, [sp, #0]
 8003610:	2201      	movs	r2, #1
 8003612:	9201      	str	r2, [sp, #4]
 8003614:	9302      	str	r3, [sp, #8]
 8003616:	9303      	str	r3, [sp, #12]
 8003618:	2200      	movs	r2, #0
 800361a:	4669      	mov	r1, sp
 800361c:	4807      	ldr	r0, [pc, #28]	; (800363c <MX_TIM16_Init+0x68>)
 800361e:	f7fe f8f9 	bl	8001814 <HAL_TIM_IC_ConfigChannel>
 8003622:	2800      	cmp	r0, #0
 8003624:	d107      	bne.n	8003636 <MX_TIM16_Init+0x62>
 8003626:	b005      	add	sp, #20
 8003628:	bd00      	pop	{pc}
 800362a:	f7ff fe07 	bl	800323c <Error_Handler>
 800362e:	e7e8      	b.n	8003602 <MX_TIM16_Init+0x2e>
 8003630:	f7ff fe04 	bl	800323c <Error_Handler>
 8003634:	e7ea      	b.n	800360c <MX_TIM16_Init+0x38>
 8003636:	f7ff fe01 	bl	800323c <Error_Handler>
 800363a:	e7f4      	b.n	8003626 <MX_TIM16_Init+0x52>
 800363c:	200007a8 	.word	0x200007a8
 8003640:	40014400 	.word	0x40014400
 8003644:	0000ffff 	.word	0x0000ffff

08003648 <MX_TIM17_Init>:
 8003648:	b500      	push	{lr}
 800364a:	b085      	sub	sp, #20
 800364c:	2210      	movs	r2, #16
 800364e:	2100      	movs	r1, #0
 8003650:	4668      	mov	r0, sp
 8003652:	f000 fb03 	bl	8003c5c <memset>
 8003656:	4816      	ldr	r0, [pc, #88]	; (80036b0 <MX_TIM17_Init+0x68>)
 8003658:	4b16      	ldr	r3, [pc, #88]	; (80036b4 <MX_TIM17_Init+0x6c>)
 800365a:	6003      	str	r3, [r0, #0]
 800365c:	2301      	movs	r3, #1
 800365e:	6043      	str	r3, [r0, #4]
 8003660:	2300      	movs	r3, #0
 8003662:	6083      	str	r3, [r0, #8]
 8003664:	4a14      	ldr	r2, [pc, #80]	; (80036b8 <MX_TIM17_Init+0x70>)
 8003666:	60c2      	str	r2, [r0, #12]
 8003668:	6103      	str	r3, [r0, #16]
 800366a:	6143      	str	r3, [r0, #20]
 800366c:	6183      	str	r3, [r0, #24]
 800366e:	f7fd ff9f 	bl	80015b0 <HAL_TIM_Base_Init>
 8003672:	2800      	cmp	r0, #0
 8003674:	d113      	bne.n	800369e <MX_TIM17_Init+0x56>
 8003676:	480e      	ldr	r0, [pc, #56]	; (80036b0 <MX_TIM17_Init+0x68>)
 8003678:	f7fd ffce 	bl	8001618 <HAL_TIM_IC_Init>
 800367c:	2800      	cmp	r0, #0
 800367e:	d111      	bne.n	80036a4 <MX_TIM17_Init+0x5c>
 8003680:	2300      	movs	r3, #0
 8003682:	9300      	str	r3, [sp, #0]
 8003684:	2201      	movs	r2, #1
 8003686:	9201      	str	r2, [sp, #4]
 8003688:	9302      	str	r3, [sp, #8]
 800368a:	9303      	str	r3, [sp, #12]
 800368c:	2200      	movs	r2, #0
 800368e:	4669      	mov	r1, sp
 8003690:	4807      	ldr	r0, [pc, #28]	; (80036b0 <MX_TIM17_Init+0x68>)
 8003692:	f7fe f8bf 	bl	8001814 <HAL_TIM_IC_ConfigChannel>
 8003696:	2800      	cmp	r0, #0
 8003698:	d107      	bne.n	80036aa <MX_TIM17_Init+0x62>
 800369a:	b005      	add	sp, #20
 800369c:	bd00      	pop	{pc}
 800369e:	f7ff fdcd 	bl	800323c <Error_Handler>
 80036a2:	e7e8      	b.n	8003676 <MX_TIM17_Init+0x2e>
 80036a4:	f7ff fdca 	bl	800323c <Error_Handler>
 80036a8:	e7ea      	b.n	8003680 <MX_TIM17_Init+0x38>
 80036aa:	f7ff fdc7 	bl	800323c <Error_Handler>
 80036ae:	e7f4      	b.n	800369a <MX_TIM17_Init+0x52>
 80036b0:	20000668 	.word	0x20000668
 80036b4:	40014800 	.word	0x40014800
 80036b8:	0000ffff 	.word	0x0000ffff

080036bc <HAL_TIM_IC_MspInit>:
 80036bc:	b510      	push	{r4, lr}
 80036be:	b08a      	sub	sp, #40	; 0x28
 80036c0:	0004      	movs	r4, r0
 80036c2:	2214      	movs	r2, #20
 80036c4:	2100      	movs	r1, #0
 80036c6:	a805      	add	r0, sp, #20
 80036c8:	f000 fac8 	bl	8003c5c <memset>
 80036cc:	6823      	ldr	r3, [r4, #0]
 80036ce:	4a2a      	ldr	r2, [pc, #168]	; (8003778 <HAL_TIM_IC_MspInit+0xbc>)
 80036d0:	4293      	cmp	r3, r2
 80036d2:	d004      	beq.n	80036de <HAL_TIM_IC_MspInit+0x22>
 80036d4:	4a29      	ldr	r2, [pc, #164]	; (800377c <HAL_TIM_IC_MspInit+0xc0>)
 80036d6:	4293      	cmp	r3, r2
 80036d8:	d028      	beq.n	800372c <HAL_TIM_IC_MspInit+0x70>
 80036da:	b00a      	add	sp, #40	; 0x28
 80036dc:	bd10      	pop	{r4, pc}
 80036de:	4b28      	ldr	r3, [pc, #160]	; (8003780 <HAL_TIM_IC_MspInit+0xc4>)
 80036e0:	6999      	ldr	r1, [r3, #24]
 80036e2:	2080      	movs	r0, #128	; 0x80
 80036e4:	0100      	lsls	r0, r0, #4
 80036e6:	4301      	orrs	r1, r0
 80036e8:	6199      	str	r1, [r3, #24]
 80036ea:	699a      	ldr	r2, [r3, #24]
 80036ec:	4002      	ands	r2, r0
 80036ee:	9201      	str	r2, [sp, #4]
 80036f0:	9a01      	ldr	r2, [sp, #4]
 80036f2:	695a      	ldr	r2, [r3, #20]
 80036f4:	2180      	movs	r1, #128	; 0x80
 80036f6:	0289      	lsls	r1, r1, #10
 80036f8:	430a      	orrs	r2, r1
 80036fa:	615a      	str	r2, [r3, #20]
 80036fc:	695b      	ldr	r3, [r3, #20]
 80036fe:	400b      	ands	r3, r1
 8003700:	9302      	str	r3, [sp, #8]
 8003702:	9b02      	ldr	r3, [sp, #8]
 8003704:	2390      	movs	r3, #144	; 0x90
 8003706:	011b      	lsls	r3, r3, #4
 8003708:	9305      	str	r3, [sp, #20]
 800370a:	2302      	movs	r3, #2
 800370c:	9306      	str	r3, [sp, #24]
 800370e:	9309      	str	r3, [sp, #36]	; 0x24
 8003710:	2090      	movs	r0, #144	; 0x90
 8003712:	a905      	add	r1, sp, #20
 8003714:	05c0      	lsls	r0, r0, #23
 8003716:	f7fc fe37 	bl	8000388 <HAL_GPIO_Init>
 800371a:	2200      	movs	r2, #0
 800371c:	2100      	movs	r1, #0
 800371e:	200e      	movs	r0, #14
 8003720:	f7fc fdd8 	bl	80002d4 <HAL_NVIC_SetPriority>
 8003724:	200e      	movs	r0, #14
 8003726:	f7fc fe07 	bl	8000338 <HAL_NVIC_EnableIRQ>
 800372a:	e7d6      	b.n	80036da <HAL_TIM_IC_MspInit+0x1e>
 800372c:	4b14      	ldr	r3, [pc, #80]	; (8003780 <HAL_TIM_IC_MspInit+0xc4>)
 800372e:	6999      	ldr	r1, [r3, #24]
 8003730:	2080      	movs	r0, #128	; 0x80
 8003732:	0240      	lsls	r0, r0, #9
 8003734:	4301      	orrs	r1, r0
 8003736:	6199      	str	r1, [r3, #24]
 8003738:	699a      	ldr	r2, [r3, #24]
 800373a:	4002      	ands	r2, r0
 800373c:	9203      	str	r2, [sp, #12]
 800373e:	9a03      	ldr	r2, [sp, #12]
 8003740:	695a      	ldr	r2, [r3, #20]
 8003742:	2180      	movs	r1, #128	; 0x80
 8003744:	0289      	lsls	r1, r1, #10
 8003746:	430a      	orrs	r2, r1
 8003748:	615a      	str	r2, [r3, #20]
 800374a:	695b      	ldr	r3, [r3, #20]
 800374c:	400b      	ands	r3, r1
 800374e:	9304      	str	r3, [sp, #16]
 8003750:	9b04      	ldr	r3, [sp, #16]
 8003752:	230c      	movs	r3, #12
 8003754:	9305      	str	r3, [sp, #20]
 8003756:	3b0a      	subs	r3, #10
 8003758:	9306      	str	r3, [sp, #24]
 800375a:	2090      	movs	r0, #144	; 0x90
 800375c:	a905      	add	r1, sp, #20
 800375e:	05c0      	lsls	r0, r0, #23
 8003760:	f7fc fe12 	bl	8000388 <HAL_GPIO_Init>
 8003764:	2200      	movs	r2, #0
 8003766:	2100      	movs	r1, #0
 8003768:	2014      	movs	r0, #20
 800376a:	f7fc fdb3 	bl	80002d4 <HAL_NVIC_SetPriority>
 800376e:	2014      	movs	r0, #20
 8003770:	f7fc fde2 	bl	8000338 <HAL_NVIC_EnableIRQ>
 8003774:	e7b1      	b.n	80036da <HAL_TIM_IC_MspInit+0x1e>
 8003776:	46c0      	nop			; (mov r8, r8)
 8003778:	40012c00 	.word	0x40012c00
 800377c:	40014000 	.word	0x40014000
 8003780:	40021000 	.word	0x40021000

08003784 <HAL_TIM_Base_MspInit>:
 8003784:	b510      	push	{r4, lr}
 8003786:	b08c      	sub	sp, #48	; 0x30
 8003788:	0004      	movs	r4, r0
 800378a:	2214      	movs	r2, #20
 800378c:	2100      	movs	r1, #0
 800378e:	a807      	add	r0, sp, #28
 8003790:	f000 fa64 	bl	8003c5c <memset>
 8003794:	6823      	ldr	r3, [r4, #0]
 8003796:	4a49      	ldr	r2, [pc, #292]	; (80038bc <HAL_TIM_Base_MspInit+0x138>)
 8003798:	4293      	cmp	r3, r2
 800379a:	d00d      	beq.n	80037b8 <HAL_TIM_Base_MspInit+0x34>
 800379c:	4a48      	ldr	r2, [pc, #288]	; (80038c0 <HAL_TIM_Base_MspInit+0x13c>)
 800379e:	4293      	cmp	r3, r2
 80037a0:	d01c      	beq.n	80037dc <HAL_TIM_Base_MspInit+0x58>
 80037a2:	4a48      	ldr	r2, [pc, #288]	; (80038c4 <HAL_TIM_Base_MspInit+0x140>)
 80037a4:	4293      	cmp	r3, r2
 80037a6:	d02b      	beq.n	8003800 <HAL_TIM_Base_MspInit+0x7c>
 80037a8:	4a47      	ldr	r2, [pc, #284]	; (80038c8 <HAL_TIM_Base_MspInit+0x144>)
 80037aa:	4293      	cmp	r3, r2
 80037ac:	d03b      	beq.n	8003826 <HAL_TIM_Base_MspInit+0xa2>
 80037ae:	4a47      	ldr	r2, [pc, #284]	; (80038cc <HAL_TIM_Base_MspInit+0x148>)
 80037b0:	4293      	cmp	r3, r2
 80037b2:	d05e      	beq.n	8003872 <HAL_TIM_Base_MspInit+0xee>
 80037b4:	b00c      	add	sp, #48	; 0x30
 80037b6:	bd10      	pop	{r4, pc}
 80037b8:	4a45      	ldr	r2, [pc, #276]	; (80038d0 <HAL_TIM_Base_MspInit+0x14c>)
 80037ba:	69d1      	ldr	r1, [r2, #28]
 80037bc:	2302      	movs	r3, #2
 80037be:	4319      	orrs	r1, r3
 80037c0:	61d1      	str	r1, [r2, #28]
 80037c2:	69d2      	ldr	r2, [r2, #28]
 80037c4:	4013      	ands	r3, r2
 80037c6:	9300      	str	r3, [sp, #0]
 80037c8:	9b00      	ldr	r3, [sp, #0]
 80037ca:	2200      	movs	r2, #0
 80037cc:	2100      	movs	r1, #0
 80037ce:	2010      	movs	r0, #16
 80037d0:	f7fc fd80 	bl	80002d4 <HAL_NVIC_SetPriority>
 80037d4:	2010      	movs	r0, #16
 80037d6:	f7fc fdaf 	bl	8000338 <HAL_NVIC_EnableIRQ>
 80037da:	e7eb      	b.n	80037b4 <HAL_TIM_Base_MspInit+0x30>
 80037dc:	4a3c      	ldr	r2, [pc, #240]	; (80038d0 <HAL_TIM_Base_MspInit+0x14c>)
 80037de:	69d1      	ldr	r1, [r2, #28]
 80037e0:	2310      	movs	r3, #16
 80037e2:	4319      	orrs	r1, r3
 80037e4:	61d1      	str	r1, [r2, #28]
 80037e6:	69d2      	ldr	r2, [r2, #28]
 80037e8:	4013      	ands	r3, r2
 80037ea:	9301      	str	r3, [sp, #4]
 80037ec:	9b01      	ldr	r3, [sp, #4]
 80037ee:	2200      	movs	r2, #0
 80037f0:	2100      	movs	r1, #0
 80037f2:	2011      	movs	r0, #17
 80037f4:	f7fc fd6e 	bl	80002d4 <HAL_NVIC_SetPriority>
 80037f8:	2011      	movs	r0, #17
 80037fa:	f7fc fd9d 	bl	8000338 <HAL_NVIC_EnableIRQ>
 80037fe:	e7d9      	b.n	80037b4 <HAL_TIM_Base_MspInit+0x30>
 8003800:	4a33      	ldr	r2, [pc, #204]	; (80038d0 <HAL_TIM_Base_MspInit+0x14c>)
 8003802:	69d1      	ldr	r1, [r2, #28]
 8003804:	2080      	movs	r0, #128	; 0x80
 8003806:	0040      	lsls	r0, r0, #1
 8003808:	4301      	orrs	r1, r0
 800380a:	61d1      	str	r1, [r2, #28]
 800380c:	69d3      	ldr	r3, [r2, #28]
 800380e:	4003      	ands	r3, r0
 8003810:	9302      	str	r3, [sp, #8]
 8003812:	9b02      	ldr	r3, [sp, #8]
 8003814:	2200      	movs	r2, #0
 8003816:	2100      	movs	r1, #0
 8003818:	38ed      	subs	r0, #237	; 0xed
 800381a:	f7fc fd5b 	bl	80002d4 <HAL_NVIC_SetPriority>
 800381e:	2013      	movs	r0, #19
 8003820:	f7fc fd8a 	bl	8000338 <HAL_NVIC_EnableIRQ>
 8003824:	e7c6      	b.n	80037b4 <HAL_TIM_Base_MspInit+0x30>
 8003826:	4b2a      	ldr	r3, [pc, #168]	; (80038d0 <HAL_TIM_Base_MspInit+0x14c>)
 8003828:	6999      	ldr	r1, [r3, #24]
 800382a:	2080      	movs	r0, #128	; 0x80
 800382c:	0280      	lsls	r0, r0, #10
 800382e:	4301      	orrs	r1, r0
 8003830:	6199      	str	r1, [r3, #24]
 8003832:	699a      	ldr	r2, [r3, #24]
 8003834:	4002      	ands	r2, r0
 8003836:	9203      	str	r2, [sp, #12]
 8003838:	9a03      	ldr	r2, [sp, #12]
 800383a:	695a      	ldr	r2, [r3, #20]
 800383c:	2180      	movs	r1, #128	; 0x80
 800383e:	02c9      	lsls	r1, r1, #11
 8003840:	430a      	orrs	r2, r1
 8003842:	615a      	str	r2, [r3, #20]
 8003844:	695b      	ldr	r3, [r3, #20]
 8003846:	400b      	ands	r3, r1
 8003848:	9304      	str	r3, [sp, #16]
 800384a:	9b04      	ldr	r3, [sp, #16]
 800384c:	2380      	movs	r3, #128	; 0x80
 800384e:	005b      	lsls	r3, r3, #1
 8003850:	9307      	str	r3, [sp, #28]
 8003852:	3bfe      	subs	r3, #254	; 0xfe
 8003854:	9308      	str	r3, [sp, #32]
 8003856:	930b      	str	r3, [sp, #44]	; 0x2c
 8003858:	a907      	add	r1, sp, #28
 800385a:	481e      	ldr	r0, [pc, #120]	; (80038d4 <HAL_TIM_Base_MspInit+0x150>)
 800385c:	f7fc fd94 	bl	8000388 <HAL_GPIO_Init>
 8003860:	2200      	movs	r2, #0
 8003862:	2100      	movs	r1, #0
 8003864:	2015      	movs	r0, #21
 8003866:	f7fc fd35 	bl	80002d4 <HAL_NVIC_SetPriority>
 800386a:	2015      	movs	r0, #21
 800386c:	f7fc fd64 	bl	8000338 <HAL_NVIC_EnableIRQ>
 8003870:	e7a0      	b.n	80037b4 <HAL_TIM_Base_MspInit+0x30>
 8003872:	4b17      	ldr	r3, [pc, #92]	; (80038d0 <HAL_TIM_Base_MspInit+0x14c>)
 8003874:	6999      	ldr	r1, [r3, #24]
 8003876:	2280      	movs	r2, #128	; 0x80
 8003878:	02d2      	lsls	r2, r2, #11
 800387a:	4311      	orrs	r1, r2
 800387c:	6199      	str	r1, [r3, #24]
 800387e:	6999      	ldr	r1, [r3, #24]
 8003880:	4011      	ands	r1, r2
 8003882:	9105      	str	r1, [sp, #20]
 8003884:	9905      	ldr	r1, [sp, #20]
 8003886:	6959      	ldr	r1, [r3, #20]
 8003888:	4311      	orrs	r1, r2
 800388a:	6159      	str	r1, [r3, #20]
 800388c:	695b      	ldr	r3, [r3, #20]
 800388e:	401a      	ands	r2, r3
 8003890:	9206      	str	r2, [sp, #24]
 8003892:	9b06      	ldr	r3, [sp, #24]
 8003894:	2380      	movs	r3, #128	; 0x80
 8003896:	009b      	lsls	r3, r3, #2
 8003898:	9307      	str	r3, [sp, #28]
 800389a:	3bff      	subs	r3, #255	; 0xff
 800389c:	3bff      	subs	r3, #255	; 0xff
 800389e:	9308      	str	r3, [sp, #32]
 80038a0:	930b      	str	r3, [sp, #44]	; 0x2c
 80038a2:	a907      	add	r1, sp, #28
 80038a4:	480b      	ldr	r0, [pc, #44]	; (80038d4 <HAL_TIM_Base_MspInit+0x150>)
 80038a6:	f7fc fd6f 	bl	8000388 <HAL_GPIO_Init>
 80038aa:	2200      	movs	r2, #0
 80038ac:	2100      	movs	r1, #0
 80038ae:	2016      	movs	r0, #22
 80038b0:	f7fc fd10 	bl	80002d4 <HAL_NVIC_SetPriority>
 80038b4:	2016      	movs	r0, #22
 80038b6:	f7fc fd3f 	bl	8000338 <HAL_NVIC_EnableIRQ>
 80038ba:	e77b      	b.n	80037b4 <HAL_TIM_Base_MspInit+0x30>
 80038bc:	40000400 	.word	0x40000400
 80038c0:	40001000 	.word	0x40001000
 80038c4:	40002000 	.word	0x40002000
 80038c8:	40014400 	.word	0x40014400
 80038cc:	40014800 	.word	0x40014800
 80038d0:	40021000 	.word	0x40021000
 80038d4:	48000400 	.word	0x48000400

080038d8 <HAL_TIM_MspPostInit>:
 80038d8:	b510      	push	{r4, lr}
 80038da:	b086      	sub	sp, #24
 80038dc:	0004      	movs	r4, r0
 80038de:	2214      	movs	r2, #20
 80038e0:	2100      	movs	r1, #0
 80038e2:	a801      	add	r0, sp, #4
 80038e4:	f000 f9ba 	bl	8003c5c <memset>
 80038e8:	6822      	ldr	r2, [r4, #0]
 80038ea:	4b0d      	ldr	r3, [pc, #52]	; (8003920 <HAL_TIM_MspPostInit+0x48>)
 80038ec:	429a      	cmp	r2, r3
 80038ee:	d001      	beq.n	80038f4 <HAL_TIM_MspPostInit+0x1c>
 80038f0:	b006      	add	sp, #24
 80038f2:	bd10      	pop	{r4, pc}
 80038f4:	4a0b      	ldr	r2, [pc, #44]	; (8003924 <HAL_TIM_MspPostInit+0x4c>)
 80038f6:	6951      	ldr	r1, [r2, #20]
 80038f8:	2080      	movs	r0, #128	; 0x80
 80038fa:	02c0      	lsls	r0, r0, #11
 80038fc:	4301      	orrs	r1, r0
 80038fe:	6151      	str	r1, [r2, #20]
 8003900:	6953      	ldr	r3, [r2, #20]
 8003902:	4003      	ands	r3, r0
 8003904:	9300      	str	r3, [sp, #0]
 8003906:	9b00      	ldr	r3, [sp, #0]
 8003908:	2330      	movs	r3, #48	; 0x30
 800390a:	9301      	str	r3, [sp, #4]
 800390c:	3b2e      	subs	r3, #46	; 0x2e
 800390e:	9302      	str	r3, [sp, #8]
 8003910:	3b01      	subs	r3, #1
 8003912:	9305      	str	r3, [sp, #20]
 8003914:	a901      	add	r1, sp, #4
 8003916:	4804      	ldr	r0, [pc, #16]	; (8003928 <HAL_TIM_MspPostInit+0x50>)
 8003918:	f7fc fd36 	bl	8000388 <HAL_GPIO_Init>
 800391c:	e7e8      	b.n	80038f0 <HAL_TIM_MspPostInit+0x18>
 800391e:	46c0      	nop			; (mov r8, r8)
 8003920:	40000400 	.word	0x40000400
 8003924:	40021000 	.word	0x40021000
 8003928:	48000400 	.word	0x48000400

0800392c <MX_TIM3_Init>:
 800392c:	b500      	push	{lr}
 800392e:	b08f      	sub	sp, #60	; 0x3c
 8003930:	2214      	movs	r2, #20
 8003932:	2100      	movs	r1, #0
 8003934:	a809      	add	r0, sp, #36	; 0x24
 8003936:	f000 f991 	bl	8003c5c <memset>
 800393a:	2208      	movs	r2, #8
 800393c:	2100      	movs	r1, #0
 800393e:	a807      	add	r0, sp, #28
 8003940:	f000 f98c 	bl	8003c5c <memset>
 8003944:	221c      	movs	r2, #28
 8003946:	2100      	movs	r1, #0
 8003948:	4668      	mov	r0, sp
 800394a:	f000 f987 	bl	8003c5c <memset>
 800394e:	4829      	ldr	r0, [pc, #164]	; (80039f4 <MX_TIM3_Init+0xc8>)
 8003950:	4b29      	ldr	r3, [pc, #164]	; (80039f8 <MX_TIM3_Init+0xcc>)
 8003952:	6003      	str	r3, [r0, #0]
 8003954:	2330      	movs	r3, #48	; 0x30
 8003956:	6043      	str	r3, [r0, #4]
 8003958:	2300      	movs	r3, #0
 800395a:	6083      	str	r3, [r0, #8]
 800395c:	2263      	movs	r2, #99	; 0x63
 800395e:	60c2      	str	r2, [r0, #12]
 8003960:	6103      	str	r3, [r0, #16]
 8003962:	6183      	str	r3, [r0, #24]
 8003964:	f7fd fe24 	bl	80015b0 <HAL_TIM_Base_Init>
 8003968:	2800      	cmp	r0, #0
 800396a:	d130      	bne.n	80039ce <MX_TIM3_Init+0xa2>
 800396c:	4821      	ldr	r0, [pc, #132]	; (80039f4 <MX_TIM3_Init+0xc8>)
 800396e:	f7fd fe39 	bl	80015e4 <HAL_TIM_PWM_Init>
 8003972:	2800      	cmp	r0, #0
 8003974:	d12e      	bne.n	80039d4 <MX_TIM3_Init+0xa8>
 8003976:	2300      	movs	r3, #0
 8003978:	9309      	str	r3, [sp, #36]	; 0x24
 800397a:	930a      	str	r3, [sp, #40]	; 0x28
 800397c:	a909      	add	r1, sp, #36	; 0x24
 800397e:	481d      	ldr	r0, [pc, #116]	; (80039f4 <MX_TIM3_Init+0xc8>)
 8003980:	f7fd fffe 	bl	8001980 <HAL_TIM_SlaveConfigSynchro>
 8003984:	2800      	cmp	r0, #0
 8003986:	d128      	bne.n	80039da <MX_TIM3_Init+0xae>
 8003988:	2300      	movs	r3, #0
 800398a:	9307      	str	r3, [sp, #28]
 800398c:	9308      	str	r3, [sp, #32]
 800398e:	a907      	add	r1, sp, #28
 8003990:	4818      	ldr	r0, [pc, #96]	; (80039f4 <MX_TIM3_Init+0xc8>)
 8003992:	f7fe f88f 	bl	8001ab4 <HAL_TIMEx_MasterConfigSynchronization>
 8003996:	2800      	cmp	r0, #0
 8003998:	d122      	bne.n	80039e0 <MX_TIM3_Init+0xb4>
 800399a:	2360      	movs	r3, #96	; 0x60
 800399c:	9300      	str	r3, [sp, #0]
 800399e:	2300      	movs	r3, #0
 80039a0:	9301      	str	r3, [sp, #4]
 80039a2:	2202      	movs	r2, #2
 80039a4:	9202      	str	r2, [sp, #8]
 80039a6:	9304      	str	r3, [sp, #16]
 80039a8:	2200      	movs	r2, #0
 80039aa:	4669      	mov	r1, sp
 80039ac:	4811      	ldr	r0, [pc, #68]	; (80039f4 <MX_TIM3_Init+0xc8>)
 80039ae:	f7fd fe91 	bl	80016d4 <HAL_TIM_PWM_ConfigChannel>
 80039b2:	2800      	cmp	r0, #0
 80039b4:	d117      	bne.n	80039e6 <MX_TIM3_Init+0xba>
 80039b6:	2204      	movs	r2, #4
 80039b8:	4669      	mov	r1, sp
 80039ba:	480e      	ldr	r0, [pc, #56]	; (80039f4 <MX_TIM3_Init+0xc8>)
 80039bc:	f7fd fe8a 	bl	80016d4 <HAL_TIM_PWM_ConfigChannel>
 80039c0:	2800      	cmp	r0, #0
 80039c2:	d113      	bne.n	80039ec <MX_TIM3_Init+0xc0>
 80039c4:	480b      	ldr	r0, [pc, #44]	; (80039f4 <MX_TIM3_Init+0xc8>)
 80039c6:	f7ff ff87 	bl	80038d8 <HAL_TIM_MspPostInit>
 80039ca:	b00f      	add	sp, #60	; 0x3c
 80039cc:	bd00      	pop	{pc}
 80039ce:	f7ff fc35 	bl	800323c <Error_Handler>
 80039d2:	e7cb      	b.n	800396c <MX_TIM3_Init+0x40>
 80039d4:	f7ff fc32 	bl	800323c <Error_Handler>
 80039d8:	e7cd      	b.n	8003976 <MX_TIM3_Init+0x4a>
 80039da:	f7ff fc2f 	bl	800323c <Error_Handler>
 80039de:	e7d3      	b.n	8003988 <MX_TIM3_Init+0x5c>
 80039e0:	f7ff fc2c 	bl	800323c <Error_Handler>
 80039e4:	e7d9      	b.n	800399a <MX_TIM3_Init+0x6e>
 80039e6:	f7ff fc29 	bl	800323c <Error_Handler>
 80039ea:	e7e4      	b.n	80039b6 <MX_TIM3_Init+0x8a>
 80039ec:	f7ff fc26 	bl	800323c <Error_Handler>
 80039f0:	e7e8      	b.n	80039c4 <MX_TIM3_Init+0x98>
 80039f2:	46c0      	nop			; (mov r8, r8)
 80039f4:	200006a8 	.word	0x200006a8
 80039f8:	40000400 	.word	0x40000400

080039fc <MX_USART1_UART_Init>:
 80039fc:	b510      	push	{r4, lr}
 80039fe:	480d      	ldr	r0, [pc, #52]	; (8003a34 <MX_USART1_UART_Init+0x38>)
 8003a00:	4b0d      	ldr	r3, [pc, #52]	; (8003a38 <MX_USART1_UART_Init+0x3c>)
 8003a02:	6003      	str	r3, [r0, #0]
 8003a04:	2396      	movs	r3, #150	; 0x96
 8003a06:	021b      	lsls	r3, r3, #8
 8003a08:	6043      	str	r3, [r0, #4]
 8003a0a:	2300      	movs	r3, #0
 8003a0c:	6083      	str	r3, [r0, #8]
 8003a0e:	60c3      	str	r3, [r0, #12]
 8003a10:	6103      	str	r3, [r0, #16]
 8003a12:	220c      	movs	r2, #12
 8003a14:	6142      	str	r2, [r0, #20]
 8003a16:	6183      	str	r3, [r0, #24]
 8003a18:	61c3      	str	r3, [r0, #28]
 8003a1a:	6203      	str	r3, [r0, #32]
 8003a1c:	6243      	str	r3, [r0, #36]	; 0x24
 8003a1e:	2200      	movs	r2, #0
 8003a20:	2100      	movs	r1, #0
 8003a22:	f7fe fbc5 	bl	80021b0 <HAL_RS485Ex_Init>
 8003a26:	2800      	cmp	r0, #0
 8003a28:	d100      	bne.n	8003a2c <MX_USART1_UART_Init+0x30>
 8003a2a:	bd10      	pop	{r4, pc}
 8003a2c:	f7ff fc06 	bl	800323c <Error_Handler>
 8003a30:	e7fb      	b.n	8003a2a <MX_USART1_UART_Init+0x2e>
 8003a32:	46c0      	nop			; (mov r8, r8)
 8003a34:	200007e8 	.word	0x200007e8
 8003a38:	40013800 	.word	0x40013800

08003a3c <HAL_UART_MspInit>:
 8003a3c:	b510      	push	{r4, lr}
 8003a3e:	b088      	sub	sp, #32
 8003a40:	0004      	movs	r4, r0
 8003a42:	2214      	movs	r2, #20
 8003a44:	2100      	movs	r1, #0
 8003a46:	a803      	add	r0, sp, #12
 8003a48:	f000 f908 	bl	8003c5c <memset>
 8003a4c:	6822      	ldr	r2, [r4, #0]
 8003a4e:	4b13      	ldr	r3, [pc, #76]	; (8003a9c <HAL_UART_MspInit+0x60>)
 8003a50:	429a      	cmp	r2, r3
 8003a52:	d001      	beq.n	8003a58 <HAL_UART_MspInit+0x1c>
 8003a54:	b008      	add	sp, #32
 8003a56:	bd10      	pop	{r4, pc}
 8003a58:	4b11      	ldr	r3, [pc, #68]	; (8003aa0 <HAL_UART_MspInit+0x64>)
 8003a5a:	6999      	ldr	r1, [r3, #24]
 8003a5c:	2080      	movs	r0, #128	; 0x80
 8003a5e:	01c0      	lsls	r0, r0, #7
 8003a60:	4301      	orrs	r1, r0
 8003a62:	6199      	str	r1, [r3, #24]
 8003a64:	699a      	ldr	r2, [r3, #24]
 8003a66:	4002      	ands	r2, r0
 8003a68:	9201      	str	r2, [sp, #4]
 8003a6a:	9a01      	ldr	r2, [sp, #4]
 8003a6c:	695a      	ldr	r2, [r3, #20]
 8003a6e:	2180      	movs	r1, #128	; 0x80
 8003a70:	0289      	lsls	r1, r1, #10
 8003a72:	430a      	orrs	r2, r1
 8003a74:	615a      	str	r2, [r3, #20]
 8003a76:	695b      	ldr	r3, [r3, #20]
 8003a78:	400b      	ands	r3, r1
 8003a7a:	9302      	str	r3, [sp, #8]
 8003a7c:	9b02      	ldr	r3, [sp, #8]
 8003a7e:	23b0      	movs	r3, #176	; 0xb0
 8003a80:	015b      	lsls	r3, r3, #5
 8003a82:	9303      	str	r3, [sp, #12]
 8003a84:	2302      	movs	r3, #2
 8003a86:	9304      	str	r3, [sp, #16]
 8003a88:	3301      	adds	r3, #1
 8003a8a:	9306      	str	r3, [sp, #24]
 8003a8c:	3b02      	subs	r3, #2
 8003a8e:	9307      	str	r3, [sp, #28]
 8003a90:	2090      	movs	r0, #144	; 0x90
 8003a92:	a903      	add	r1, sp, #12
 8003a94:	05c0      	lsls	r0, r0, #23
 8003a96:	f7fc fc77 	bl	8000388 <HAL_GPIO_Init>
 8003a9a:	e7db      	b.n	8003a54 <HAL_UART_MspInit+0x18>
 8003a9c:	40013800 	.word	0x40013800
 8003aa0:	40021000 	.word	0x40021000

08003aa4 <Uart1_Init>:
 8003aa4:	b510      	push	{r4, lr}
 8003aa6:	2806      	cmp	r0, #6
 8003aa8:	d82c      	bhi.n	8003b04 <Uart1_Init+0x60>
 8003aaa:	0080      	lsls	r0, r0, #2
 8003aac:	4b40      	ldr	r3, [pc, #256]	; (8003bb0 <Uart1_Init+0x10c>)
 8003aae:	581b      	ldr	r3, [r3, r0]
 8003ab0:	469f      	mov	pc, r3
 8003ab2:	4b40      	ldr	r3, [pc, #256]	; (8003bb4 <Uart1_Init+0x110>)
 8003ab4:	2296      	movs	r2, #150	; 0x96
 8003ab6:	00d2      	lsls	r2, r2, #3
 8003ab8:	605a      	str	r2, [r3, #4]
 8003aba:	2905      	cmp	r1, #5
 8003abc:	d900      	bls.n	8003ac0 <Uart1_Init+0x1c>
 8003abe:	e06e      	b.n	8003b9e <Uart1_Init+0xfa>
 8003ac0:	0089      	lsls	r1, r1, #2
 8003ac2:	4b3d      	ldr	r3, [pc, #244]	; (8003bb8 <Uart1_Init+0x114>)
 8003ac4:	585b      	ldr	r3, [r3, r1]
 8003ac6:	469f      	mov	pc, r3
 8003ac8:	4b3a      	ldr	r3, [pc, #232]	; (8003bb4 <Uart1_Init+0x110>)
 8003aca:	2296      	movs	r2, #150	; 0x96
 8003acc:	0112      	lsls	r2, r2, #4
 8003ace:	605a      	str	r2, [r3, #4]
 8003ad0:	e7f3      	b.n	8003aba <Uart1_Init+0x16>
 8003ad2:	4b38      	ldr	r3, [pc, #224]	; (8003bb4 <Uart1_Init+0x110>)
 8003ad4:	2296      	movs	r2, #150	; 0x96
 8003ad6:	0152      	lsls	r2, r2, #5
 8003ad8:	605a      	str	r2, [r3, #4]
 8003ada:	e7ee      	b.n	8003aba <Uart1_Init+0x16>
 8003adc:	4b35      	ldr	r3, [pc, #212]	; (8003bb4 <Uart1_Init+0x110>)
 8003ade:	2296      	movs	r2, #150	; 0x96
 8003ae0:	0192      	lsls	r2, r2, #6
 8003ae2:	605a      	str	r2, [r3, #4]
 8003ae4:	e7e9      	b.n	8003aba <Uart1_Init+0x16>
 8003ae6:	4b33      	ldr	r3, [pc, #204]	; (8003bb4 <Uart1_Init+0x110>)
 8003ae8:	2296      	movs	r2, #150	; 0x96
 8003aea:	01d2      	lsls	r2, r2, #7
 8003aec:	605a      	str	r2, [r3, #4]
 8003aee:	e7e4      	b.n	8003aba <Uart1_Init+0x16>
 8003af0:	4b30      	ldr	r3, [pc, #192]	; (8003bb4 <Uart1_Init+0x110>)
 8003af2:	2296      	movs	r2, #150	; 0x96
 8003af4:	0212      	lsls	r2, r2, #8
 8003af6:	605a      	str	r2, [r3, #4]
 8003af8:	e7df      	b.n	8003aba <Uart1_Init+0x16>
 8003afa:	4b2e      	ldr	r3, [pc, #184]	; (8003bb4 <Uart1_Init+0x110>)
 8003afc:	22e1      	movs	r2, #225	; 0xe1
 8003afe:	0212      	lsls	r2, r2, #8
 8003b00:	605a      	str	r2, [r3, #4]
 8003b02:	e7da      	b.n	8003aba <Uart1_Init+0x16>
 8003b04:	4b2b      	ldr	r3, [pc, #172]	; (8003bb4 <Uart1_Init+0x110>)
 8003b06:	2296      	movs	r2, #150	; 0x96
 8003b08:	0192      	lsls	r2, r2, #6
 8003b0a:	605a      	str	r2, [r3, #4]
 8003b0c:	e7d5      	b.n	8003aba <Uart1_Init+0x16>
 8003b0e:	4b29      	ldr	r3, [pc, #164]	; (8003bb4 <Uart1_Init+0x110>)
 8003b10:	2200      	movs	r2, #0
 8003b12:	609a      	str	r2, [r3, #8]
 8003b14:	611a      	str	r2, [r3, #16]
 8003b16:	60da      	str	r2, [r3, #12]
 8003b18:	4826      	ldr	r0, [pc, #152]	; (8003bb4 <Uart1_Init+0x110>)
 8003b1a:	4b28      	ldr	r3, [pc, #160]	; (8003bbc <Uart1_Init+0x118>)
 8003b1c:	6003      	str	r3, [r0, #0]
 8003b1e:	230c      	movs	r3, #12
 8003b20:	6143      	str	r3, [r0, #20]
 8003b22:	2300      	movs	r3, #0
 8003b24:	6183      	str	r3, [r0, #24]
 8003b26:	61c3      	str	r3, [r0, #28]
 8003b28:	6203      	str	r3, [r0, #32]
 8003b2a:	6243      	str	r3, [r0, #36]	; 0x24
 8003b2c:	2200      	movs	r2, #0
 8003b2e:	2100      	movs	r1, #0
 8003b30:	f7fe fb3e 	bl	80021b0 <HAL_RS485Ex_Init>
 8003b34:	2800      	cmp	r0, #0
 8003b36:	d138      	bne.n	8003baa <Uart1_Init+0x106>
 8003b38:	bd10      	pop	{r4, pc}
 8003b3a:	4b1e      	ldr	r3, [pc, #120]	; (8003bb4 <Uart1_Init+0x110>)
 8003b3c:	2200      	movs	r2, #0
 8003b3e:	609a      	str	r2, [r3, #8]
 8003b40:	611a      	str	r2, [r3, #16]
 8003b42:	2280      	movs	r2, #128	; 0x80
 8003b44:	0192      	lsls	r2, r2, #6
 8003b46:	60da      	str	r2, [r3, #12]
 8003b48:	e7e6      	b.n	8003b18 <Uart1_Init+0x74>
 8003b4a:	4b1a      	ldr	r3, [pc, #104]	; (8003bb4 <Uart1_Init+0x110>)
 8003b4c:	2280      	movs	r2, #128	; 0x80
 8003b4e:	0152      	lsls	r2, r2, #5
 8003b50:	609a      	str	r2, [r3, #8]
 8003b52:	22c0      	movs	r2, #192	; 0xc0
 8003b54:	00d2      	lsls	r2, r2, #3
 8003b56:	611a      	str	r2, [r3, #16]
 8003b58:	2200      	movs	r2, #0
 8003b5a:	60da      	str	r2, [r3, #12]
 8003b5c:	e7dc      	b.n	8003b18 <Uart1_Init+0x74>
 8003b5e:	4b15      	ldr	r3, [pc, #84]	; (8003bb4 <Uart1_Init+0x110>)
 8003b60:	2280      	movs	r2, #128	; 0x80
 8003b62:	0152      	lsls	r2, r2, #5
 8003b64:	609a      	str	r2, [r3, #8]
 8003b66:	22c0      	movs	r2, #192	; 0xc0
 8003b68:	00d2      	lsls	r2, r2, #3
 8003b6a:	611a      	str	r2, [r3, #16]
 8003b6c:	2280      	movs	r2, #128	; 0x80
 8003b6e:	0192      	lsls	r2, r2, #6
 8003b70:	60da      	str	r2, [r3, #12]
 8003b72:	e7d1      	b.n	8003b18 <Uart1_Init+0x74>
 8003b74:	4b0f      	ldr	r3, [pc, #60]	; (8003bb4 <Uart1_Init+0x110>)
 8003b76:	2280      	movs	r2, #128	; 0x80
 8003b78:	0152      	lsls	r2, r2, #5
 8003b7a:	609a      	str	r2, [r3, #8]
 8003b7c:	2280      	movs	r2, #128	; 0x80
 8003b7e:	00d2      	lsls	r2, r2, #3
 8003b80:	611a      	str	r2, [r3, #16]
 8003b82:	2200      	movs	r2, #0
 8003b84:	60da      	str	r2, [r3, #12]
 8003b86:	e7c7      	b.n	8003b18 <Uart1_Init+0x74>
 8003b88:	4b0a      	ldr	r3, [pc, #40]	; (8003bb4 <Uart1_Init+0x110>)
 8003b8a:	2280      	movs	r2, #128	; 0x80
 8003b8c:	0152      	lsls	r2, r2, #5
 8003b8e:	609a      	str	r2, [r3, #8]
 8003b90:	2280      	movs	r2, #128	; 0x80
 8003b92:	00d2      	lsls	r2, r2, #3
 8003b94:	611a      	str	r2, [r3, #16]
 8003b96:	2280      	movs	r2, #128	; 0x80
 8003b98:	0192      	lsls	r2, r2, #6
 8003b9a:	60da      	str	r2, [r3, #12]
 8003b9c:	e7bc      	b.n	8003b18 <Uart1_Init+0x74>
 8003b9e:	4b05      	ldr	r3, [pc, #20]	; (8003bb4 <Uart1_Init+0x110>)
 8003ba0:	2200      	movs	r2, #0
 8003ba2:	609a      	str	r2, [r3, #8]
 8003ba4:	611a      	str	r2, [r3, #16]
 8003ba6:	60da      	str	r2, [r3, #12]
 8003ba8:	e7b6      	b.n	8003b18 <Uart1_Init+0x74>
 8003baa:	f7ff fb47 	bl	800323c <Error_Handler>
 8003bae:	e7c3      	b.n	8003b38 <Uart1_Init+0x94>
 8003bb0:	08003ef4 	.word	0x08003ef4
 8003bb4:	200007e8 	.word	0x200007e8
 8003bb8:	08003f10 	.word	0x08003f10
 8003bbc:	40013800 	.word	0x40013800

08003bc0 <Reset_Handler>:
 8003bc0:	480d      	ldr	r0, [pc, #52]	; (8003bf8 <LoopForever+0x2>)
 8003bc2:	4685      	mov	sp, r0
 8003bc4:	480d      	ldr	r0, [pc, #52]	; (8003bfc <LoopForever+0x6>)
 8003bc6:	490e      	ldr	r1, [pc, #56]	; (8003c00 <LoopForever+0xa>)
 8003bc8:	4a0e      	ldr	r2, [pc, #56]	; (8003c04 <LoopForever+0xe>)
 8003bca:	2300      	movs	r3, #0
 8003bcc:	e002      	b.n	8003bd4 <LoopCopyDataInit>

08003bce <CopyDataInit>:
 8003bce:	58d4      	ldr	r4, [r2, r3]
 8003bd0:	50c4      	str	r4, [r0, r3]
 8003bd2:	3304      	adds	r3, #4

08003bd4 <LoopCopyDataInit>:
 8003bd4:	18c4      	adds	r4, r0, r3
 8003bd6:	428c      	cmp	r4, r1
 8003bd8:	d3f9      	bcc.n	8003bce <CopyDataInit>
 8003bda:	4a0b      	ldr	r2, [pc, #44]	; (8003c08 <LoopForever+0x12>)
 8003bdc:	4c0b      	ldr	r4, [pc, #44]	; (8003c0c <LoopForever+0x16>)
 8003bde:	2300      	movs	r3, #0
 8003be0:	e001      	b.n	8003be6 <LoopFillZerobss>

08003be2 <FillZerobss>:
 8003be2:	6013      	str	r3, [r2, #0]
 8003be4:	3204      	adds	r2, #4

08003be6 <LoopFillZerobss>:
 8003be6:	42a2      	cmp	r2, r4
 8003be8:	d3fb      	bcc.n	8003be2 <FillZerobss>
 8003bea:	f7ff fc26 	bl	800343a <SystemInit>
 8003bee:	f000 f811 	bl	8003c14 <__libc_init_array>
 8003bf2:	f7ff fac7 	bl	8003184 <main>

08003bf6 <LoopForever>:
 8003bf6:	e7fe      	b.n	8003bf6 <LoopForever>
 8003bf8:	20002000 	.word	0x20002000
 8003bfc:	20000000 	.word	0x20000000
 8003c00:	20000018 	.word	0x20000018
 8003c04:	08003f30 	.word	0x08003f30
 8003c08:	20000018 	.word	0x20000018
 8003c0c:	20000868 	.word	0x20000868

08003c10 <ADC1_IRQHandler>:
 8003c10:	e7fe      	b.n	8003c10 <ADC1_IRQHandler>
	...

08003c14 <__libc_init_array>:
 8003c14:	b570      	push	{r4, r5, r6, lr}
 8003c16:	2600      	movs	r6, #0
 8003c18:	4d0c      	ldr	r5, [pc, #48]	; (8003c4c <__libc_init_array+0x38>)
 8003c1a:	4c0d      	ldr	r4, [pc, #52]	; (8003c50 <__libc_init_array+0x3c>)
 8003c1c:	1b64      	subs	r4, r4, r5
 8003c1e:	10a4      	asrs	r4, r4, #2
 8003c20:	42a6      	cmp	r6, r4
 8003c22:	d109      	bne.n	8003c38 <__libc_init_array+0x24>
 8003c24:	2600      	movs	r6, #0
 8003c26:	f000 f821 	bl	8003c6c <_init>
 8003c2a:	4d0a      	ldr	r5, [pc, #40]	; (8003c54 <__libc_init_array+0x40>)
 8003c2c:	4c0a      	ldr	r4, [pc, #40]	; (8003c58 <__libc_init_array+0x44>)
 8003c2e:	1b64      	subs	r4, r4, r5
 8003c30:	10a4      	asrs	r4, r4, #2
 8003c32:	42a6      	cmp	r6, r4
 8003c34:	d105      	bne.n	8003c42 <__libc_init_array+0x2e>
 8003c36:	bd70      	pop	{r4, r5, r6, pc}
 8003c38:	00b3      	lsls	r3, r6, #2
 8003c3a:	58eb      	ldr	r3, [r5, r3]
 8003c3c:	4798      	blx	r3
 8003c3e:	3601      	adds	r6, #1
 8003c40:	e7ee      	b.n	8003c20 <__libc_init_array+0xc>
 8003c42:	00b3      	lsls	r3, r6, #2
 8003c44:	58eb      	ldr	r3, [r5, r3]
 8003c46:	4798      	blx	r3
 8003c48:	3601      	adds	r6, #1
 8003c4a:	e7f2      	b.n	8003c32 <__libc_init_array+0x1e>
 8003c4c:	08003f28 	.word	0x08003f28
 8003c50:	08003f28 	.word	0x08003f28
 8003c54:	08003f28 	.word	0x08003f28
 8003c58:	08003f2c 	.word	0x08003f2c

08003c5c <memset>:
 8003c5c:	0003      	movs	r3, r0
 8003c5e:	1812      	adds	r2, r2, r0
 8003c60:	4293      	cmp	r3, r2
 8003c62:	d100      	bne.n	8003c66 <memset+0xa>
 8003c64:	4770      	bx	lr
 8003c66:	7019      	strb	r1, [r3, #0]
 8003c68:	3301      	adds	r3, #1
 8003c6a:	e7f9      	b.n	8003c60 <memset+0x4>

08003c6c <_init>:
 8003c6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c6e:	46c0      	nop			; (mov r8, r8)
 8003c70:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c72:	bc08      	pop	{r3}
 8003c74:	469e      	mov	lr, r3
 8003c76:	4770      	bx	lr

08003c78 <_fini>:
 8003c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003c7a:	46c0      	nop			; (mov r8, r8)
 8003c7c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8003c7e:	bc08      	pop	{r3}
 8003c80:	469e      	mov	lr, r3
 8003c82:	4770      	bx	lr
